name: CI

on:
  push:
    branches: ["**"]
  pull_request:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint, type-check, format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.13.1

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Lint
        run: pnpm lint

      - name: Format check
        run: pnpm format:check

      - name: Type check
        run: pnpm type-check

  unit-tests:
    name: Root tests
    runs-on: ubuntu-latest
    env:
      PRISMA_CLIENT_ENGINE_TYPE: wasm
      CI: true
      TEST_PARALLEL: true
      TEST_VERBOSE: false
      TEST_API_URL: http://localhost:3000
      DISABLE_AUTH: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.13.1

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Generate Prisma clients
        run: pnpm prisma:generate:all

      - name: Run root tests
        run: pnpm run test:ci

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: test-reports/

  api-tests:
    name: API Jest tests
    runs-on: ubuntu-latest
    env:
      PRISMA_CLIENT_ENGINE_TYPE: wasm
      CI: true
      DISABLE_AUTH: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.13.1

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install API deps
        run: pnpm -C apps/api install --no-frozen-lockfile

      - name: Run API tests
        run: pnpm -C apps/api test -- --runInBand --ci

  orbit-unit:
    name: Orbit unit tests
    runs-on: ubuntu-latest
    if: false  # Disabled - apps/orbit does not exist
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.13.1

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install Orbit deps
        run: pnpm -C apps/orbit install --no-frozen-lockfile

      - name: Run Orbit unit tests
        run: pnpm -C apps/orbit test -- --ci --runInBand

  orbit-e2e:
    name: Orbit Playwright e2e
    runs-on: ubuntu-latest
    needs: [orbit-unit]
    if: false  # Disabled - apps/orbit does not exist
    timeout-minutes: 30
    env:
      CI: true
      PLAYWRIGHT_HTML_REPORT: playwright-report
      DISABLE_AUTH: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.13.1

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install Orbit deps
        run: pnpm -C apps/orbit install --no-frozen-lockfile

      - name: Install Playwright browsers
        uses: microsoft/playwright-github-action@v1

      - name: Run Playwright tests
        run: pnpm -C apps/orbit test:e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: orbit-playwright-report
          path: apps/orbit/playwright-report


