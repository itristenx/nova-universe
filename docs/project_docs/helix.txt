Here is the complete explanation and implementation markdown document for Nova Helix, the identity and role management engine powering Nova ID.

‚∏ª


# Nova Helix: Identity & Access Management Engine

## Overview

**Nova Helix** is the centralized identity, authentication, and authorization engine for the **Nova Universe**. It powers **Nova ID**, the user account system that spans all modules and services. Helix ensures secure login, role-based access control (RBAC), SCIM provisioning, SSO integrations, and granular feature-level permissions across all Nova platforms.

Nova Helix is enterprise-ready, developer-friendly, and fully compliant with identity standards including OAuth2, OpenID Connect, and SCIM 2.0.

---

## Core Responsibilities

- ‚úÖ Authentication (Local + SSO via Okta, Entra ID, etc.)
- ‚úÖ Role-based Access Control (RBAC)
- ‚úÖ Identity federation (SCIM, Just-in-Time provisioning)
- ‚úÖ Multi-Tenant aware identity handling
- ‚úÖ Unified session and token management (JWT/OAuth2)
- ‚úÖ Identity lifecycle management (onboarding ‚Üí deactivation)
- ‚úÖ Consent and terms tracking (per org/policy)
- ‚úÖ Metadata and policy store for org/user-level configs

---

## Modules & Subsystems

### 1. **Auth Engine**
- Local Auth (Email/Password, OTP)
- SSO via SAML2, OIDC (Okta, Entra, Google, etc.)
- Token Issuance (OAuth2/OIDC-compliant JWTs)
- Session and Refresh Token Management
- MFA hooks (Pluggable: TOTP, WebAuthn, SMS)

### 2. **RBAC Engine**
- Role hierarchy engine with support for:
  - `end_user`, `tech`, `tech_lead`, `admin`, `pulse_lead`, `ops_lead`, `hr_lead`, etc.
- Scoped role access by:
  - Org
  - Sub-module
  - Feature flag

### 3. **SCIM & Directory Sync**
- SCIM 2.0 endpoint
- Inbound sync from:
  - Okta
  - Azure Entra ID
  - Google Workspace
- Just-in-Time Provisioning support
- Automatic deprovisioning on role/group change

### 4. **Nova ID Engine**
- Unique ID across Nova Universe
- XP, Rank, and History Tracking
- Modular metadata for user profile (locale, theme, preferences)
- Public/Private profile model

### 5. **Audit & Compliance**
- Full identity audit logs
- Access grant/revoke history
- Consent logs (terms, policy changes)
- GDPR/CCPA delete request flows

---

## Database Schema (PostgreSQL + Redis + Optional Mongo for profile)

### PostgreSQL: Core Identity Tables
```sql
users (
  id UUID PRIMARY KEY,
  email TEXT UNIQUE NOT NULL,
  passwordHash TEXT,
  sso_provider TEXT,
  org_id UUID,
  created_at TIMESTAMP,
  updated_at TIMESTAMP,
  status ENUM('active', 'suspended', 'deleted'),
  metadata JSONB
)

roles (
  id UUID PRIMARY KEY,
  name TEXT,
  description TEXT,
  is_default BOOLEAN
)

user_roles (
  user_id UUID,
  role_id UUID,
  module TEXT,
  sub_module TEXT,
  org_scope UUID,
  PRIMARY KEY (user_id, role_id, module, sub_module)
)

scim_mappings (
  id UUID PRIMARY KEY,
  external_id TEXT,
  user_id UUID,
  provider TEXT,
  sync_time TIMESTAMP
)

Redis (for Session, JIT caching, SSO assertions)
	‚Ä¢	session:<token> ‚Üí stores short-lived session info
	‚Ä¢	sso:<org>:metadata ‚Üí SAML or OIDC metadata cache

‚∏ª

APIs

Authentication
	‚Ä¢	POST /auth/login
	‚Ä¢	POST /auth/sso/:provider/callback
	‚Ä¢	POST /auth/mfa/verify
	‚Ä¢	GET /auth/session
	‚Ä¢	POST /auth/logout

Identity & Roles
	‚Ä¢	GET /me
	‚Ä¢	GET /users/:id
	‚Ä¢	PATCH /users/:id
	‚Ä¢	GET /users/:id/roles
	‚Ä¢	POST /users/:id/roles (assign)
	‚Ä¢	DELETE /users/:id/roles/:role

SCIM
	‚Ä¢	GET /scim/v2/Users
	‚Ä¢	POST /scim/v2/Users
	‚Ä¢	PATCH /scim/v2/Users/:id
	‚Ä¢	DELETE /scim/v2/Users/:id

‚∏ª

SSO Provider Support (via OIDC/SAML)

Provider	Protocol	SCIM	Notes
Okta	OIDC/SAML	‚úÖ	Preferred enterprise option
Azure Entra ID	OIDC/SAML	‚úÖ	Requires Entra app setup
Google Workspace	OIDC	‚ö†Ô∏è Partial	SCIM requires premium tier
OneLogin	SAML	‚úÖ	


‚∏ª

Permissions Model

Helix enables central role assignment, while modules like Pulse/Orbit interpret these with feature flags.

Example: Role-Based Feature Control

{
  "user_id": "abc-123",
  "roles": ["tech"],
  "permissions": {
    "pulse.incidents.create": true,
    "pulse.reports.view": false,
    "orbit.kiosk.submit": true
  }
}


‚∏ª

Integration with Other Nova Modules

Module	Integration Details
Nova Pulse	Tech access, submodule (IT/HR/Ops) gates, queue access
Nova Orbit	End user access, self-service forms, profile sync
Nova Beacon	Auth on kiosk, limited metadata sync
Nova Core	Admin controls, org metadata, compliance policies
Nova Mailroom	Email identity mapping to users, alerting if unknown sender
Nova Lore	Contribution tracking tied to Nova ID
Nova Synth	Tracks and evaluates identity XP, usage, behavior
Nova Deck	Personalized app access panel based on roles and feature gates


‚∏ª

Deployment & Configuration

Environment Variables

HELIX_JWT_SECRET=
HELIX_DB_URL=
HELIX_REDIS_URL=
HELIX_SAML_CERT_PATH=
HELIX_SCIM_ENABLED=true
HELIX_OKTA_CLIENT_ID=
HELIX_OKTA_CLIENT_SECRET=

Recommended Architecture

[Frontend Modules] ‚Üí [Nova API Gateway] ‚Üí [Nova Helix Service]
                                       ‚Üò [PostgreSQL]
                                       ‚Üò [Redis]
                                       ‚Üò [SCIM Providers]

Helm/Container Setup
	‚Ä¢	Containerized via Docker
	‚Ä¢	Helm chart for K8s deployment
	‚Ä¢	Can be deployed as standalone microservice or embedded

‚∏ª

Security Best Practices
	‚Ä¢	Salted password hashing (bcrypt or Argon2)
	‚Ä¢	OIDC-compliant token validation (JWT + JTI)
	‚Ä¢	Rate limiting and brute-force protection
	‚Ä¢	Consent enforcement + audit trail
	‚Ä¢	SCIM token rotation and scoping

‚∏ª

Admin Portal Features (via Nova Core)
	‚Ä¢	View/edit users
	‚Ä¢	Impersonation
	‚Ä¢	Force password reset / MFA config
	‚Ä¢	Audit logs viewer
	‚Ä¢	Org-level role template management
	‚Ä¢	SSO setup (per-tenant metadata)
	‚Ä¢	SCIM config and test tool

‚∏ª

Future Roadmap
	‚Ä¢	üîê Device-based auth policies
	‚Ä¢	üì± Mobile push MFA integration
	‚Ä¢	üß† Behavior-based access flags (powered by Cosmo)
	‚Ä¢	üß© Delegated administration per org
	‚Ä¢	ü™™ DID / Verifiable Credentials (VCs) support
	‚Ä¢	üìä Insights dashboard (logins, access patterns)

‚∏ª

Summary

Nova Helix is the heart of identity, roles, and access for the Nova Universe. It powers secure, scalable, and modular authentication and authorization, supporting modern identity standards while giving teams full control over roles and permissions across all Nova modules.

‚ÄúNova ID, powered by Helix ‚Äî identity that scales with your galaxy.‚Äù

---

