Here is a full breakdown and implementation plan for Nova Deck, the central launchpad of the Nova Universe:

‚∏ª

ü™ê Nova Deck

Type: Core Module
Purpose: Centralized portal and launchpad for all Nova Universe modules
Users: All roles (End Users, Technicians, Admins, Leads, Executives)

‚∏ª

üîç Overview

Nova Deck is the unified, brandable, access-aware dashboard that serves as the central entry point for the entire Nova Universe. It dynamically renders module access, alerts, shortcuts, branding, and user-specific data based on RBAC and tenant configurations. Think of it as the ‚Äúmission control‚Äù of the Nova Universe.

‚∏ª

üß© Key Features

1. Dynamic App Grid (Universal Launcher)
	‚Ä¢	Auto-displays only the modules user has access to (based on Helix/SCIM roles)
	‚Ä¢	Supports:
	‚Ä¢	Custom icons and names
	‚Ä¢	Module deep links (e.g., open Pulse directly in HR queue)
	‚Ä¢	Hover tooltips / module descriptions
	‚Ä¢	Modules include: Orbit, Pulse, Lore, Core, Mailroom, Beacon, Inventory, Forge, Admin, Comms, Synth, etc.

2. Unified Notification Center
	‚Ä¢	Displays alerts from:
	‚Ä¢	Workflow engine (Nova Core)
	‚Ä¢	Pulse (assigned tickets, escalations)
	‚Ä¢	GoAlert (alerts for on-call)
	‚Ä¢	Orbit (status changes, form approvals)
	‚Ä¢	Cosmo (AI nudges, suggestions)
	‚Ä¢	Supports filters, grouping, and pinning

3. Cosmo Panel (AI Assistant Sidebar)
	‚Ä¢	AI Assistant docked or collapsible panel
	‚Ä¢	Persistent across Deck
	‚Ä¢	Responds with:
	‚Ä¢	Status of tickets
	‚Ä¢	Guidance through modules
	‚Ä¢	Help with policies
	‚Ä¢	Navigational aid

4. Tenant + Theme Switcher
	‚Ä¢	For MSPs or federated orgs:
	‚Ä¢	Switch between multiple Nova environments (tenants)
	‚Ä¢	For end users:
	‚Ä¢	Theme switcher (light/dark + brand skin if allowed)

5. Quick Actions Bar
	‚Ä¢	Context-aware shortcuts:
	‚Ä¢	‚ÄúOpen Ticket‚Äù
	‚Ä¢	‚ÄúSearch Knowledge Base‚Äù
	‚Ä¢	‚ÄúGo On Call‚Äù
	‚Ä¢	‚ÄúRun Workflow‚Äù
	‚Ä¢	‚ÄúImport Asset‚Äù
	‚Ä¢	Customizable per role

6. Recent Activity Feed
	‚Ä¢	Unified cross-module history
	‚Ä¢	Recently opened tickets
	‚Ä¢	Last viewed article
	‚Ä¢	Device assigned
	‚Ä¢	Supports Cosmo summarization

7. Bookmarks + Pinned Items
	‚Ä¢	User-custom bookmarks
	‚Ä¢	Persistent across sessions
	‚Ä¢	Support deep-linking into modules or specific actions

‚∏ª

üß± Submodules

Submodule	Description
Deck Shell	Core UI shell used across all Nova frontends for unified look and feel
Deck App Grid	Dynamically rendered module launcher
Deck Notifications	Unified system for cross-module alerts
Deck Cosmo Panel	Dockable assistant powered by Cosmo
Deck Admin	(For global admins) control what modules are visible per tenant/role
Deck Metrics	Optional global KPI dashboard for exec users or admins
Deck Onboarding	First-time wizard to guide new users based on role


‚∏ª

üë§ Role-based Experience

Role	Deck Experience
End User	Access to Orbit, Mailroom, Cosmo, limited Pulse (requests only)
Technician	Quick links to queues in Pulse, alerts via GoAlert, asset import shortcuts
Admin	Access to all modules + Deck Admin + metrics + settings
Lead	Cross-module visibility for their domain (e.g., HR Lead sees HR Pulse metrics)
Executive	High-level metrics, trend graphs, access to Deck Metrics module


‚∏ª

üé® Branding Support
	‚Ä¢	Fully white-label capable
	‚Ä¢	Supports:
	‚Ä¢	Custom logo in top left
	‚Ä¢	Theme override per tenant
	‚Ä¢	URL: deck.novauniverse.{tld} or tenant subdomain
	‚Ä¢	Mobile and iPad-optimized (also launching Nova Mobile from here)

‚∏ª

üß† AI Integration (Cosmo)
	‚Ä¢	Cosmo helps you navigate the Nova Universe, perform actions, and find insights.
	‚Ä¢	Example prompts:
	‚Ä¢	‚ÄúShow my last 5 tickets‚Äù
	‚Ä¢	‚ÄúCreate a new onboarding request for Taylor‚Äù
	‚Ä¢	‚ÄúWhat‚Äôs the SLA for VIP hardware delivery?‚Äù

‚∏ª

üîí Security & Access
	‚Ä¢	Access controlled via Nova Helix (SCIM + SSO)
	‚Ä¢	All modules require valid Nova ID session
	‚Ä¢	RBAC is used to:
	‚Ä¢	Show/hide modules
	‚Ä¢	Enable/disable quick actions
	‚Ä¢	Filter activity feeds
	‚Ä¢	All activity is logged via Core Audit Trail

‚∏ª

üåê API + SDK
	‚Ä¢	GET /deck/apps ‚Äì Returns visible modules per user
	‚Ä¢	GET /deck/notifications ‚Äì Unified alerts feed
	‚Ä¢	POST /deck/quick-actions ‚Äì Execute common actions
	‚Ä¢	GET /deck/history ‚Äì Recently viewed items
	‚Ä¢	JS/React SDK:
	‚Ä¢	useDeckContext()
	‚Ä¢	launchModule(id: string)
	‚Ä¢	openCosmoPrompt(prompt: string)

‚∏ª

üß™ Implementation Plan

Phase 1 ‚Äì Shell & Launcher
	‚Ä¢	Build React-based Deck Shell with app grid
	‚Ä¢	Integrate with Nova Helix for role-based module list

Phase 2 ‚Äì Notifications + Cosmo
	‚Ä¢	Unified alert engine + Cosmo sidebar
	‚Ä¢	Integrate alert providers from Mailroom, Core, Pulse, GoAlert

Phase 3 ‚Äì Quick Actions + Activity Feed
	‚Ä¢	Build unified feed
	‚Ä¢	Implement shortcut bar (Pulse, Orbit, Inventory)

Phase 4 ‚Äì Admin Controls + White Label
	‚Ä¢	Allow Deck Admins to toggle visibility
	‚Ä¢	Implement branding engine (logo, theme, favicon)

Phase 5 ‚Äì Metrics Dashboard (Optional)
	‚Ä¢	Executive KPI cards (SLA trends, open tickets, MTTR)
	‚Ä¢	Scoped by role and department

‚∏ª

üìÅ Tech Stack
	‚Ä¢	Frontend: React + Tailwind + shadcn/ui
	‚Ä¢	State: Zustand or Redux
	‚Ä¢	Cosmo: ChatGPT or OpenAI Assistant API wrapper
	‚Ä¢	Notifications: WebSocket / Server-sent events via Nova Core
	‚Ä¢	Auth: Nova Helix (SCIM + OIDC SSO)
	‚Ä¢	Mobile App: SwiftUI (iOS), React Native fallback
	‚Ä¢	Backend API: Unified Nova v2 API Gateway

‚∏ª

üß© Integrations
	‚Ä¢	Slack (launch Deck from /nova deck slash command)
	‚Ä¢	Email (notifications)
	‚Ä¢	Browser Extension (optional pinned Deck shortcut)
	‚Ä¢	Nova Mobile (Deck is default view)

‚∏ª

üìä Sample Metrics for Exec Users (Optional Deck Module)
	‚Ä¢	Avg ticket resolution time by queue
	‚Ä¢	tickets opened last 7 days by type
	‚Ä¢	Top 3 most searched KB terms
	‚Ä¢	Pulse SLA adherence % (per submodule)
	‚Ä¢	Open Alerts (GoAlert) per shift/team

‚∏ª

‚úÖ Benefits
	‚Ä¢	One place to access the entire Nova Universe
	‚Ä¢	Modular, scalable, and brandable
	‚Ä¢	Reduces friction across roles and modules
	‚Ä¢	Powers Cosmo AI workflows from one place
	‚Ä¢	Role-aware with unified design language

‚∏ª
