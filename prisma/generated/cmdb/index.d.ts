
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model ConfigurationItem
 * 
 */
export type ConfigurationItem = $Result.DefaultSelection<Prisma.$ConfigurationItemPayload>
/**
 * Model CiType
 * 
 */
export type CiType = $Result.DefaultSelection<Prisma.$CiTypePayload>
/**
 * Model CiRelationshipType
 * 
 */
export type CiRelationshipType = $Result.DefaultSelection<Prisma.$CiRelationshipTypePayload>
/**
 * Model CiRelationship
 * 
 */
export type CiRelationship = $Result.DefaultSelection<Prisma.$CiRelationshipPayload>
/**
 * Model HardwareCi
 * 
 */
export type HardwareCi = $Result.DefaultSelection<Prisma.$HardwareCiPayload>
/**
 * Model SoftwareCi
 * 
 */
export type SoftwareCi = $Result.DefaultSelection<Prisma.$SoftwareCiPayload>
/**
 * Model ApplicationCi
 * 
 */
export type ApplicationCi = $Result.DefaultSelection<Prisma.$ApplicationCiPayload>
/**
 * Model NetworkCi
 * 
 */
export type NetworkCi = $Result.DefaultSelection<Prisma.$NetworkCiPayload>
/**
 * Model ServiceCi
 * 
 */
export type ServiceCi = $Result.DefaultSelection<Prisma.$ServiceCiPayload>
/**
 * Model DatabaseCi
 * 
 */
export type DatabaseCi = $Result.DefaultSelection<Prisma.$DatabaseCiPayload>
/**
 * Model VirtualCi
 * 
 */
export type VirtualCi = $Result.DefaultSelection<Prisma.$VirtualCiPayload>
/**
 * Model FacilityCi
 * 
 */
export type FacilityCi = $Result.DefaultSelection<Prisma.$FacilityCiPayload>
/**
 * Model BusinessService
 * 
 */
export type BusinessService = $Result.DefaultSelection<Prisma.$BusinessServicePayload>
/**
 * Model CiBusinessService
 * 
 */
export type CiBusinessService = $Result.DefaultSelection<Prisma.$CiBusinessServicePayload>
/**
 * Model CiIncident
 * 
 */
export type CiIncident = $Result.DefaultSelection<Prisma.$CiIncidentPayload>
/**
 * Model CiChange
 * 
 */
export type CiChange = $Result.DefaultSelection<Prisma.$CiChangePayload>
/**
 * Model DiscoverySchedule
 * 
 */
export type DiscoverySchedule = $Result.DefaultSelection<Prisma.$DiscoverySchedulePayload>
/**
 * Model DiscoveryRun
 * 
 */
export type DiscoveryRun = $Result.DefaultSelection<Prisma.$DiscoveryRunPayload>
/**
 * Model DiscoveredItem
 * 
 */
export type DiscoveredItem = $Result.DefaultSelection<Prisma.$DiscoveredItemPayload>
/**
 * Model CmdbHealth
 * 
 */
export type CmdbHealth = $Result.DefaultSelection<Prisma.$CmdbHealthPayload>
/**
 * Model CiAuditLog
 * 
 */
export type CiAuditLog = $Result.DefaultSelection<Prisma.$CiAuditLogPayload>
/**
 * Model SupportGroup
 * 
 */
export type SupportGroup = $Result.DefaultSelection<Prisma.$SupportGroupPayload>
/**
 * Model SupportGroupMember
 * 
 */
export type SupportGroupMember = $Result.DefaultSelection<Prisma.$SupportGroupMemberPayload>
/**
 * Model SupportGroupPermission
 * 
 */
export type SupportGroupPermission = $Result.DefaultSelection<Prisma.$SupportGroupPermissionPayload>
/**
 * Model CiOwnership
 * 
 */
export type CiOwnership = $Result.DefaultSelection<Prisma.$CiOwnershipPayload>
/**
 * Model CmdbInventoryMapping
 * 
 */
export type CmdbInventoryMapping = $Result.DefaultSelection<Prisma.$CmdbInventoryMappingPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more ConfigurationItems
 * const configurationItems = await prisma.configurationItem.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more ConfigurationItems
   * const configurationItems = await prisma.configurationItem.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>); // TODO-LINT: move to async function
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'}; // TODO-LINT: move to async function`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ; // TODO-LINT: move to async function', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'}; // TODO-LINT: move to async function`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2; // TODO-LINT: move to async function', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.configurationItem`: Exposes CRUD operations for the **ConfigurationItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ConfigurationItems
    * const configurationItems = await prisma.configurationItem.findMany()
    * ```
    */
  get configurationItem(): Prisma.ConfigurationItemDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.ciType`: Exposes CRUD operations for the **CiType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CiTypes
    * const ciTypes = await prisma.ciType.findMany()
    * ```
    */
  get ciType(): Prisma.CiTypeDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.ciRelationshipType`: Exposes CRUD operations for the **CiRelationshipType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CiRelationshipTypes
    * const ciRelationshipTypes = await prisma.ciRelationshipType.findMany()
    * ```
    */
  get ciRelationshipType(): Prisma.CiRelationshipTypeDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.ciRelationship`: Exposes CRUD operations for the **CiRelationship** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CiRelationships
    * const ciRelationships = await prisma.ciRelationship.findMany()
    * ```
    */
  get ciRelationship(): Prisma.CiRelationshipDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.hardwareCi`: Exposes CRUD operations for the **HardwareCi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HardwareCis
    * const hardwareCis = await prisma.hardwareCi.findMany()
    * ```
    */
  get hardwareCi(): Prisma.HardwareCiDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.softwareCi`: Exposes CRUD operations for the **SoftwareCi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SoftwareCis
    * const softwareCis = await prisma.softwareCi.findMany()
    * ```
    */
  get softwareCi(): Prisma.SoftwareCiDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.applicationCi`: Exposes CRUD operations for the **ApplicationCi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ApplicationCis
    * const applicationCis = await prisma.applicationCi.findMany()
    * ```
    */
  get applicationCi(): Prisma.ApplicationCiDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.networkCi`: Exposes CRUD operations for the **NetworkCi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more NetworkCis
    * const networkCis = await prisma.networkCi.findMany()
    * ```
    */
  get networkCi(): Prisma.NetworkCiDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.serviceCi`: Exposes CRUD operations for the **ServiceCi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ServiceCis
    * const serviceCis = await prisma.serviceCi.findMany()
    * ```
    */
  get serviceCi(): Prisma.ServiceCiDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.databaseCi`: Exposes CRUD operations for the **DatabaseCi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DatabaseCis
    * const databaseCis = await prisma.databaseCi.findMany()
    * ```
    */
  get databaseCi(): Prisma.DatabaseCiDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.virtualCi`: Exposes CRUD operations for the **VirtualCi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VirtualCis
    * const virtualCis = await prisma.virtualCi.findMany()
    * ```
    */
  get virtualCi(): Prisma.VirtualCiDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.facilityCi`: Exposes CRUD operations for the **FacilityCi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FacilityCis
    * const facilityCis = await prisma.facilityCi.findMany()
    * ```
    */
  get facilityCi(): Prisma.FacilityCiDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.businessService`: Exposes CRUD operations for the **BusinessService** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BusinessServices
    * const businessServices = await prisma.businessService.findMany()
    * ```
    */
  get businessService(): Prisma.BusinessServiceDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.ciBusinessService`: Exposes CRUD operations for the **CiBusinessService** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CiBusinessServices
    * const ciBusinessServices = await prisma.ciBusinessService.findMany()
    * ```
    */
  get ciBusinessService(): Prisma.CiBusinessServiceDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.ciIncident`: Exposes CRUD operations for the **CiIncident** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CiIncidents
    * const ciIncidents = await prisma.ciIncident.findMany()
    * ```
    */
  get ciIncident(): Prisma.CiIncidentDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.ciChange`: Exposes CRUD operations for the **CiChange** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CiChanges
    * const ciChanges = await prisma.ciChange.findMany()
    * ```
    */
  get ciChange(): Prisma.CiChangeDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.discoverySchedule`: Exposes CRUD operations for the **DiscoverySchedule** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DiscoverySchedules
    * const discoverySchedules = await prisma.discoverySchedule.findMany()
    * ```
    */
  get discoverySchedule(): Prisma.DiscoveryScheduleDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.discoveryRun`: Exposes CRUD operations for the **DiscoveryRun** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DiscoveryRuns
    * const discoveryRuns = await prisma.discoveryRun.findMany()
    * ```
    */
  get discoveryRun(): Prisma.DiscoveryRunDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.discoveredItem`: Exposes CRUD operations for the **DiscoveredItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DiscoveredItems
    * const discoveredItems = await prisma.discoveredItem.findMany()
    * ```
    */
  get discoveredItem(): Prisma.DiscoveredItemDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.cmdbHealth`: Exposes CRUD operations for the **CmdbHealth** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CmdbHealths
    * const cmdbHealths = await prisma.cmdbHealth.findMany()
    * ```
    */
  get cmdbHealth(): Prisma.CmdbHealthDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.ciAuditLog`: Exposes CRUD operations for the **CiAuditLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CiAuditLogs
    * const ciAuditLogs = await prisma.ciAuditLog.findMany()
    * ```
    */
  get ciAuditLog(): Prisma.CiAuditLogDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.supportGroup`: Exposes CRUD operations for the **SupportGroup** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SupportGroups
    * const supportGroups = await prisma.supportGroup.findMany()
    * ```
    */
  get supportGroup(): Prisma.SupportGroupDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.supportGroupMember`: Exposes CRUD operations for the **SupportGroupMember** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SupportGroupMembers
    * const supportGroupMembers = await prisma.supportGroupMember.findMany()
    * ```
    */
  get supportGroupMember(): Prisma.SupportGroupMemberDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.supportGroupPermission`: Exposes CRUD operations for the **SupportGroupPermission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SupportGroupPermissions
    * const supportGroupPermissions = await prisma.supportGroupPermission.findMany()
    * ```
    */
  get supportGroupPermission(): Prisma.SupportGroupPermissionDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.ciOwnership`: Exposes CRUD operations for the **CiOwnership** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CiOwnerships
    * const ciOwnerships = await prisma.ciOwnership.findMany()
    * ```
    */
  get ciOwnership(): Prisma.CiOwnershipDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function

  /**
   * `prisma.cmdbInventoryMapping`: Exposes CRUD operations for the **CmdbInventoryMapping** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CmdbInventoryMappings
    * const cmdbInventoryMappings = await prisma.cmdbInventoryMapping.findMany()
    * ```
    */
  get cmdbInventoryMapping(): Prisma.CmdbInventoryMappingDelegate<ExtArgs, ClientOptions>; // TODO-LINT: move to async function
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.13.0
   * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types
    include: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types
  }

  type SelectAndOmit = {
    select: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types
    omit: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type _PromiseReturnType<T extends (...args: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends bigint
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    ConfigurationItem: 'ConfigurationItem',
    CiType: 'CiType',
    CiRelationshipType: 'CiRelationshipType',
    CiRelationship: 'CiRelationship',
    HardwareCi: 'HardwareCi',
    SoftwareCi: 'SoftwareCi',
    ApplicationCi: 'ApplicationCi',
    NetworkCi: 'NetworkCi',
    ServiceCi: 'ServiceCi',
    DatabaseCi: 'DatabaseCi',
    VirtualCi: 'VirtualCi',
    FacilityCi: 'FacilityCi',
    BusinessService: 'BusinessService',
    CiBusinessService: 'CiBusinessService',
    CiIncident: 'CiIncident',
    CiChange: 'CiChange',
    DiscoverySchedule: 'DiscoverySchedule',
    DiscoveryRun: 'DiscoveryRun',
    DiscoveredItem: 'DiscoveredItem',
    CmdbHealth: 'CmdbHealth',
    CiAuditLog: 'CiAuditLog',
    SupportGroup: 'SupportGroup',
    SupportGroupMember: 'SupportGroupMember',
    SupportGroupPermission: 'SupportGroupPermission',
    CiOwnership: 'CiOwnership',
    CmdbInventoryMapping: 'CmdbInventoryMapping'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    cmdb_db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "configurationItem" | "ciType" | "ciRelationshipType" | "ciRelationship" | "hardwareCi" | "softwareCi" | "applicationCi" | "networkCi" | "serviceCi" | "databaseCi" | "virtualCi" | "facilityCi" | "businessService" | "ciBusinessService" | "ciIncident" | "ciChange" | "discoverySchedule" | "discoveryRun" | "discoveredItem" | "cmdbHealth" | "ciAuditLog" | "supportGroup" | "supportGroupMember" | "supportGroupPermission" | "ciOwnership" | "cmdbInventoryMapping"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      ConfigurationItem: {
        payload: Prisma.$ConfigurationItemPayload<ExtArgs>
        fields: Prisma.ConfigurationItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConfigurationItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigurationItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConfigurationItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigurationItemPayload>
          }
          findFirst: {
            args: Prisma.ConfigurationItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigurationItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConfigurationItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigurationItemPayload>
          }
          findMany: {
            args: Prisma.ConfigurationItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigurationItemPayload>[]
          }
          create: {
            args: Prisma.ConfigurationItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigurationItemPayload>
          }
          createMany: {
            args: Prisma.ConfigurationItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ConfigurationItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigurationItemPayload>[]
          }
          delete: {
            args: Prisma.ConfigurationItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigurationItemPayload>
          }
          update: {
            args: Prisma.ConfigurationItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigurationItemPayload>
          }
          deleteMany: {
            args: Prisma.ConfigurationItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConfigurationItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ConfigurationItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigurationItemPayload>[]
          }
          upsert: {
            args: Prisma.ConfigurationItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfigurationItemPayload>
          }
          aggregate: {
            args: Prisma.ConfigurationItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConfigurationItem>
          }
          groupBy: {
            args: Prisma.ConfigurationItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConfigurationItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConfigurationItemCountArgs<ExtArgs>
            result: $Utils.Optional<ConfigurationItemCountAggregateOutputType> | number
          }
        }
      }
      CiType: {
        payload: Prisma.$CiTypePayload<ExtArgs>
        fields: Prisma.CiTypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CiTypeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiTypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CiTypeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiTypePayload>
          }
          findFirst: {
            args: Prisma.CiTypeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiTypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CiTypeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiTypePayload>
          }
          findMany: {
            args: Prisma.CiTypeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiTypePayload>[]
          }
          create: {
            args: Prisma.CiTypeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiTypePayload>
          }
          createMany: {
            args: Prisma.CiTypeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CiTypeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiTypePayload>[]
          }
          delete: {
            args: Prisma.CiTypeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiTypePayload>
          }
          update: {
            args: Prisma.CiTypeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiTypePayload>
          }
          deleteMany: {
            args: Prisma.CiTypeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CiTypeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CiTypeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiTypePayload>[]
          }
          upsert: {
            args: Prisma.CiTypeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiTypePayload>
          }
          aggregate: {
            args: Prisma.CiTypeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCiType>
          }
          groupBy: {
            args: Prisma.CiTypeGroupByArgs<ExtArgs>
            result: $Utils.Optional<CiTypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.CiTypeCountArgs<ExtArgs>
            result: $Utils.Optional<CiTypeCountAggregateOutputType> | number
          }
        }
      }
      CiRelationshipType: {
        payload: Prisma.$CiRelationshipTypePayload<ExtArgs>
        fields: Prisma.CiRelationshipTypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CiRelationshipTypeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipTypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CiRelationshipTypeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipTypePayload>
          }
          findFirst: {
            args: Prisma.CiRelationshipTypeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipTypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CiRelationshipTypeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipTypePayload>
          }
          findMany: {
            args: Prisma.CiRelationshipTypeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipTypePayload>[]
          }
          create: {
            args: Prisma.CiRelationshipTypeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipTypePayload>
          }
          createMany: {
            args: Prisma.CiRelationshipTypeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CiRelationshipTypeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipTypePayload>[]
          }
          delete: {
            args: Prisma.CiRelationshipTypeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipTypePayload>
          }
          update: {
            args: Prisma.CiRelationshipTypeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipTypePayload>
          }
          deleteMany: {
            args: Prisma.CiRelationshipTypeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CiRelationshipTypeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CiRelationshipTypeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipTypePayload>[]
          }
          upsert: {
            args: Prisma.CiRelationshipTypeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipTypePayload>
          }
          aggregate: {
            args: Prisma.CiRelationshipTypeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCiRelationshipType>
          }
          groupBy: {
            args: Prisma.CiRelationshipTypeGroupByArgs<ExtArgs>
            result: $Utils.Optional<CiRelationshipTypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.CiRelationshipTypeCountArgs<ExtArgs>
            result: $Utils.Optional<CiRelationshipTypeCountAggregateOutputType> | number
          }
        }
      }
      CiRelationship: {
        payload: Prisma.$CiRelationshipPayload<ExtArgs>
        fields: Prisma.CiRelationshipFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CiRelationshipFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CiRelationshipFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipPayload>
          }
          findFirst: {
            args: Prisma.CiRelationshipFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CiRelationshipFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipPayload>
          }
          findMany: {
            args: Prisma.CiRelationshipFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipPayload>[]
          }
          create: {
            args: Prisma.CiRelationshipCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipPayload>
          }
          createMany: {
            args: Prisma.CiRelationshipCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CiRelationshipCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipPayload>[]
          }
          delete: {
            args: Prisma.CiRelationshipDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipPayload>
          }
          update: {
            args: Prisma.CiRelationshipUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipPayload>
          }
          deleteMany: {
            args: Prisma.CiRelationshipDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CiRelationshipUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CiRelationshipUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipPayload>[]
          }
          upsert: {
            args: Prisma.CiRelationshipUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiRelationshipPayload>
          }
          aggregate: {
            args: Prisma.CiRelationshipAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCiRelationship>
          }
          groupBy: {
            args: Prisma.CiRelationshipGroupByArgs<ExtArgs>
            result: $Utils.Optional<CiRelationshipGroupByOutputType>[]
          }
          count: {
            args: Prisma.CiRelationshipCountArgs<ExtArgs>
            result: $Utils.Optional<CiRelationshipCountAggregateOutputType> | number
          }
        }
      }
      HardwareCi: {
        payload: Prisma.$HardwareCiPayload<ExtArgs>
        fields: Prisma.HardwareCiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HardwareCiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HardwareCiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HardwareCiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HardwareCiPayload>
          }
          findFirst: {
            args: Prisma.HardwareCiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HardwareCiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HardwareCiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HardwareCiPayload>
          }
          findMany: {
            args: Prisma.HardwareCiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HardwareCiPayload>[]
          }
          create: {
            args: Prisma.HardwareCiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HardwareCiPayload>
          }
          createMany: {
            args: Prisma.HardwareCiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HardwareCiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HardwareCiPayload>[]
          }
          delete: {
            args: Prisma.HardwareCiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HardwareCiPayload>
          }
          update: {
            args: Prisma.HardwareCiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HardwareCiPayload>
          }
          deleteMany: {
            args: Prisma.HardwareCiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HardwareCiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.HardwareCiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HardwareCiPayload>[]
          }
          upsert: {
            args: Prisma.HardwareCiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HardwareCiPayload>
          }
          aggregate: {
            args: Prisma.HardwareCiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHardwareCi>
          }
          groupBy: {
            args: Prisma.HardwareCiGroupByArgs<ExtArgs>
            result: $Utils.Optional<HardwareCiGroupByOutputType>[]
          }
          count: {
            args: Prisma.HardwareCiCountArgs<ExtArgs>
            result: $Utils.Optional<HardwareCiCountAggregateOutputType> | number
          }
        }
      }
      SoftwareCi: {
        payload: Prisma.$SoftwareCiPayload<ExtArgs>
        fields: Prisma.SoftwareCiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SoftwareCiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareCiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SoftwareCiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareCiPayload>
          }
          findFirst: {
            args: Prisma.SoftwareCiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareCiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SoftwareCiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareCiPayload>
          }
          findMany: {
            args: Prisma.SoftwareCiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareCiPayload>[]
          }
          create: {
            args: Prisma.SoftwareCiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareCiPayload>
          }
          createMany: {
            args: Prisma.SoftwareCiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SoftwareCiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareCiPayload>[]
          }
          delete: {
            args: Prisma.SoftwareCiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareCiPayload>
          }
          update: {
            args: Prisma.SoftwareCiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareCiPayload>
          }
          deleteMany: {
            args: Prisma.SoftwareCiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SoftwareCiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SoftwareCiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareCiPayload>[]
          }
          upsert: {
            args: Prisma.SoftwareCiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SoftwareCiPayload>
          }
          aggregate: {
            args: Prisma.SoftwareCiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSoftwareCi>
          }
          groupBy: {
            args: Prisma.SoftwareCiGroupByArgs<ExtArgs>
            result: $Utils.Optional<SoftwareCiGroupByOutputType>[]
          }
          count: {
            args: Prisma.SoftwareCiCountArgs<ExtArgs>
            result: $Utils.Optional<SoftwareCiCountAggregateOutputType> | number
          }
        }
      }
      ApplicationCi: {
        payload: Prisma.$ApplicationCiPayload<ExtArgs>
        fields: Prisma.ApplicationCiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ApplicationCiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationCiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ApplicationCiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationCiPayload>
          }
          findFirst: {
            args: Prisma.ApplicationCiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationCiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ApplicationCiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationCiPayload>
          }
          findMany: {
            args: Prisma.ApplicationCiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationCiPayload>[]
          }
          create: {
            args: Prisma.ApplicationCiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationCiPayload>
          }
          createMany: {
            args: Prisma.ApplicationCiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ApplicationCiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationCiPayload>[]
          }
          delete: {
            args: Prisma.ApplicationCiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationCiPayload>
          }
          update: {
            args: Prisma.ApplicationCiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationCiPayload>
          }
          deleteMany: {
            args: Prisma.ApplicationCiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ApplicationCiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ApplicationCiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationCiPayload>[]
          }
          upsert: {
            args: Prisma.ApplicationCiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationCiPayload>
          }
          aggregate: {
            args: Prisma.ApplicationCiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApplicationCi>
          }
          groupBy: {
            args: Prisma.ApplicationCiGroupByArgs<ExtArgs>
            result: $Utils.Optional<ApplicationCiGroupByOutputType>[]
          }
          count: {
            args: Prisma.ApplicationCiCountArgs<ExtArgs>
            result: $Utils.Optional<ApplicationCiCountAggregateOutputType> | number
          }
        }
      }
      NetworkCi: {
        payload: Prisma.$NetworkCiPayload<ExtArgs>
        fields: Prisma.NetworkCiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NetworkCiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NetworkCiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NetworkCiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NetworkCiPayload>
          }
          findFirst: {
            args: Prisma.NetworkCiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NetworkCiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NetworkCiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NetworkCiPayload>
          }
          findMany: {
            args: Prisma.NetworkCiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NetworkCiPayload>[]
          }
          create: {
            args: Prisma.NetworkCiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NetworkCiPayload>
          }
          createMany: {
            args: Prisma.NetworkCiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NetworkCiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NetworkCiPayload>[]
          }
          delete: {
            args: Prisma.NetworkCiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NetworkCiPayload>
          }
          update: {
            args: Prisma.NetworkCiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NetworkCiPayload>
          }
          deleteMany: {
            args: Prisma.NetworkCiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NetworkCiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.NetworkCiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NetworkCiPayload>[]
          }
          upsert: {
            args: Prisma.NetworkCiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NetworkCiPayload>
          }
          aggregate: {
            args: Prisma.NetworkCiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNetworkCi>
          }
          groupBy: {
            args: Prisma.NetworkCiGroupByArgs<ExtArgs>
            result: $Utils.Optional<NetworkCiGroupByOutputType>[]
          }
          count: {
            args: Prisma.NetworkCiCountArgs<ExtArgs>
            result: $Utils.Optional<NetworkCiCountAggregateOutputType> | number
          }
        }
      }
      ServiceCi: {
        payload: Prisma.$ServiceCiPayload<ExtArgs>
        fields: Prisma.ServiceCiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ServiceCiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceCiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ServiceCiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceCiPayload>
          }
          findFirst: {
            args: Prisma.ServiceCiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceCiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ServiceCiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceCiPayload>
          }
          findMany: {
            args: Prisma.ServiceCiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceCiPayload>[]
          }
          create: {
            args: Prisma.ServiceCiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceCiPayload>
          }
          createMany: {
            args: Prisma.ServiceCiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ServiceCiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceCiPayload>[]
          }
          delete: {
            args: Prisma.ServiceCiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceCiPayload>
          }
          update: {
            args: Prisma.ServiceCiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceCiPayload>
          }
          deleteMany: {
            args: Prisma.ServiceCiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ServiceCiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ServiceCiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceCiPayload>[]
          }
          upsert: {
            args: Prisma.ServiceCiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceCiPayload>
          }
          aggregate: {
            args: Prisma.ServiceCiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateServiceCi>
          }
          groupBy: {
            args: Prisma.ServiceCiGroupByArgs<ExtArgs>
            result: $Utils.Optional<ServiceCiGroupByOutputType>[]
          }
          count: {
            args: Prisma.ServiceCiCountArgs<ExtArgs>
            result: $Utils.Optional<ServiceCiCountAggregateOutputType> | number
          }
        }
      }
      DatabaseCi: {
        payload: Prisma.$DatabaseCiPayload<ExtArgs>
        fields: Prisma.DatabaseCiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DatabaseCiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DatabaseCiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DatabaseCiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DatabaseCiPayload>
          }
          findFirst: {
            args: Prisma.DatabaseCiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DatabaseCiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DatabaseCiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DatabaseCiPayload>
          }
          findMany: {
            args: Prisma.DatabaseCiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DatabaseCiPayload>[]
          }
          create: {
            args: Prisma.DatabaseCiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DatabaseCiPayload>
          }
          createMany: {
            args: Prisma.DatabaseCiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DatabaseCiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DatabaseCiPayload>[]
          }
          delete: {
            args: Prisma.DatabaseCiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DatabaseCiPayload>
          }
          update: {
            args: Prisma.DatabaseCiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DatabaseCiPayload>
          }
          deleteMany: {
            args: Prisma.DatabaseCiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DatabaseCiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DatabaseCiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DatabaseCiPayload>[]
          }
          upsert: {
            args: Prisma.DatabaseCiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DatabaseCiPayload>
          }
          aggregate: {
            args: Prisma.DatabaseCiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDatabaseCi>
          }
          groupBy: {
            args: Prisma.DatabaseCiGroupByArgs<ExtArgs>
            result: $Utils.Optional<DatabaseCiGroupByOutputType>[]
          }
          count: {
            args: Prisma.DatabaseCiCountArgs<ExtArgs>
            result: $Utils.Optional<DatabaseCiCountAggregateOutputType> | number
          }
        }
      }
      VirtualCi: {
        payload: Prisma.$VirtualCiPayload<ExtArgs>
        fields: Prisma.VirtualCiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VirtualCiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualCiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VirtualCiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualCiPayload>
          }
          findFirst: {
            args: Prisma.VirtualCiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualCiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VirtualCiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualCiPayload>
          }
          findMany: {
            args: Prisma.VirtualCiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualCiPayload>[]
          }
          create: {
            args: Prisma.VirtualCiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualCiPayload>
          }
          createMany: {
            args: Prisma.VirtualCiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VirtualCiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualCiPayload>[]
          }
          delete: {
            args: Prisma.VirtualCiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualCiPayload>
          }
          update: {
            args: Prisma.VirtualCiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualCiPayload>
          }
          deleteMany: {
            args: Prisma.VirtualCiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VirtualCiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VirtualCiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualCiPayload>[]
          }
          upsert: {
            args: Prisma.VirtualCiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualCiPayload>
          }
          aggregate: {
            args: Prisma.VirtualCiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVirtualCi>
          }
          groupBy: {
            args: Prisma.VirtualCiGroupByArgs<ExtArgs>
            result: $Utils.Optional<VirtualCiGroupByOutputType>[]
          }
          count: {
            args: Prisma.VirtualCiCountArgs<ExtArgs>
            result: $Utils.Optional<VirtualCiCountAggregateOutputType> | number
          }
        }
      }
      FacilityCi: {
        payload: Prisma.$FacilityCiPayload<ExtArgs>
        fields: Prisma.FacilityCiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FacilityCiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityCiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FacilityCiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityCiPayload>
          }
          findFirst: {
            args: Prisma.FacilityCiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityCiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FacilityCiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityCiPayload>
          }
          findMany: {
            args: Prisma.FacilityCiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityCiPayload>[]
          }
          create: {
            args: Prisma.FacilityCiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityCiPayload>
          }
          createMany: {
            args: Prisma.FacilityCiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FacilityCiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityCiPayload>[]
          }
          delete: {
            args: Prisma.FacilityCiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityCiPayload>
          }
          update: {
            args: Prisma.FacilityCiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityCiPayload>
          }
          deleteMany: {
            args: Prisma.FacilityCiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FacilityCiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FacilityCiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityCiPayload>[]
          }
          upsert: {
            args: Prisma.FacilityCiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacilityCiPayload>
          }
          aggregate: {
            args: Prisma.FacilityCiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFacilityCi>
          }
          groupBy: {
            args: Prisma.FacilityCiGroupByArgs<ExtArgs>
            result: $Utils.Optional<FacilityCiGroupByOutputType>[]
          }
          count: {
            args: Prisma.FacilityCiCountArgs<ExtArgs>
            result: $Utils.Optional<FacilityCiCountAggregateOutputType> | number
          }
        }
      }
      BusinessService: {
        payload: Prisma.$BusinessServicePayload<ExtArgs>
        fields: Prisma.BusinessServiceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BusinessServiceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessServicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BusinessServiceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessServicePayload>
          }
          findFirst: {
            args: Prisma.BusinessServiceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessServicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BusinessServiceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessServicePayload>
          }
          findMany: {
            args: Prisma.BusinessServiceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessServicePayload>[]
          }
          create: {
            args: Prisma.BusinessServiceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessServicePayload>
          }
          createMany: {
            args: Prisma.BusinessServiceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BusinessServiceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessServicePayload>[]
          }
          delete: {
            args: Prisma.BusinessServiceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessServicePayload>
          }
          update: {
            args: Prisma.BusinessServiceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessServicePayload>
          }
          deleteMany: {
            args: Prisma.BusinessServiceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BusinessServiceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BusinessServiceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessServicePayload>[]
          }
          upsert: {
            args: Prisma.BusinessServiceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessServicePayload>
          }
          aggregate: {
            args: Prisma.BusinessServiceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusinessService>
          }
          groupBy: {
            args: Prisma.BusinessServiceGroupByArgs<ExtArgs>
            result: $Utils.Optional<BusinessServiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.BusinessServiceCountArgs<ExtArgs>
            result: $Utils.Optional<BusinessServiceCountAggregateOutputType> | number
          }
        }
      }
      CiBusinessService: {
        payload: Prisma.$CiBusinessServicePayload<ExtArgs>
        fields: Prisma.CiBusinessServiceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CiBusinessServiceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiBusinessServicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CiBusinessServiceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiBusinessServicePayload>
          }
          findFirst: {
            args: Prisma.CiBusinessServiceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiBusinessServicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CiBusinessServiceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiBusinessServicePayload>
          }
          findMany: {
            args: Prisma.CiBusinessServiceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiBusinessServicePayload>[]
          }
          create: {
            args: Prisma.CiBusinessServiceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiBusinessServicePayload>
          }
          createMany: {
            args: Prisma.CiBusinessServiceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CiBusinessServiceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiBusinessServicePayload>[]
          }
          delete: {
            args: Prisma.CiBusinessServiceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiBusinessServicePayload>
          }
          update: {
            args: Prisma.CiBusinessServiceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiBusinessServicePayload>
          }
          deleteMany: {
            args: Prisma.CiBusinessServiceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CiBusinessServiceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CiBusinessServiceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiBusinessServicePayload>[]
          }
          upsert: {
            args: Prisma.CiBusinessServiceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiBusinessServicePayload>
          }
          aggregate: {
            args: Prisma.CiBusinessServiceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCiBusinessService>
          }
          groupBy: {
            args: Prisma.CiBusinessServiceGroupByArgs<ExtArgs>
            result: $Utils.Optional<CiBusinessServiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.CiBusinessServiceCountArgs<ExtArgs>
            result: $Utils.Optional<CiBusinessServiceCountAggregateOutputType> | number
          }
        }
      }
      CiIncident: {
        payload: Prisma.$CiIncidentPayload<ExtArgs>
        fields: Prisma.CiIncidentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CiIncidentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiIncidentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CiIncidentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiIncidentPayload>
          }
          findFirst: {
            args: Prisma.CiIncidentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiIncidentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CiIncidentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiIncidentPayload>
          }
          findMany: {
            args: Prisma.CiIncidentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiIncidentPayload>[]
          }
          create: {
            args: Prisma.CiIncidentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiIncidentPayload>
          }
          createMany: {
            args: Prisma.CiIncidentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CiIncidentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiIncidentPayload>[]
          }
          delete: {
            args: Prisma.CiIncidentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiIncidentPayload>
          }
          update: {
            args: Prisma.CiIncidentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiIncidentPayload>
          }
          deleteMany: {
            args: Prisma.CiIncidentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CiIncidentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CiIncidentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiIncidentPayload>[]
          }
          upsert: {
            args: Prisma.CiIncidentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiIncidentPayload>
          }
          aggregate: {
            args: Prisma.CiIncidentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCiIncident>
          }
          groupBy: {
            args: Prisma.CiIncidentGroupByArgs<ExtArgs>
            result: $Utils.Optional<CiIncidentGroupByOutputType>[]
          }
          count: {
            args: Prisma.CiIncidentCountArgs<ExtArgs>
            result: $Utils.Optional<CiIncidentCountAggregateOutputType> | number
          }
        }
      }
      CiChange: {
        payload: Prisma.$CiChangePayload<ExtArgs>
        fields: Prisma.CiChangeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CiChangeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiChangePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CiChangeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiChangePayload>
          }
          findFirst: {
            args: Prisma.CiChangeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiChangePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CiChangeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiChangePayload>
          }
          findMany: {
            args: Prisma.CiChangeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiChangePayload>[]
          }
          create: {
            args: Prisma.CiChangeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiChangePayload>
          }
          createMany: {
            args: Prisma.CiChangeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CiChangeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiChangePayload>[]
          }
          delete: {
            args: Prisma.CiChangeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiChangePayload>
          }
          update: {
            args: Prisma.CiChangeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiChangePayload>
          }
          deleteMany: {
            args: Prisma.CiChangeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CiChangeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CiChangeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiChangePayload>[]
          }
          upsert: {
            args: Prisma.CiChangeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiChangePayload>
          }
          aggregate: {
            args: Prisma.CiChangeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCiChange>
          }
          groupBy: {
            args: Prisma.CiChangeGroupByArgs<ExtArgs>
            result: $Utils.Optional<CiChangeGroupByOutputType>[]
          }
          count: {
            args: Prisma.CiChangeCountArgs<ExtArgs>
            result: $Utils.Optional<CiChangeCountAggregateOutputType> | number
          }
        }
      }
      DiscoverySchedule: {
        payload: Prisma.$DiscoverySchedulePayload<ExtArgs>
        fields: Prisma.DiscoveryScheduleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DiscoveryScheduleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoverySchedulePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DiscoveryScheduleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoverySchedulePayload>
          }
          findFirst: {
            args: Prisma.DiscoveryScheduleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoverySchedulePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DiscoveryScheduleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoverySchedulePayload>
          }
          findMany: {
            args: Prisma.DiscoveryScheduleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoverySchedulePayload>[]
          }
          create: {
            args: Prisma.DiscoveryScheduleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoverySchedulePayload>
          }
          createMany: {
            args: Prisma.DiscoveryScheduleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DiscoveryScheduleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoverySchedulePayload>[]
          }
          delete: {
            args: Prisma.DiscoveryScheduleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoverySchedulePayload>
          }
          update: {
            args: Prisma.DiscoveryScheduleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoverySchedulePayload>
          }
          deleteMany: {
            args: Prisma.DiscoveryScheduleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DiscoveryScheduleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DiscoveryScheduleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoverySchedulePayload>[]
          }
          upsert: {
            args: Prisma.DiscoveryScheduleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoverySchedulePayload>
          }
          aggregate: {
            args: Prisma.DiscoveryScheduleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDiscoverySchedule>
          }
          groupBy: {
            args: Prisma.DiscoveryScheduleGroupByArgs<ExtArgs>
            result: $Utils.Optional<DiscoveryScheduleGroupByOutputType>[]
          }
          count: {
            args: Prisma.DiscoveryScheduleCountArgs<ExtArgs>
            result: $Utils.Optional<DiscoveryScheduleCountAggregateOutputType> | number
          }
        }
      }
      DiscoveryRun: {
        payload: Prisma.$DiscoveryRunPayload<ExtArgs>
        fields: Prisma.DiscoveryRunFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DiscoveryRunFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveryRunPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DiscoveryRunFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveryRunPayload>
          }
          findFirst: {
            args: Prisma.DiscoveryRunFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveryRunPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DiscoveryRunFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveryRunPayload>
          }
          findMany: {
            args: Prisma.DiscoveryRunFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveryRunPayload>[]
          }
          create: {
            args: Prisma.DiscoveryRunCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveryRunPayload>
          }
          createMany: {
            args: Prisma.DiscoveryRunCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DiscoveryRunCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveryRunPayload>[]
          }
          delete: {
            args: Prisma.DiscoveryRunDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveryRunPayload>
          }
          update: {
            args: Prisma.DiscoveryRunUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveryRunPayload>
          }
          deleteMany: {
            args: Prisma.DiscoveryRunDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DiscoveryRunUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DiscoveryRunUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveryRunPayload>[]
          }
          upsert: {
            args: Prisma.DiscoveryRunUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveryRunPayload>
          }
          aggregate: {
            args: Prisma.DiscoveryRunAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDiscoveryRun>
          }
          groupBy: {
            args: Prisma.DiscoveryRunGroupByArgs<ExtArgs>
            result: $Utils.Optional<DiscoveryRunGroupByOutputType>[]
          }
          count: {
            args: Prisma.DiscoveryRunCountArgs<ExtArgs>
            result: $Utils.Optional<DiscoveryRunCountAggregateOutputType> | number
          }
        }
      }
      DiscoveredItem: {
        payload: Prisma.$DiscoveredItemPayload<ExtArgs>
        fields: Prisma.DiscoveredItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DiscoveredItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveredItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DiscoveredItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveredItemPayload>
          }
          findFirst: {
            args: Prisma.DiscoveredItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveredItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DiscoveredItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveredItemPayload>
          }
          findMany: {
            args: Prisma.DiscoveredItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveredItemPayload>[]
          }
          create: {
            args: Prisma.DiscoveredItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveredItemPayload>
          }
          createMany: {
            args: Prisma.DiscoveredItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DiscoveredItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveredItemPayload>[]
          }
          delete: {
            args: Prisma.DiscoveredItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveredItemPayload>
          }
          update: {
            args: Prisma.DiscoveredItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveredItemPayload>
          }
          deleteMany: {
            args: Prisma.DiscoveredItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DiscoveredItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DiscoveredItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveredItemPayload>[]
          }
          upsert: {
            args: Prisma.DiscoveredItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiscoveredItemPayload>
          }
          aggregate: {
            args: Prisma.DiscoveredItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDiscoveredItem>
          }
          groupBy: {
            args: Prisma.DiscoveredItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<DiscoveredItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.DiscoveredItemCountArgs<ExtArgs>
            result: $Utils.Optional<DiscoveredItemCountAggregateOutputType> | number
          }
        }
      }
      CmdbHealth: {
        payload: Prisma.$CmdbHealthPayload<ExtArgs>
        fields: Prisma.CmdbHealthFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CmdbHealthFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbHealthPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CmdbHealthFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbHealthPayload>
          }
          findFirst: {
            args: Prisma.CmdbHealthFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbHealthPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CmdbHealthFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbHealthPayload>
          }
          findMany: {
            args: Prisma.CmdbHealthFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbHealthPayload>[]
          }
          create: {
            args: Prisma.CmdbHealthCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbHealthPayload>
          }
          createMany: {
            args: Prisma.CmdbHealthCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CmdbHealthCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbHealthPayload>[]
          }
          delete: {
            args: Prisma.CmdbHealthDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbHealthPayload>
          }
          update: {
            args: Prisma.CmdbHealthUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbHealthPayload>
          }
          deleteMany: {
            args: Prisma.CmdbHealthDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CmdbHealthUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CmdbHealthUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbHealthPayload>[]
          }
          upsert: {
            args: Prisma.CmdbHealthUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbHealthPayload>
          }
          aggregate: {
            args: Prisma.CmdbHealthAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCmdbHealth>
          }
          groupBy: {
            args: Prisma.CmdbHealthGroupByArgs<ExtArgs>
            result: $Utils.Optional<CmdbHealthGroupByOutputType>[]
          }
          count: {
            args: Prisma.CmdbHealthCountArgs<ExtArgs>
            result: $Utils.Optional<CmdbHealthCountAggregateOutputType> | number
          }
        }
      }
      CiAuditLog: {
        payload: Prisma.$CiAuditLogPayload<ExtArgs>
        fields: Prisma.CiAuditLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CiAuditLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiAuditLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CiAuditLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiAuditLogPayload>
          }
          findFirst: {
            args: Prisma.CiAuditLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiAuditLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CiAuditLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiAuditLogPayload>
          }
          findMany: {
            args: Prisma.CiAuditLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiAuditLogPayload>[]
          }
          create: {
            args: Prisma.CiAuditLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiAuditLogPayload>
          }
          createMany: {
            args: Prisma.CiAuditLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CiAuditLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiAuditLogPayload>[]
          }
          delete: {
            args: Prisma.CiAuditLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiAuditLogPayload>
          }
          update: {
            args: Prisma.CiAuditLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiAuditLogPayload>
          }
          deleteMany: {
            args: Prisma.CiAuditLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CiAuditLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CiAuditLogUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiAuditLogPayload>[]
          }
          upsert: {
            args: Prisma.CiAuditLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiAuditLogPayload>
          }
          aggregate: {
            args: Prisma.CiAuditLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCiAuditLog>
          }
          groupBy: {
            args: Prisma.CiAuditLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<CiAuditLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.CiAuditLogCountArgs<ExtArgs>
            result: $Utils.Optional<CiAuditLogCountAggregateOutputType> | number
          }
        }
      }
      SupportGroup: {
        payload: Prisma.$SupportGroupPayload<ExtArgs>
        fields: Prisma.SupportGroupFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupportGroupFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupportGroupFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPayload>
          }
          findFirst: {
            args: Prisma.SupportGroupFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupportGroupFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPayload>
          }
          findMany: {
            args: Prisma.SupportGroupFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPayload>[]
          }
          create: {
            args: Prisma.SupportGroupCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPayload>
          }
          createMany: {
            args: Prisma.SupportGroupCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SupportGroupCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPayload>[]
          }
          delete: {
            args: Prisma.SupportGroupDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPayload>
          }
          update: {
            args: Prisma.SupportGroupUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPayload>
          }
          deleteMany: {
            args: Prisma.SupportGroupDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupportGroupUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SupportGroupUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPayload>[]
          }
          upsert: {
            args: Prisma.SupportGroupUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPayload>
          }
          aggregate: {
            args: Prisma.SupportGroupAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupportGroup>
          }
          groupBy: {
            args: Prisma.SupportGroupGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupportGroupGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupportGroupCountArgs<ExtArgs>
            result: $Utils.Optional<SupportGroupCountAggregateOutputType> | number
          }
        }
      }
      SupportGroupMember: {
        payload: Prisma.$SupportGroupMemberPayload<ExtArgs>
        fields: Prisma.SupportGroupMemberFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupportGroupMemberFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupMemberPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupportGroupMemberFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupMemberPayload>
          }
          findFirst: {
            args: Prisma.SupportGroupMemberFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupMemberPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupportGroupMemberFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupMemberPayload>
          }
          findMany: {
            args: Prisma.SupportGroupMemberFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupMemberPayload>[]
          }
          create: {
            args: Prisma.SupportGroupMemberCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupMemberPayload>
          }
          createMany: {
            args: Prisma.SupportGroupMemberCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SupportGroupMemberCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupMemberPayload>[]
          }
          delete: {
            args: Prisma.SupportGroupMemberDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupMemberPayload>
          }
          update: {
            args: Prisma.SupportGroupMemberUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupMemberPayload>
          }
          deleteMany: {
            args: Prisma.SupportGroupMemberDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupportGroupMemberUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SupportGroupMemberUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupMemberPayload>[]
          }
          upsert: {
            args: Prisma.SupportGroupMemberUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupMemberPayload>
          }
          aggregate: {
            args: Prisma.SupportGroupMemberAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupportGroupMember>
          }
          groupBy: {
            args: Prisma.SupportGroupMemberGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupportGroupMemberGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupportGroupMemberCountArgs<ExtArgs>
            result: $Utils.Optional<SupportGroupMemberCountAggregateOutputType> | number
          }
        }
      }
      SupportGroupPermission: {
        payload: Prisma.$SupportGroupPermissionPayload<ExtArgs>
        fields: Prisma.SupportGroupPermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupportGroupPermissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupportGroupPermissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPermissionPayload>
          }
          findFirst: {
            args: Prisma.SupportGroupPermissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupportGroupPermissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPermissionPayload>
          }
          findMany: {
            args: Prisma.SupportGroupPermissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPermissionPayload>[]
          }
          create: {
            args: Prisma.SupportGroupPermissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPermissionPayload>
          }
          createMany: {
            args: Prisma.SupportGroupPermissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SupportGroupPermissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPermissionPayload>[]
          }
          delete: {
            args: Prisma.SupportGroupPermissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPermissionPayload>
          }
          update: {
            args: Prisma.SupportGroupPermissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPermissionPayload>
          }
          deleteMany: {
            args: Prisma.SupportGroupPermissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupportGroupPermissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SupportGroupPermissionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPermissionPayload>[]
          }
          upsert: {
            args: Prisma.SupportGroupPermissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportGroupPermissionPayload>
          }
          aggregate: {
            args: Prisma.SupportGroupPermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupportGroupPermission>
          }
          groupBy: {
            args: Prisma.SupportGroupPermissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupportGroupPermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupportGroupPermissionCountArgs<ExtArgs>
            result: $Utils.Optional<SupportGroupPermissionCountAggregateOutputType> | number
          }
        }
      }
      CiOwnership: {
        payload: Prisma.$CiOwnershipPayload<ExtArgs>
        fields: Prisma.CiOwnershipFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CiOwnershipFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiOwnershipPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CiOwnershipFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiOwnershipPayload>
          }
          findFirst: {
            args: Prisma.CiOwnershipFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiOwnershipPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CiOwnershipFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiOwnershipPayload>
          }
          findMany: {
            args: Prisma.CiOwnershipFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiOwnershipPayload>[]
          }
          create: {
            args: Prisma.CiOwnershipCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiOwnershipPayload>
          }
          createMany: {
            args: Prisma.CiOwnershipCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CiOwnershipCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiOwnershipPayload>[]
          }
          delete: {
            args: Prisma.CiOwnershipDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiOwnershipPayload>
          }
          update: {
            args: Prisma.CiOwnershipUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiOwnershipPayload>
          }
          deleteMany: {
            args: Prisma.CiOwnershipDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CiOwnershipUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CiOwnershipUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiOwnershipPayload>[]
          }
          upsert: {
            args: Prisma.CiOwnershipUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CiOwnershipPayload>
          }
          aggregate: {
            args: Prisma.CiOwnershipAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCiOwnership>
          }
          groupBy: {
            args: Prisma.CiOwnershipGroupByArgs<ExtArgs>
            result: $Utils.Optional<CiOwnershipGroupByOutputType>[]
          }
          count: {
            args: Prisma.CiOwnershipCountArgs<ExtArgs>
            result: $Utils.Optional<CiOwnershipCountAggregateOutputType> | number
          }
        }
      }
      CmdbInventoryMapping: {
        payload: Prisma.$CmdbInventoryMappingPayload<ExtArgs>
        fields: Prisma.CmdbInventoryMappingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CmdbInventoryMappingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbInventoryMappingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CmdbInventoryMappingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbInventoryMappingPayload>
          }
          findFirst: {
            args: Prisma.CmdbInventoryMappingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbInventoryMappingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CmdbInventoryMappingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbInventoryMappingPayload>
          }
          findMany: {
            args: Prisma.CmdbInventoryMappingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbInventoryMappingPayload>[]
          }
          create: {
            args: Prisma.CmdbInventoryMappingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbInventoryMappingPayload>
          }
          createMany: {
            args: Prisma.CmdbInventoryMappingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CmdbInventoryMappingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbInventoryMappingPayload>[]
          }
          delete: {
            args: Prisma.CmdbInventoryMappingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbInventoryMappingPayload>
          }
          update: {
            args: Prisma.CmdbInventoryMappingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbInventoryMappingPayload>
          }
          deleteMany: {
            args: Prisma.CmdbInventoryMappingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CmdbInventoryMappingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CmdbInventoryMappingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbInventoryMappingPayload>[]
          }
          upsert: {
            args: Prisma.CmdbInventoryMappingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CmdbInventoryMappingPayload>
          }
          aggregate: {
            args: Prisma.CmdbInventoryMappingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCmdbInventoryMapping>
          }
          groupBy: {
            args: Prisma.CmdbInventoryMappingGroupByArgs<ExtArgs>
            result: $Utils.Optional<CmdbInventoryMappingGroupByOutputType>[]
          }
          count: {
            args: Prisma.CmdbInventoryMappingCountArgs<ExtArgs>
            result: $Utils.Optional<CmdbInventoryMappingCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types[]],
          result: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types[]],
          result: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types[]],
          result: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types[]],
          result: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    configurationItem?: ConfigurationItemOmit
    ciType?: CiTypeOmit
    ciRelationshipType?: CiRelationshipTypeOmit
    ciRelationship?: CiRelationshipOmit
    hardwareCi?: HardwareCiOmit
    softwareCi?: SoftwareCiOmit
    applicationCi?: ApplicationCiOmit
    networkCi?: NetworkCiOmit
    serviceCi?: ServiceCiOmit
    databaseCi?: DatabaseCiOmit
    virtualCi?: VirtualCiOmit
    facilityCi?: FacilityCiOmit
    businessService?: BusinessServiceOmit
    ciBusinessService?: CiBusinessServiceOmit
    ciIncident?: CiIncidentOmit
    ciChange?: CiChangeOmit
    discoverySchedule?: DiscoveryScheduleOmit
    discoveryRun?: DiscoveryRunOmit
    discoveredItem?: DiscoveredItemOmit
    cmdbHealth?: CmdbHealthOmit
    ciAuditLog?: CiAuditLogOmit
    supportGroup?: SupportGroupOmit
    supportGroupMember?: SupportGroupMemberOmit
    supportGroupPermission?: SupportGroupPermissionOmit
    ciOwnership?: CiOwnershipOmit
    cmdbInventoryMapping?: CmdbInventoryMappingOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ConfigurationItemCountOutputType
   */

  export type ConfigurationItemCountOutputType = {
    outgoingRelationships: number
    incomingRelationships: number
    incidents: number
    changes: number
    businessServices: number
    ownership: number
    inventoryMapping: number
    supportGroups: number
  }

  export type ConfigurationItemCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    outgoingRelationships?: boolean | ConfigurationItemCountOutputTypeCountOutgoingRelationshipsArgs
    incomingRelationships?: boolean | ConfigurationItemCountOutputTypeCountIncomingRelationshipsArgs
    incidents?: boolean | ConfigurationItemCountOutputTypeCountIncidentsArgs
    changes?: boolean | ConfigurationItemCountOutputTypeCountChangesArgs
    businessServices?: boolean | ConfigurationItemCountOutputTypeCountBusinessServicesArgs
    ownership?: boolean | ConfigurationItemCountOutputTypeCountOwnershipArgs
    inventoryMapping?: boolean | ConfigurationItemCountOutputTypeCountInventoryMappingArgs
    supportGroups?: boolean | ConfigurationItemCountOutputTypeCountSupportGroupsArgs
  }

  // Custom InputTypes
  /**
   * ConfigurationItemCountOutputType without action
   */
  export type ConfigurationItemCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigurationItemCountOutputType
     */
    select?: ConfigurationItemCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ConfigurationItemCountOutputType without action
   */
  export type ConfigurationItemCountOutputTypeCountOutgoingRelationshipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiRelationshipWhereInput
  }

  /**
   * ConfigurationItemCountOutputType without action
   */
  export type ConfigurationItemCountOutputTypeCountIncomingRelationshipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiRelationshipWhereInput
  }

  /**
   * ConfigurationItemCountOutputType without action
   */
  export type ConfigurationItemCountOutputTypeCountIncidentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiIncidentWhereInput
  }

  /**
   * ConfigurationItemCountOutputType without action
   */
  export type ConfigurationItemCountOutputTypeCountChangesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiChangeWhereInput
  }

  /**
   * ConfigurationItemCountOutputType without action
   */
  export type ConfigurationItemCountOutputTypeCountBusinessServicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiBusinessServiceWhereInput
  }

  /**
   * ConfigurationItemCountOutputType without action
   */
  export type ConfigurationItemCountOutputTypeCountOwnershipArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiOwnershipWhereInput
  }

  /**
   * ConfigurationItemCountOutputType without action
   */
  export type ConfigurationItemCountOutputTypeCountInventoryMappingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CmdbInventoryMappingWhereInput
  }

  /**
   * ConfigurationItemCountOutputType without action
   */
  export type ConfigurationItemCountOutputTypeCountSupportGroupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupportGroupWhereInput
  }


  /**
   * Count Type CiTypeCountOutputType
   */

  export type CiTypeCountOutputType = {
    childTypes: number
    configurationItems: number
    allowedRelationships: number
    targetRelationships: number
  }

  export type CiTypeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    childTypes?: boolean | CiTypeCountOutputTypeCountChildTypesArgs
    configurationItems?: boolean | CiTypeCountOutputTypeCountConfigurationItemsArgs
    allowedRelationships?: boolean | CiTypeCountOutputTypeCountAllowedRelationshipsArgs
    targetRelationships?: boolean | CiTypeCountOutputTypeCountTargetRelationshipsArgs
  }

  // Custom InputTypes
  /**
   * CiTypeCountOutputType without action
   */
  export type CiTypeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiTypeCountOutputType
     */
    select?: CiTypeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CiTypeCountOutputType without action
   */
  export type CiTypeCountOutputTypeCountChildTypesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiTypeWhereInput
  }

  /**
   * CiTypeCountOutputType without action
   */
  export type CiTypeCountOutputTypeCountConfigurationItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConfigurationItemWhereInput
  }

  /**
   * CiTypeCountOutputType without action
   */
  export type CiTypeCountOutputTypeCountAllowedRelationshipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiRelationshipTypeWhereInput
  }

  /**
   * CiTypeCountOutputType without action
   */
  export type CiTypeCountOutputTypeCountTargetRelationshipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiRelationshipTypeWhereInput
  }


  /**
   * Count Type CiRelationshipTypeCountOutputType
   */

  export type CiRelationshipTypeCountOutputType = {
    relationships: number
  }

  export type CiRelationshipTypeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    relationships?: boolean | CiRelationshipTypeCountOutputTypeCountRelationshipsArgs
  }

  // Custom InputTypes
  /**
   * CiRelationshipTypeCountOutputType without action
   */
  export type CiRelationshipTypeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationshipTypeCountOutputType
     */
    select?: CiRelationshipTypeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CiRelationshipTypeCountOutputType without action
   */
  export type CiRelationshipTypeCountOutputTypeCountRelationshipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiRelationshipWhereInput
  }


  /**
   * Count Type BusinessServiceCountOutputType
   */

  export type BusinessServiceCountOutputType = {
    configurationItems: number
  }

  export type BusinessServiceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItems?: boolean | BusinessServiceCountOutputTypeCountConfigurationItemsArgs
  }

  // Custom InputTypes
  /**
   * BusinessServiceCountOutputType without action
   */
  export type BusinessServiceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessServiceCountOutputType
     */
    select?: BusinessServiceCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BusinessServiceCountOutputType without action
   */
  export type BusinessServiceCountOutputTypeCountConfigurationItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiBusinessServiceWhereInput
  }


  /**
   * Count Type DiscoveryRunCountOutputType
   */

  export type DiscoveryRunCountOutputType = {
    discoveredItems: number
  }

  export type DiscoveryRunCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    discoveredItems?: boolean | DiscoveryRunCountOutputTypeCountDiscoveredItemsArgs
  }

  // Custom InputTypes
  /**
   * DiscoveryRunCountOutputType without action
   */
  export type DiscoveryRunCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveryRunCountOutputType
     */
    select?: DiscoveryRunCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DiscoveryRunCountOutputType without action
   */
  export type DiscoveryRunCountOutputTypeCountDiscoveredItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscoveredItemWhereInput
  }


  /**
   * Count Type SupportGroupCountOutputType
   */

  export type SupportGroupCountOutputType = {
    members: number
    permissions: number
    configurationItems: number
    ownerships: number
    escalationTarget: number
  }

  export type SupportGroupCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    members?: boolean | SupportGroupCountOutputTypeCountMembersArgs
    permissions?: boolean | SupportGroupCountOutputTypeCountPermissionsArgs
    configurationItems?: boolean | SupportGroupCountOutputTypeCountConfigurationItemsArgs
    ownerships?: boolean | SupportGroupCountOutputTypeCountOwnershipsArgs
    escalationTarget?: boolean | SupportGroupCountOutputTypeCountEscalationTargetArgs
  }

  // Custom InputTypes
  /**
   * SupportGroupCountOutputType without action
   */
  export type SupportGroupCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupCountOutputType
     */
    select?: SupportGroupCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SupportGroupCountOutputType without action
   */
  export type SupportGroupCountOutputTypeCountMembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupportGroupMemberWhereInput
  }

  /**
   * SupportGroupCountOutputType without action
   */
  export type SupportGroupCountOutputTypeCountPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupportGroupPermissionWhereInput
  }

  /**
   * SupportGroupCountOutputType without action
   */
  export type SupportGroupCountOutputTypeCountConfigurationItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConfigurationItemWhereInput
  }

  /**
   * SupportGroupCountOutputType without action
   */
  export type SupportGroupCountOutputTypeCountOwnershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiOwnershipWhereInput
  }

  /**
   * SupportGroupCountOutputType without action
   */
  export type SupportGroupCountOutputTypeCountEscalationTargetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupportGroupWhereInput
  }


  /**
   * Models
   */

  /**
   * Model ConfigurationItem
   */

  export type AggregateConfigurationItem = {
    _count: ConfigurationItemCountAggregateOutputType | null
    _avg: ConfigurationItemAvgAggregateOutputType | null
    _sum: ConfigurationItemSumAggregateOutputType | null
    _min: ConfigurationItemMinAggregateOutputType | null
    _max: ConfigurationItemMaxAggregateOutputType | null
  }

  export type ConfigurationItemAvgAggregateOutputType = {
    purchasePrice: Decimal | null
    currentValue: Decimal | null
  }

  export type ConfigurationItemSumAggregateOutputType = {
    purchasePrice: Decimal | null
    currentValue: Decimal | null
  }

  export type ConfigurationItemMinAggregateOutputType = {
    id: string | null
    ciId: string | null
    name: string | null
    displayName: string | null
    description: string | null
    ciType: string | null
    ciSubType: string | null
    ciStatus: string | null
    operationalStatus: string | null
    environment: string | null
    criticality: string | null
    businessService: string | null
    owner: string | null
    technicalOwner: string | null
    supportGroup: string | null
    location: string | null
    site: string | null
    building: string | null
    floor: string | null
    room: string | null
    rack: string | null
    rackPosition: string | null
    department: string | null
    costCenter: string | null
    installDate: Date | null
    firstDiscoveredDate: Date | null
    lastDiscoveredDate: Date | null
    warrantyExpiryDate: Date | null
    maintenanceExpiryDate: Date | null
    retirementDate: Date | null
    discoverySource: string | null
    isDiscovered: boolean | null
    lastScanDate: Date | null
    purchasePrice: Decimal | null
    currentValue: Decimal | null
    vendor: string | null
    manufacturer: string | null
    model: string | null
    serialNumber: string | null
    assetTag: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type ConfigurationItemMaxAggregateOutputType = {
    id: string | null
    ciId: string | null
    name: string | null
    displayName: string | null
    description: string | null
    ciType: string | null
    ciSubType: string | null
    ciStatus: string | null
    operationalStatus: string | null
    environment: string | null
    criticality: string | null
    businessService: string | null
    owner: string | null
    technicalOwner: string | null
    supportGroup: string | null
    location: string | null
    site: string | null
    building: string | null
    floor: string | null
    room: string | null
    rack: string | null
    rackPosition: string | null
    department: string | null
    costCenter: string | null
    installDate: Date | null
    firstDiscoveredDate: Date | null
    lastDiscoveredDate: Date | null
    warrantyExpiryDate: Date | null
    maintenanceExpiryDate: Date | null
    retirementDate: Date | null
    discoverySource: string | null
    isDiscovered: boolean | null
    lastScanDate: Date | null
    purchasePrice: Decimal | null
    currentValue: Decimal | null
    vendor: string | null
    manufacturer: string | null
    model: string | null
    serialNumber: string | null
    assetTag: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type ConfigurationItemCountAggregateOutputType = {
    id: number
    ciId: number
    name: number
    displayName: number
    description: number
    ciType: number
    ciSubType: number
    ciStatus: number
    operationalStatus: number
    environment: number
    criticality: number
    businessService: number
    owner: number
    technicalOwner: number
    supportGroup: number
    location: number
    site: number
    building: number
    floor: number
    room: number
    rack: number
    rackPosition: number
    department: number
    costCenter: number
    installDate: number
    firstDiscoveredDate: number
    lastDiscoveredDate: number
    warrantyExpiryDate: number
    maintenanceExpiryDate: number
    retirementDate: number
    discoverySource: number
    isDiscovered: number
    lastScanDate: number
    purchasePrice: number
    currentValue: number
    vendor: number
    manufacturer: number
    model: number
    serialNumber: number
    assetTag: number
    customFields: number
    attributes: number
    tags: number
    createdAt: number
    updatedAt: number
    createdBy: number
    updatedBy: number
    _all: number
  }


  export type ConfigurationItemAvgAggregateInputType = {
    purchasePrice?: true
    currentValue?: true
  }

  export type ConfigurationItemSumAggregateInputType = {
    purchasePrice?: true
    currentValue?: true
  }

  export type ConfigurationItemMinAggregateInputType = {
    id?: true
    ciId?: true
    name?: true
    displayName?: true
    description?: true
    ciType?: true
    ciSubType?: true
    ciStatus?: true
    operationalStatus?: true
    environment?: true
    criticality?: true
    businessService?: true
    owner?: true
    technicalOwner?: true
    supportGroup?: true
    location?: true
    site?: true
    building?: true
    floor?: true
    room?: true
    rack?: true
    rackPosition?: true
    department?: true
    costCenter?: true
    installDate?: true
    firstDiscoveredDate?: true
    lastDiscoveredDate?: true
    warrantyExpiryDate?: true
    maintenanceExpiryDate?: true
    retirementDate?: true
    discoverySource?: true
    isDiscovered?: true
    lastScanDate?: true
    purchasePrice?: true
    currentValue?: true
    vendor?: true
    manufacturer?: true
    model?: true
    serialNumber?: true
    assetTag?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type ConfigurationItemMaxAggregateInputType = {
    id?: true
    ciId?: true
    name?: true
    displayName?: true
    description?: true
    ciType?: true
    ciSubType?: true
    ciStatus?: true
    operationalStatus?: true
    environment?: true
    criticality?: true
    businessService?: true
    owner?: true
    technicalOwner?: true
    supportGroup?: true
    location?: true
    site?: true
    building?: true
    floor?: true
    room?: true
    rack?: true
    rackPosition?: true
    department?: true
    costCenter?: true
    installDate?: true
    firstDiscoveredDate?: true
    lastDiscoveredDate?: true
    warrantyExpiryDate?: true
    maintenanceExpiryDate?: true
    retirementDate?: true
    discoverySource?: true
    isDiscovered?: true
    lastScanDate?: true
    purchasePrice?: true
    currentValue?: true
    vendor?: true
    manufacturer?: true
    model?: true
    serialNumber?: true
    assetTag?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type ConfigurationItemCountAggregateInputType = {
    id?: true
    ciId?: true
    name?: true
    displayName?: true
    description?: true
    ciType?: true
    ciSubType?: true
    ciStatus?: true
    operationalStatus?: true
    environment?: true
    criticality?: true
    businessService?: true
    owner?: true
    technicalOwner?: true
    supportGroup?: true
    location?: true
    site?: true
    building?: true
    floor?: true
    room?: true
    rack?: true
    rackPosition?: true
    department?: true
    costCenter?: true
    installDate?: true
    firstDiscoveredDate?: true
    lastDiscoveredDate?: true
    warrantyExpiryDate?: true
    maintenanceExpiryDate?: true
    retirementDate?: true
    discoverySource?: true
    isDiscovered?: true
    lastScanDate?: true
    purchasePrice?: true
    currentValue?: true
    vendor?: true
    manufacturer?: true
    model?: true
    serialNumber?: true
    assetTag?: true
    customFields?: true
    attributes?: true
    tags?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
    _all?: true
  }

  export type ConfigurationItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConfigurationItem to aggregate.
     */
    where?: ConfigurationItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfigurationItems to fetch.
     */
    orderBy?: ConfigurationItemOrderByWithRelationInput | ConfigurationItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConfigurationItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfigurationItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfigurationItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ConfigurationItems
    **/
    _count?: true | ConfigurationItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ConfigurationItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ConfigurationItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConfigurationItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConfigurationItemMaxAggregateInputType
  }

  export type GetConfigurationItemAggregateType<T extends ConfigurationItemAggregateArgs> = {
        [P in keyof T & keyof AggregateConfigurationItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConfigurationItem[P]>
      : GetScalarType<T[P], AggregateConfigurationItem[P]>
  }




  export type ConfigurationItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConfigurationItemWhereInput
    orderBy?: ConfigurationItemOrderByWithAggregationInput | ConfigurationItemOrderByWithAggregationInput[]
    by: ConfigurationItemScalarFieldEnum[] | ConfigurationItemScalarFieldEnum
    having?: ConfigurationItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConfigurationItemCountAggregateInputType | true
    _avg?: ConfigurationItemAvgAggregateInputType
    _sum?: ConfigurationItemSumAggregateInputType
    _min?: ConfigurationItemMinAggregateInputType
    _max?: ConfigurationItemMaxAggregateInputType
  }

  export type ConfigurationItemGroupByOutputType = {
    id: string
    ciId: string
    name: string
    displayName: string | null
    description: string | null
    ciType: string
    ciSubType: string | null
    ciStatus: string
    operationalStatus: string | null
    environment: string | null
    criticality: string | null
    businessService: string | null
    owner: string | null
    technicalOwner: string | null
    supportGroup: string | null
    location: string | null
    site: string | null
    building: string | null
    floor: string | null
    room: string | null
    rack: string | null
    rackPosition: string | null
    department: string | null
    costCenter: string | null
    installDate: Date | null
    firstDiscoveredDate: Date | null
    lastDiscoveredDate: Date | null
    warrantyExpiryDate: Date | null
    maintenanceExpiryDate: Date | null
    retirementDate: Date | null
    discoverySource: string | null
    isDiscovered: boolean
    lastScanDate: Date | null
    purchasePrice: Decimal | null
    currentValue: Decimal | null
    vendor: string | null
    manufacturer: string | null
    model: string | null
    serialNumber: string | null
    assetTag: string | null
    customFields: JsonValue | null
    attributes: JsonValue | null
    tags: string[]
    createdAt: Date
    updatedAt: Date
    createdBy: string | null
    updatedBy: string | null
    _count: ConfigurationItemCountAggregateOutputType | null
    _avg: ConfigurationItemAvgAggregateOutputType | null
    _sum: ConfigurationItemSumAggregateOutputType | null
    _min: ConfigurationItemMinAggregateOutputType | null
    _max: ConfigurationItemMaxAggregateOutputType | null
  }

  type GetConfigurationItemGroupByPayload<T extends ConfigurationItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConfigurationItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConfigurationItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConfigurationItemGroupByOutputType[P]>
            : GetScalarType<T[P], ConfigurationItemGroupByOutputType[P]>
        }
      >
    >


  export type ConfigurationItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ciId?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    ciType?: boolean
    ciSubType?: boolean
    ciStatus?: boolean
    operationalStatus?: boolean
    environment?: boolean
    criticality?: boolean
    businessService?: boolean
    owner?: boolean
    technicalOwner?: boolean
    supportGroup?: boolean
    location?: boolean
    site?: boolean
    building?: boolean
    floor?: boolean
    room?: boolean
    rack?: boolean
    rackPosition?: boolean
    department?: boolean
    costCenter?: boolean
    installDate?: boolean
    firstDiscoveredDate?: boolean
    lastDiscoveredDate?: boolean
    warrantyExpiryDate?: boolean
    maintenanceExpiryDate?: boolean
    retirementDate?: boolean
    discoverySource?: boolean
    isDiscovered?: boolean
    lastScanDate?: boolean
    purchasePrice?: boolean
    currentValue?: boolean
    vendor?: boolean
    manufacturer?: boolean
    model?: boolean
    serialNumber?: boolean
    assetTag?: boolean
    customFields?: boolean
    attributes?: boolean
    tags?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    ciType_rel?: boolean | CiTypeDefaultArgs<ExtArgs>
    outgoingRelationships?: boolean | ConfigurationItem$outgoingRelationshipsArgs<ExtArgs>
    incomingRelationships?: boolean | ConfigurationItem$incomingRelationshipsArgs<ExtArgs>
    incidents?: boolean | ConfigurationItem$incidentsArgs<ExtArgs>
    changes?: boolean | ConfigurationItem$changesArgs<ExtArgs>
    businessServices?: boolean | ConfigurationItem$businessServicesArgs<ExtArgs>
    ownership?: boolean | ConfigurationItem$ownershipArgs<ExtArgs>
    inventoryMapping?: boolean | ConfigurationItem$inventoryMappingArgs<ExtArgs>
    supportGroups?: boolean | ConfigurationItem$supportGroupsArgs<ExtArgs>
    hardwareDetails?: boolean | ConfigurationItem$hardwareDetailsArgs<ExtArgs>
    softwareDetails?: boolean | ConfigurationItem$softwareDetailsArgs<ExtArgs>
    applicationDetails?: boolean | ConfigurationItem$applicationDetailsArgs<ExtArgs>
    networkDetails?: boolean | ConfigurationItem$networkDetailsArgs<ExtArgs>
    serviceDetails?: boolean | ConfigurationItem$serviceDetailsArgs<ExtArgs>
    databaseDetails?: boolean | ConfigurationItem$databaseDetailsArgs<ExtArgs>
    virtualDetails?: boolean | ConfigurationItem$virtualDetailsArgs<ExtArgs>
    facilityDetails?: boolean | ConfigurationItem$facilityDetailsArgs<ExtArgs>
    _count?: boolean | ConfigurationItemCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["configurationItem"]>

  export type ConfigurationItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ciId?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    ciType?: boolean
    ciSubType?: boolean
    ciStatus?: boolean
    operationalStatus?: boolean
    environment?: boolean
    criticality?: boolean
    businessService?: boolean
    owner?: boolean
    technicalOwner?: boolean
    supportGroup?: boolean
    location?: boolean
    site?: boolean
    building?: boolean
    floor?: boolean
    room?: boolean
    rack?: boolean
    rackPosition?: boolean
    department?: boolean
    costCenter?: boolean
    installDate?: boolean
    firstDiscoveredDate?: boolean
    lastDiscoveredDate?: boolean
    warrantyExpiryDate?: boolean
    maintenanceExpiryDate?: boolean
    retirementDate?: boolean
    discoverySource?: boolean
    isDiscovered?: boolean
    lastScanDate?: boolean
    purchasePrice?: boolean
    currentValue?: boolean
    vendor?: boolean
    manufacturer?: boolean
    model?: boolean
    serialNumber?: boolean
    assetTag?: boolean
    customFields?: boolean
    attributes?: boolean
    tags?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    ciType_rel?: boolean | CiTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["configurationItem"]>

  export type ConfigurationItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ciId?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    ciType?: boolean
    ciSubType?: boolean
    ciStatus?: boolean
    operationalStatus?: boolean
    environment?: boolean
    criticality?: boolean
    businessService?: boolean
    owner?: boolean
    technicalOwner?: boolean
    supportGroup?: boolean
    location?: boolean
    site?: boolean
    building?: boolean
    floor?: boolean
    room?: boolean
    rack?: boolean
    rackPosition?: boolean
    department?: boolean
    costCenter?: boolean
    installDate?: boolean
    firstDiscoveredDate?: boolean
    lastDiscoveredDate?: boolean
    warrantyExpiryDate?: boolean
    maintenanceExpiryDate?: boolean
    retirementDate?: boolean
    discoverySource?: boolean
    isDiscovered?: boolean
    lastScanDate?: boolean
    purchasePrice?: boolean
    currentValue?: boolean
    vendor?: boolean
    manufacturer?: boolean
    model?: boolean
    serialNumber?: boolean
    assetTag?: boolean
    customFields?: boolean
    attributes?: boolean
    tags?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    ciType_rel?: boolean | CiTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["configurationItem"]>

  export type ConfigurationItemSelectScalar = {
    id?: boolean
    ciId?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    ciType?: boolean
    ciSubType?: boolean
    ciStatus?: boolean
    operationalStatus?: boolean
    environment?: boolean
    criticality?: boolean
    businessService?: boolean
    owner?: boolean
    technicalOwner?: boolean
    supportGroup?: boolean
    location?: boolean
    site?: boolean
    building?: boolean
    floor?: boolean
    room?: boolean
    rack?: boolean
    rackPosition?: boolean
    department?: boolean
    costCenter?: boolean
    installDate?: boolean
    firstDiscoveredDate?: boolean
    lastDiscoveredDate?: boolean
    warrantyExpiryDate?: boolean
    maintenanceExpiryDate?: boolean
    retirementDate?: boolean
    discoverySource?: boolean
    isDiscovered?: boolean
    lastScanDate?: boolean
    purchasePrice?: boolean
    currentValue?: boolean
    vendor?: boolean
    manufacturer?: boolean
    model?: boolean
    serialNumber?: boolean
    assetTag?: boolean
    customFields?: boolean
    attributes?: boolean
    tags?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
  }

  export type ConfigurationItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "ciId" | "name" | "displayName" | "description" | "ciType" | "ciSubType" | "ciStatus" | "operationalStatus" | "environment" | "criticality" | "businessService" | "owner" | "technicalOwner" | "supportGroup" | "location" | "site" | "building" | "floor" | "room" | "rack" | "rackPosition" | "department" | "costCenter" | "installDate" | "firstDiscoveredDate" | "lastDiscoveredDate" | "warrantyExpiryDate" | "maintenanceExpiryDate" | "retirementDate" | "discoverySource" | "isDiscovered" | "lastScanDate" | "purchasePrice" | "currentValue" | "vendor" | "manufacturer" | "model" | "serialNumber" | "assetTag" | "customFields" | "attributes" | "tags" | "createdAt" | "updatedAt" | "createdBy" | "updatedBy", ExtArgs["result"]["configurationItem"]>
  export type ConfigurationItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ciType_rel?: boolean | CiTypeDefaultArgs<ExtArgs>
    outgoingRelationships?: boolean | ConfigurationItem$outgoingRelationshipsArgs<ExtArgs>
    incomingRelationships?: boolean | ConfigurationItem$incomingRelationshipsArgs<ExtArgs>
    incidents?: boolean | ConfigurationItem$incidentsArgs<ExtArgs>
    changes?: boolean | ConfigurationItem$changesArgs<ExtArgs>
    businessServices?: boolean | ConfigurationItem$businessServicesArgs<ExtArgs>
    ownership?: boolean | ConfigurationItem$ownershipArgs<ExtArgs>
    inventoryMapping?: boolean | ConfigurationItem$inventoryMappingArgs<ExtArgs>
    supportGroups?: boolean | ConfigurationItem$supportGroupsArgs<ExtArgs>
    hardwareDetails?: boolean | ConfigurationItem$hardwareDetailsArgs<ExtArgs>
    softwareDetails?: boolean | ConfigurationItem$softwareDetailsArgs<ExtArgs>
    applicationDetails?: boolean | ConfigurationItem$applicationDetailsArgs<ExtArgs>
    networkDetails?: boolean | ConfigurationItem$networkDetailsArgs<ExtArgs>
    serviceDetails?: boolean | ConfigurationItem$serviceDetailsArgs<ExtArgs>
    databaseDetails?: boolean | ConfigurationItem$databaseDetailsArgs<ExtArgs>
    virtualDetails?: boolean | ConfigurationItem$virtualDetailsArgs<ExtArgs>
    facilityDetails?: boolean | ConfigurationItem$facilityDetailsArgs<ExtArgs>
    _count?: boolean | ConfigurationItemCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ConfigurationItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ciType_rel?: boolean | CiTypeDefaultArgs<ExtArgs>
  }
  export type ConfigurationItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ciType_rel?: boolean | CiTypeDefaultArgs<ExtArgs>
  }

  export type $ConfigurationItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ConfigurationItem"
    objects: {
      ciType_rel: Prisma.$CiTypePayload<ExtArgs>
      outgoingRelationships: Prisma.$CiRelationshipPayload<ExtArgs>[]
      incomingRelationships: Prisma.$CiRelationshipPayload<ExtArgs>[]
      incidents: Prisma.$CiIncidentPayload<ExtArgs>[]
      changes: Prisma.$CiChangePayload<ExtArgs>[]
      businessServices: Prisma.$CiBusinessServicePayload<ExtArgs>[]
      ownership: Prisma.$CiOwnershipPayload<ExtArgs>[]
      inventoryMapping: Prisma.$CmdbInventoryMappingPayload<ExtArgs>[]
      supportGroups: Prisma.$SupportGroupPayload<ExtArgs>[]
      hardwareDetails: Prisma.$HardwareCiPayload<ExtArgs> | null
      softwareDetails: Prisma.$SoftwareCiPayload<ExtArgs> | null
      applicationDetails: Prisma.$ApplicationCiPayload<ExtArgs> | null
      networkDetails: Prisma.$NetworkCiPayload<ExtArgs> | null
      serviceDetails: Prisma.$ServiceCiPayload<ExtArgs> | null
      databaseDetails: Prisma.$DatabaseCiPayload<ExtArgs> | null
      virtualDetails: Prisma.$VirtualCiPayload<ExtArgs> | null
      facilityDetails: Prisma.$FacilityCiPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      ciId: string
      name: string
      displayName: string | null
      description: string | null
      ciType: string
      ciSubType: string | null
      ciStatus: string
      operationalStatus: string | null
      environment: string | null
      criticality: string | null
      businessService: string | null
      owner: string | null
      technicalOwner: string | null
      supportGroup: string | null
      location: string | null
      site: string | null
      building: string | null
      floor: string | null
      room: string | null
      rack: string | null
      rackPosition: string | null
      department: string | null
      costCenter: string | null
      installDate: Date | null
      firstDiscoveredDate: Date | null
      lastDiscoveredDate: Date | null
      warrantyExpiryDate: Date | null
      maintenanceExpiryDate: Date | null
      retirementDate: Date | null
      discoverySource: string | null
      isDiscovered: boolean
      lastScanDate: Date | null
      purchasePrice: Prisma.Decimal | null
      currentValue: Prisma.Decimal | null
      vendor: string | null
      manufacturer: string | null
      model: string | null
      serialNumber: string | null
      assetTag: string | null
      customFields: Prisma.JsonValue | null
      attributes: Prisma.JsonValue | null
      tags: string[]
      createdAt: Date
      updatedAt: Date
      createdBy: string | null
      updatedBy: string | null
    }, ExtArgs["result"]["configurationItem"]>
    composites: {}
  }

  type ConfigurationItemGetPayload<S extends boolean | null | undefined | ConfigurationItemDefaultArgs> = $Result.GetResult<Prisma.$ConfigurationItemPayload, S>

  type ConfigurationItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ConfigurationItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ConfigurationItemCountAggregateInputType | true
    }

  export interface ConfigurationItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ConfigurationItem'], meta: { name: 'ConfigurationItem' } }
    /**
     * Find zero or one ConfigurationItem that matches the filter.
     * @param {ConfigurationItemFindUniqueArgs} args - Arguments to find a ConfigurationItem
     * @example
     * // Get one ConfigurationItem
     * const configurationItem = await prisma.configurationItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConfigurationItemFindUniqueArgs>(args: SelectSubset<T, ConfigurationItemFindUniqueArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ConfigurationItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ConfigurationItemFindUniqueOrThrowArgs} args - Arguments to find a ConfigurationItem
     * @example
     * // Get one ConfigurationItem
     * const configurationItem = await prisma.configurationItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConfigurationItemFindUniqueOrThrowArgs>(args: SelectSubset<T, ConfigurationItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ConfigurationItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigurationItemFindFirstArgs} args - Arguments to find a ConfigurationItem
     * @example
     * // Get one ConfigurationItem
     * const configurationItem = await prisma.configurationItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConfigurationItemFindFirstArgs>(args?: SelectSubset<T, ConfigurationItemFindFirstArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ConfigurationItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigurationItemFindFirstOrThrowArgs} args - Arguments to find a ConfigurationItem
     * @example
     * // Get one ConfigurationItem
     * const configurationItem = await prisma.configurationItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConfigurationItemFindFirstOrThrowArgs>(args?: SelectSubset<T, ConfigurationItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ConfigurationItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigurationItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ConfigurationItems
     * const configurationItems = await prisma.configurationItem.findMany()
     * 
     * // Get first 10 ConfigurationItems
     * const configurationItems = await prisma.configurationItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const configurationItemWithIdOnly = await prisma.configurationItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ConfigurationItemFindManyArgs>(args?: SelectSubset<T, ConfigurationItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ConfigurationItem.
     * @param {ConfigurationItemCreateArgs} args - Arguments to create a ConfigurationItem.
     * @example
     * // Create one ConfigurationItem
     * const ConfigurationItem = await prisma.configurationItem.create({
     *   data: {
     *     // ... data to create a ConfigurationItem
     *   }
     * })
     * 
     */
    create<T extends ConfigurationItemCreateArgs>(args: SelectSubset<T, ConfigurationItemCreateArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ConfigurationItems.
     * @param {ConfigurationItemCreateManyArgs} args - Arguments to create many ConfigurationItems.
     * @example
     * // Create many ConfigurationItems
     * const configurationItem = await prisma.configurationItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConfigurationItemCreateManyArgs>(args?: SelectSubset<T, ConfigurationItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ConfigurationItems and returns the data saved in the database.
     * @param {ConfigurationItemCreateManyAndReturnArgs} args - Arguments to create many ConfigurationItems.
     * @example
     * // Create many ConfigurationItems
     * const configurationItem = await prisma.configurationItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ConfigurationItems and only return the `id`
     * const configurationItemWithIdOnly = await prisma.configurationItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ConfigurationItemCreateManyAndReturnArgs>(args?: SelectSubset<T, ConfigurationItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ConfigurationItem.
     * @param {ConfigurationItemDeleteArgs} args - Arguments to delete one ConfigurationItem.
     * @example
     * // Delete one ConfigurationItem
     * const ConfigurationItem = await prisma.configurationItem.delete({
     *   where: {
     *     // ... filter to delete one ConfigurationItem
     *   }
     * })
     * 
     */
    delete<T extends ConfigurationItemDeleteArgs>(args: SelectSubset<T, ConfigurationItemDeleteArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ConfigurationItem.
     * @param {ConfigurationItemUpdateArgs} args - Arguments to update one ConfigurationItem.
     * @example
     * // Update one ConfigurationItem
     * const configurationItem = await prisma.configurationItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConfigurationItemUpdateArgs>(args: SelectSubset<T, ConfigurationItemUpdateArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ConfigurationItems.
     * @param {ConfigurationItemDeleteManyArgs} args - Arguments to filter ConfigurationItems to delete.
     * @example
     * // Delete a few ConfigurationItems
     * const { count } = await prisma.configurationItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConfigurationItemDeleteManyArgs>(args?: SelectSubset<T, ConfigurationItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ConfigurationItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigurationItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ConfigurationItems
     * const configurationItem = await prisma.configurationItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConfigurationItemUpdateManyArgs>(args: SelectSubset<T, ConfigurationItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ConfigurationItems and returns the data updated in the database.
     * @param {ConfigurationItemUpdateManyAndReturnArgs} args - Arguments to update many ConfigurationItems.
     * @example
     * // Update many ConfigurationItems
     * const configurationItem = await prisma.configurationItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ConfigurationItems and only return the `id`
     * const configurationItemWithIdOnly = await prisma.configurationItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ConfigurationItemUpdateManyAndReturnArgs>(args: SelectSubset<T, ConfigurationItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ConfigurationItem.
     * @param {ConfigurationItemUpsertArgs} args - Arguments to update or create a ConfigurationItem.
     * @example
     * // Update or create a ConfigurationItem
     * const configurationItem = await prisma.configurationItem.upsert({
     *   create: {
     *     // ... data to create a ConfigurationItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ConfigurationItem we want to update
     *   }
     * })
     */
    upsert<T extends ConfigurationItemUpsertArgs>(args: SelectSubset<T, ConfigurationItemUpsertArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ConfigurationItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigurationItemCountArgs} args - Arguments to filter ConfigurationItems to count.
     * @example
     * // Count the number of ConfigurationItems
     * const count = await prisma.configurationItem.count({
     *   where: {
     *     // ... the filter for the ConfigurationItems we want to count
     *   }
     * })
    **/
    count<T extends ConfigurationItemCountArgs>(
      args?: Subset<T, ConfigurationItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConfigurationItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ConfigurationItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigurationItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConfigurationItemAggregateArgs>(args: Subset<T, ConfigurationItemAggregateArgs>): Prisma.PrismaPromise<GetConfigurationItemAggregateType<T>>

    /**
     * Group by ConfigurationItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigurationItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConfigurationItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConfigurationItemGroupByArgs['orderBy'] }
        : { orderBy?: ConfigurationItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConfigurationItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConfigurationItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ConfigurationItem model
   */
  readonly fields: ConfigurationItemFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for ConfigurationItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConfigurationItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ciType_rel<T extends CiTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CiTypeDefaultArgs<ExtArgs>>): Prisma__CiTypeClient<$Result.GetResult<Prisma.$CiTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    outgoingRelationships<T extends ConfigurationItem$outgoingRelationshipsArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItem$outgoingRelationshipsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiRelationshipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    incomingRelationships<T extends ConfigurationItem$incomingRelationshipsArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItem$incomingRelationshipsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiRelationshipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    incidents<T extends ConfigurationItem$incidentsArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItem$incidentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiIncidentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    changes<T extends ConfigurationItem$changesArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItem$changesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiChangePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    businessServices<T extends ConfigurationItem$businessServicesArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItem$businessServicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiBusinessServicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ownership<T extends ConfigurationItem$ownershipArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItem$ownershipArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiOwnershipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    inventoryMapping<T extends ConfigurationItem$inventoryMappingArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItem$inventoryMappingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CmdbInventoryMappingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    supportGroups<T extends ConfigurationItem$supportGroupsArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItem$supportGroupsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportGroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    hardwareDetails<T extends ConfigurationItem$hardwareDetailsArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItem$hardwareDetailsArgs<ExtArgs>>): Prisma__HardwareCiClient<$Result.GetResult<Prisma.$HardwareCiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    softwareDetails<T extends ConfigurationItem$softwareDetailsArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItem$softwareDetailsArgs<ExtArgs>>): Prisma__SoftwareCiClient<$Result.GetResult<Prisma.$SoftwareCiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    applicationDetails<T extends ConfigurationItem$applicationDetailsArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItem$applicationDetailsArgs<ExtArgs>>): Prisma__ApplicationCiClient<$Result.GetResult<Prisma.$ApplicationCiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    networkDetails<T extends ConfigurationItem$networkDetailsArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItem$networkDetailsArgs<ExtArgs>>): Prisma__NetworkCiClient<$Result.GetResult<Prisma.$NetworkCiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    serviceDetails<T extends ConfigurationItem$serviceDetailsArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItem$serviceDetailsArgs<ExtArgs>>): Prisma__ServiceCiClient<$Result.GetResult<Prisma.$ServiceCiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    databaseDetails<T extends ConfigurationItem$databaseDetailsArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItem$databaseDetailsArgs<ExtArgs>>): Prisma__DatabaseCiClient<$Result.GetResult<Prisma.$DatabaseCiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    virtualDetails<T extends ConfigurationItem$virtualDetailsArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItem$virtualDetailsArgs<ExtArgs>>): Prisma__VirtualCiClient<$Result.GetResult<Prisma.$VirtualCiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    facilityDetails<T extends ConfigurationItem$facilityDetailsArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItem$facilityDetailsArgs<ExtArgs>>): Prisma__FacilityCiClient<$Result.GetResult<Prisma.$FacilityCiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ConfigurationItem model
   */
  interface ConfigurationItemFieldRefs {
    readonly id: FieldRef<"ConfigurationItem", 'String'>
    readonly ciId: FieldRef<"ConfigurationItem", 'String'>
    readonly name: FieldRef<"ConfigurationItem", 'String'>
    readonly displayName: FieldRef<"ConfigurationItem", 'String'>
    readonly description: FieldRef<"ConfigurationItem", 'String'>
    readonly ciType: FieldRef<"ConfigurationItem", 'String'>
    readonly ciSubType: FieldRef<"ConfigurationItem", 'String'>
    readonly ciStatus: FieldRef<"ConfigurationItem", 'String'>
    readonly operationalStatus: FieldRef<"ConfigurationItem", 'String'>
    readonly environment: FieldRef<"ConfigurationItem", 'String'>
    readonly criticality: FieldRef<"ConfigurationItem", 'String'>
    readonly businessService: FieldRef<"ConfigurationItem", 'String'>
    readonly owner: FieldRef<"ConfigurationItem", 'String'>
    readonly technicalOwner: FieldRef<"ConfigurationItem", 'String'>
    readonly supportGroup: FieldRef<"ConfigurationItem", 'String'>
    readonly location: FieldRef<"ConfigurationItem", 'String'>
    readonly site: FieldRef<"ConfigurationItem", 'String'>
    readonly building: FieldRef<"ConfigurationItem", 'String'>
    readonly floor: FieldRef<"ConfigurationItem", 'String'>
    readonly room: FieldRef<"ConfigurationItem", 'String'>
    readonly rack: FieldRef<"ConfigurationItem", 'String'>
    readonly rackPosition: FieldRef<"ConfigurationItem", 'String'>
    readonly department: FieldRef<"ConfigurationItem", 'String'>
    readonly costCenter: FieldRef<"ConfigurationItem", 'String'>
    readonly installDate: FieldRef<"ConfigurationItem", 'DateTime'>
    readonly firstDiscoveredDate: FieldRef<"ConfigurationItem", 'DateTime'>
    readonly lastDiscoveredDate: FieldRef<"ConfigurationItem", 'DateTime'>
    readonly warrantyExpiryDate: FieldRef<"ConfigurationItem", 'DateTime'>
    readonly maintenanceExpiryDate: FieldRef<"ConfigurationItem", 'DateTime'>
    readonly retirementDate: FieldRef<"ConfigurationItem", 'DateTime'>
    readonly discoverySource: FieldRef<"ConfigurationItem", 'String'>
    readonly isDiscovered: FieldRef<"ConfigurationItem", 'Boolean'>
    readonly lastScanDate: FieldRef<"ConfigurationItem", 'DateTime'>
    readonly purchasePrice: FieldRef<"ConfigurationItem", 'Decimal'>
    readonly currentValue: FieldRef<"ConfigurationItem", 'Decimal'>
    readonly vendor: FieldRef<"ConfigurationItem", 'String'>
    readonly manufacturer: FieldRef<"ConfigurationItem", 'String'>
    readonly model: FieldRef<"ConfigurationItem", 'String'>
    readonly serialNumber: FieldRef<"ConfigurationItem", 'String'>
    readonly assetTag: FieldRef<"ConfigurationItem", 'String'>
    readonly customFields: FieldRef<"ConfigurationItem", 'Json'>
    readonly attributes: FieldRef<"ConfigurationItem", 'Json'>
    readonly tags: FieldRef<"ConfigurationItem", 'String[]'>
    readonly createdAt: FieldRef<"ConfigurationItem", 'DateTime'>
    readonly updatedAt: FieldRef<"ConfigurationItem", 'DateTime'>
    readonly createdBy: FieldRef<"ConfigurationItem", 'String'>
    readonly updatedBy: FieldRef<"ConfigurationItem", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ConfigurationItem findUnique
   */
  export type ConfigurationItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigurationItem
     */
    select?: ConfigurationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfigurationItem
     */
    omit?: ConfigurationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigurationItemInclude<ExtArgs> | null
    /**
     * Filter, which ConfigurationItem to fetch.
     */
    where: ConfigurationItemWhereUniqueInput
  }

  /**
   * ConfigurationItem findUniqueOrThrow
   */
  export type ConfigurationItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigurationItem
     */
    select?: ConfigurationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfigurationItem
     */
    omit?: ConfigurationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigurationItemInclude<ExtArgs> | null
    /**
     * Filter, which ConfigurationItem to fetch.
     */
    where: ConfigurationItemWhereUniqueInput
  }

  /**
   * ConfigurationItem findFirst
   */
  export type ConfigurationItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigurationItem
     */
    select?: ConfigurationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfigurationItem
     */
    omit?: ConfigurationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigurationItemInclude<ExtArgs> | null
    /**
     * Filter, which ConfigurationItem to fetch.
     */
    where?: ConfigurationItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfigurationItems to fetch.
     */
    orderBy?: ConfigurationItemOrderByWithRelationInput | ConfigurationItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConfigurationItems.
     */
    cursor?: ConfigurationItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfigurationItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfigurationItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConfigurationItems.
     */
    distinct?: ConfigurationItemScalarFieldEnum | ConfigurationItemScalarFieldEnum[]
  }

  /**
   * ConfigurationItem findFirstOrThrow
   */
  export type ConfigurationItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigurationItem
     */
    select?: ConfigurationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfigurationItem
     */
    omit?: ConfigurationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigurationItemInclude<ExtArgs> | null
    /**
     * Filter, which ConfigurationItem to fetch.
     */
    where?: ConfigurationItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfigurationItems to fetch.
     */
    orderBy?: ConfigurationItemOrderByWithRelationInput | ConfigurationItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConfigurationItems.
     */
    cursor?: ConfigurationItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfigurationItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfigurationItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConfigurationItems.
     */
    distinct?: ConfigurationItemScalarFieldEnum | ConfigurationItemScalarFieldEnum[]
  }

  /**
   * ConfigurationItem findMany
   */
  export type ConfigurationItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigurationItem
     */
    select?: ConfigurationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfigurationItem
     */
    omit?: ConfigurationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigurationItemInclude<ExtArgs> | null
    /**
     * Filter, which ConfigurationItems to fetch.
     */
    where?: ConfigurationItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfigurationItems to fetch.
     */
    orderBy?: ConfigurationItemOrderByWithRelationInput | ConfigurationItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ConfigurationItems.
     */
    cursor?: ConfigurationItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfigurationItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfigurationItems.
     */
    skip?: number
    distinct?: ConfigurationItemScalarFieldEnum | ConfigurationItemScalarFieldEnum[]
  }

  /**
   * ConfigurationItem create
   */
  export type ConfigurationItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigurationItem
     */
    select?: ConfigurationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfigurationItem
     */
    omit?: ConfigurationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigurationItemInclude<ExtArgs> | null
    /**
     * The data needed to create a ConfigurationItem.
     */
    data: XOR<ConfigurationItemCreateInput, ConfigurationItemUncheckedCreateInput>
  }

  /**
   * ConfigurationItem createMany
   */
  export type ConfigurationItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ConfigurationItems.
     */
    data: ConfigurationItemCreateManyInput | ConfigurationItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ConfigurationItem createManyAndReturn
   */
  export type ConfigurationItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigurationItem
     */
    select?: ConfigurationItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ConfigurationItem
     */
    omit?: ConfigurationItemOmit<ExtArgs> | null
    /**
     * The data used to create many ConfigurationItems.
     */
    data: ConfigurationItemCreateManyInput | ConfigurationItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigurationItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ConfigurationItem update
   */
  export type ConfigurationItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigurationItem
     */
    select?: ConfigurationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfigurationItem
     */
    omit?: ConfigurationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigurationItemInclude<ExtArgs> | null
    /**
     * The data needed to update a ConfigurationItem.
     */
    data: XOR<ConfigurationItemUpdateInput, ConfigurationItemUncheckedUpdateInput>
    /**
     * Choose, which ConfigurationItem to update.
     */
    where: ConfigurationItemWhereUniqueInput
  }

  /**
   * ConfigurationItem updateMany
   */
  export type ConfigurationItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ConfigurationItems.
     */
    data: XOR<ConfigurationItemUpdateManyMutationInput, ConfigurationItemUncheckedUpdateManyInput>
    /**
     * Filter which ConfigurationItems to update
     */
    where?: ConfigurationItemWhereInput
    /**
     * Limit how many ConfigurationItems to update.
     */
    limit?: number
  }

  /**
   * ConfigurationItem updateManyAndReturn
   */
  export type ConfigurationItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigurationItem
     */
    select?: ConfigurationItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ConfigurationItem
     */
    omit?: ConfigurationItemOmit<ExtArgs> | null
    /**
     * The data used to update ConfigurationItems.
     */
    data: XOR<ConfigurationItemUpdateManyMutationInput, ConfigurationItemUncheckedUpdateManyInput>
    /**
     * Filter which ConfigurationItems to update
     */
    where?: ConfigurationItemWhereInput
    /**
     * Limit how many ConfigurationItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigurationItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ConfigurationItem upsert
   */
  export type ConfigurationItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigurationItem
     */
    select?: ConfigurationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfigurationItem
     */
    omit?: ConfigurationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigurationItemInclude<ExtArgs> | null
    /**
     * The filter to search for the ConfigurationItem to update in case it exists.
     */
    where: ConfigurationItemWhereUniqueInput
    /**
     * In case the ConfigurationItem found by the `where` argument doesn't exist, create a new ConfigurationItem with this data.
     */
    create: XOR<ConfigurationItemCreateInput, ConfigurationItemUncheckedCreateInput>
    /**
     * In case the ConfigurationItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConfigurationItemUpdateInput, ConfigurationItemUncheckedUpdateInput>
  }

  /**
   * ConfigurationItem delete
   */
  export type ConfigurationItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigurationItem
     */
    select?: ConfigurationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfigurationItem
     */
    omit?: ConfigurationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigurationItemInclude<ExtArgs> | null
    /**
     * Filter which ConfigurationItem to delete.
     */
    where: ConfigurationItemWhereUniqueInput
  }

  /**
   * ConfigurationItem deleteMany
   */
  export type ConfigurationItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConfigurationItems to delete
     */
    where?: ConfigurationItemWhereInput
    /**
     * Limit how many ConfigurationItems to delete.
     */
    limit?: number
  }

  /**
   * ConfigurationItem.outgoingRelationships
   */
  export type ConfigurationItem$outgoingRelationshipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationship
     */
    select?: CiRelationshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationship
     */
    omit?: CiRelationshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipInclude<ExtArgs> | null
    where?: CiRelationshipWhereInput
    orderBy?: CiRelationshipOrderByWithRelationInput | CiRelationshipOrderByWithRelationInput[]
    cursor?: CiRelationshipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CiRelationshipScalarFieldEnum | CiRelationshipScalarFieldEnum[]
  }

  /**
   * ConfigurationItem.incomingRelationships
   */
  export type ConfigurationItem$incomingRelationshipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationship
     */
    select?: CiRelationshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationship
     */
    omit?: CiRelationshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipInclude<ExtArgs> | null
    where?: CiRelationshipWhereInput
    orderBy?: CiRelationshipOrderByWithRelationInput | CiRelationshipOrderByWithRelationInput[]
    cursor?: CiRelationshipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CiRelationshipScalarFieldEnum | CiRelationshipScalarFieldEnum[]
  }

  /**
   * ConfigurationItem.incidents
   */
  export type ConfigurationItem$incidentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiIncident
     */
    select?: CiIncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiIncident
     */
    omit?: CiIncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiIncidentInclude<ExtArgs> | null
    where?: CiIncidentWhereInput
    orderBy?: CiIncidentOrderByWithRelationInput | CiIncidentOrderByWithRelationInput[]
    cursor?: CiIncidentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CiIncidentScalarFieldEnum | CiIncidentScalarFieldEnum[]
  }

  /**
   * ConfigurationItem.changes
   */
  export type ConfigurationItem$changesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiChange
     */
    select?: CiChangeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiChange
     */
    omit?: CiChangeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiChangeInclude<ExtArgs> | null
    where?: CiChangeWhereInput
    orderBy?: CiChangeOrderByWithRelationInput | CiChangeOrderByWithRelationInput[]
    cursor?: CiChangeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CiChangeScalarFieldEnum | CiChangeScalarFieldEnum[]
  }

  /**
   * ConfigurationItem.businessServices
   */
  export type ConfigurationItem$businessServicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiBusinessService
     */
    select?: CiBusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiBusinessService
     */
    omit?: CiBusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiBusinessServiceInclude<ExtArgs> | null
    where?: CiBusinessServiceWhereInput
    orderBy?: CiBusinessServiceOrderByWithRelationInput | CiBusinessServiceOrderByWithRelationInput[]
    cursor?: CiBusinessServiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CiBusinessServiceScalarFieldEnum | CiBusinessServiceScalarFieldEnum[]
  }

  /**
   * ConfigurationItem.ownership
   */
  export type ConfigurationItem$ownershipArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiOwnership
     */
    select?: CiOwnershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiOwnership
     */
    omit?: CiOwnershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiOwnershipInclude<ExtArgs> | null
    where?: CiOwnershipWhereInput
    orderBy?: CiOwnershipOrderByWithRelationInput | CiOwnershipOrderByWithRelationInput[]
    cursor?: CiOwnershipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CiOwnershipScalarFieldEnum | CiOwnershipScalarFieldEnum[]
  }

  /**
   * ConfigurationItem.inventoryMapping
   */
  export type ConfigurationItem$inventoryMappingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbInventoryMapping
     */
    select?: CmdbInventoryMappingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbInventoryMapping
     */
    omit?: CmdbInventoryMappingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CmdbInventoryMappingInclude<ExtArgs> | null
    where?: CmdbInventoryMappingWhereInput
    orderBy?: CmdbInventoryMappingOrderByWithRelationInput | CmdbInventoryMappingOrderByWithRelationInput[]
    cursor?: CmdbInventoryMappingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CmdbInventoryMappingScalarFieldEnum | CmdbInventoryMappingScalarFieldEnum[]
  }

  /**
   * ConfigurationItem.supportGroups
   */
  export type ConfigurationItem$supportGroupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroup
     */
    select?: SupportGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroup
     */
    omit?: SupportGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupInclude<ExtArgs> | null
    where?: SupportGroupWhereInput
    orderBy?: SupportGroupOrderByWithRelationInput | SupportGroupOrderByWithRelationInput[]
    cursor?: SupportGroupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupportGroupScalarFieldEnum | SupportGroupScalarFieldEnum[]
  }

  /**
   * ConfigurationItem.hardwareDetails
   */
  export type ConfigurationItem$hardwareDetailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HardwareCi
     */
    select?: HardwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HardwareCi
     */
    omit?: HardwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HardwareCiInclude<ExtArgs> | null
    where?: HardwareCiWhereInput
  }

  /**
   * ConfigurationItem.softwareDetails
   */
  export type ConfigurationItem$softwareDetailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareCi
     */
    select?: SoftwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareCi
     */
    omit?: SoftwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareCiInclude<ExtArgs> | null
    where?: SoftwareCiWhereInput
  }

  /**
   * ConfigurationItem.applicationDetails
   */
  export type ConfigurationItem$applicationDetailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationCi
     */
    select?: ApplicationCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationCi
     */
    omit?: ApplicationCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationCiInclude<ExtArgs> | null
    where?: ApplicationCiWhereInput
  }

  /**
   * ConfigurationItem.networkDetails
   */
  export type ConfigurationItem$networkDetailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NetworkCi
     */
    select?: NetworkCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NetworkCi
     */
    omit?: NetworkCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NetworkCiInclude<ExtArgs> | null
    where?: NetworkCiWhereInput
  }

  /**
   * ConfigurationItem.serviceDetails
   */
  export type ConfigurationItem$serviceDetailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceCi
     */
    select?: ServiceCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceCi
     */
    omit?: ServiceCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceCiInclude<ExtArgs> | null
    where?: ServiceCiWhereInput
  }

  /**
   * ConfigurationItem.databaseDetails
   */
  export type ConfigurationItem$databaseDetailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DatabaseCi
     */
    select?: DatabaseCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DatabaseCi
     */
    omit?: DatabaseCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DatabaseCiInclude<ExtArgs> | null
    where?: DatabaseCiWhereInput
  }

  /**
   * ConfigurationItem.virtualDetails
   */
  export type ConfigurationItem$virtualDetailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualCi
     */
    select?: VirtualCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualCi
     */
    omit?: VirtualCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualCiInclude<ExtArgs> | null
    where?: VirtualCiWhereInput
  }

  /**
   * ConfigurationItem.facilityDetails
   */
  export type ConfigurationItem$facilityDetailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FacilityCi
     */
    select?: FacilityCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FacilityCi
     */
    omit?: FacilityCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityCiInclude<ExtArgs> | null
    where?: FacilityCiWhereInput
  }

  /**
   * ConfigurationItem without action
   */
  export type ConfigurationItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigurationItem
     */
    select?: ConfigurationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfigurationItem
     */
    omit?: ConfigurationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigurationItemInclude<ExtArgs> | null
  }


  /**
   * Model CiType
   */

  export type AggregateCiType = {
    _count: CiTypeCountAggregateOutputType | null
    _min: CiTypeMinAggregateOutputType | null
    _max: CiTypeMaxAggregateOutputType | null
  }

  export type CiTypeMinAggregateOutputType = {
    id: string | null
    name: string | null
    displayName: string | null
    description: string | null
    category: string | null
    icon: string | null
    color: string | null
    parentTypeId: string | null
    isAbstract: boolean | null
    isActive: boolean | null
    defaultStatus: string | null
    discoveryEnabled: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CiTypeMaxAggregateOutputType = {
    id: string | null
    name: string | null
    displayName: string | null
    description: string | null
    category: string | null
    icon: string | null
    color: string | null
    parentTypeId: string | null
    isAbstract: boolean | null
    isActive: boolean | null
    defaultStatus: string | null
    discoveryEnabled: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CiTypeCountAggregateOutputType = {
    id: number
    name: number
    displayName: number
    description: number
    category: number
    icon: number
    color: number
    parentTypeId: number
    isAbstract: number
    isActive: number
    attributeSchema: number
    validationRules: number
    defaultStatus: number
    allowedStatuses: number
    discoveryEnabled: number
    discoveryRules: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CiTypeMinAggregateInputType = {
    id?: true
    name?: true
    displayName?: true
    description?: true
    category?: true
    icon?: true
    color?: true
    parentTypeId?: true
    isAbstract?: true
    isActive?: true
    defaultStatus?: true
    discoveryEnabled?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CiTypeMaxAggregateInputType = {
    id?: true
    name?: true
    displayName?: true
    description?: true
    category?: true
    icon?: true
    color?: true
    parentTypeId?: true
    isAbstract?: true
    isActive?: true
    defaultStatus?: true
    discoveryEnabled?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CiTypeCountAggregateInputType = {
    id?: true
    name?: true
    displayName?: true
    description?: true
    category?: true
    icon?: true
    color?: true
    parentTypeId?: true
    isAbstract?: true
    isActive?: true
    attributeSchema?: true
    validationRules?: true
    defaultStatus?: true
    allowedStatuses?: true
    discoveryEnabled?: true
    discoveryRules?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CiTypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CiType to aggregate.
     */
    where?: CiTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiTypes to fetch.
     */
    orderBy?: CiTypeOrderByWithRelationInput | CiTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CiTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CiTypes
    **/
    _count?: true | CiTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CiTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CiTypeMaxAggregateInputType
  }

  export type GetCiTypeAggregateType<T extends CiTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateCiType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCiType[P]>
      : GetScalarType<T[P], AggregateCiType[P]>
  }




  export type CiTypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiTypeWhereInput
    orderBy?: CiTypeOrderByWithAggregationInput | CiTypeOrderByWithAggregationInput[]
    by: CiTypeScalarFieldEnum[] | CiTypeScalarFieldEnum
    having?: CiTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CiTypeCountAggregateInputType | true
    _min?: CiTypeMinAggregateInputType
    _max?: CiTypeMaxAggregateInputType
  }

  export type CiTypeGroupByOutputType = {
    id: string
    name: string
    displayName: string | null
    description: string | null
    category: string
    icon: string | null
    color: string | null
    parentTypeId: string | null
    isAbstract: boolean
    isActive: boolean
    attributeSchema: JsonValue | null
    validationRules: JsonValue | null
    defaultStatus: string | null
    allowedStatuses: string[]
    discoveryEnabled: boolean
    discoveryRules: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: CiTypeCountAggregateOutputType | null
    _min: CiTypeMinAggregateOutputType | null
    _max: CiTypeMaxAggregateOutputType | null
  }

  type GetCiTypeGroupByPayload<T extends CiTypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CiTypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CiTypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CiTypeGroupByOutputType[P]>
            : GetScalarType<T[P], CiTypeGroupByOutputType[P]>
        }
      >
    >


  export type CiTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    category?: boolean
    icon?: boolean
    color?: boolean
    parentTypeId?: boolean
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: boolean
    validationRules?: boolean
    defaultStatus?: boolean
    allowedStatuses?: boolean
    discoveryEnabled?: boolean
    discoveryRules?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parentType?: boolean | CiType$parentTypeArgs<ExtArgs>
    childTypes?: boolean | CiType$childTypesArgs<ExtArgs>
    configurationItems?: boolean | CiType$configurationItemsArgs<ExtArgs>
    allowedRelationships?: boolean | CiType$allowedRelationshipsArgs<ExtArgs>
    targetRelationships?: boolean | CiType$targetRelationshipsArgs<ExtArgs>
    _count?: boolean | CiTypeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciType"]>

  export type CiTypeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    category?: boolean
    icon?: boolean
    color?: boolean
    parentTypeId?: boolean
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: boolean
    validationRules?: boolean
    defaultStatus?: boolean
    allowedStatuses?: boolean
    discoveryEnabled?: boolean
    discoveryRules?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parentType?: boolean | CiType$parentTypeArgs<ExtArgs>
  }, ExtArgs["result"]["ciType"]>

  export type CiTypeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    category?: boolean
    icon?: boolean
    color?: boolean
    parentTypeId?: boolean
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: boolean
    validationRules?: boolean
    defaultStatus?: boolean
    allowedStatuses?: boolean
    discoveryEnabled?: boolean
    discoveryRules?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parentType?: boolean | CiType$parentTypeArgs<ExtArgs>
  }, ExtArgs["result"]["ciType"]>

  export type CiTypeSelectScalar = {
    id?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    category?: boolean
    icon?: boolean
    color?: boolean
    parentTypeId?: boolean
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: boolean
    validationRules?: boolean
    defaultStatus?: boolean
    allowedStatuses?: boolean
    discoveryEnabled?: boolean
    discoveryRules?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CiTypeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "displayName" | "description" | "category" | "icon" | "color" | "parentTypeId" | "isAbstract" | "isActive" | "attributeSchema" | "validationRules" | "defaultStatus" | "allowedStatuses" | "discoveryEnabled" | "discoveryRules" | "createdAt" | "updatedAt", ExtArgs["result"]["ciType"]>
  export type CiTypeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parentType?: boolean | CiType$parentTypeArgs<ExtArgs>
    childTypes?: boolean | CiType$childTypesArgs<ExtArgs>
    configurationItems?: boolean | CiType$configurationItemsArgs<ExtArgs>
    allowedRelationships?: boolean | CiType$allowedRelationshipsArgs<ExtArgs>
    targetRelationships?: boolean | CiType$targetRelationshipsArgs<ExtArgs>
    _count?: boolean | CiTypeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CiTypeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parentType?: boolean | CiType$parentTypeArgs<ExtArgs>
  }
  export type CiTypeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parentType?: boolean | CiType$parentTypeArgs<ExtArgs>
  }

  export type $CiTypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CiType"
    objects: {
      parentType: Prisma.$CiTypePayload<ExtArgs> | null
      childTypes: Prisma.$CiTypePayload<ExtArgs>[]
      configurationItems: Prisma.$ConfigurationItemPayload<ExtArgs>[]
      allowedRelationships: Prisma.$CiRelationshipTypePayload<ExtArgs>[]
      targetRelationships: Prisma.$CiRelationshipTypePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      displayName: string | null
      description: string | null
      category: string
      icon: string | null
      color: string | null
      parentTypeId: string | null
      isAbstract: boolean
      isActive: boolean
      attributeSchema: Prisma.JsonValue | null
      validationRules: Prisma.JsonValue | null
      defaultStatus: string | null
      allowedStatuses: string[]
      discoveryEnabled: boolean
      discoveryRules: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["ciType"]>
    composites: {}
  }

  type CiTypeGetPayload<S extends boolean | null | undefined | CiTypeDefaultArgs> = $Result.GetResult<Prisma.$CiTypePayload, S>

  type CiTypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CiTypeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CiTypeCountAggregateInputType | true
    }

  export interface CiTypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CiType'], meta: { name: 'CiType' } }
    /**
     * Find zero or one CiType that matches the filter.
     * @param {CiTypeFindUniqueArgs} args - Arguments to find a CiType
     * @example
     * // Get one CiType
     * const ciType = await prisma.ciType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CiTypeFindUniqueArgs>(args: SelectSubset<T, CiTypeFindUniqueArgs<ExtArgs>>): Prisma__CiTypeClient<$Result.GetResult<Prisma.$CiTypePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CiType that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CiTypeFindUniqueOrThrowArgs} args - Arguments to find a CiType
     * @example
     * // Get one CiType
     * const ciType = await prisma.ciType.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CiTypeFindUniqueOrThrowArgs>(args: SelectSubset<T, CiTypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CiTypeClient<$Result.GetResult<Prisma.$CiTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CiType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiTypeFindFirstArgs} args - Arguments to find a CiType
     * @example
     * // Get one CiType
     * const ciType = await prisma.ciType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CiTypeFindFirstArgs>(args?: SelectSubset<T, CiTypeFindFirstArgs<ExtArgs>>): Prisma__CiTypeClient<$Result.GetResult<Prisma.$CiTypePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CiType that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiTypeFindFirstOrThrowArgs} args - Arguments to find a CiType
     * @example
     * // Get one CiType
     * const ciType = await prisma.ciType.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CiTypeFindFirstOrThrowArgs>(args?: SelectSubset<T, CiTypeFindFirstOrThrowArgs<ExtArgs>>): Prisma__CiTypeClient<$Result.GetResult<Prisma.$CiTypePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CiTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiTypeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CiTypes
     * const ciTypes = await prisma.ciType.findMany()
     * 
     * // Get first 10 CiTypes
     * const ciTypes = await prisma.ciType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ciTypeWithIdOnly = await prisma.ciType.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CiTypeFindManyArgs>(args?: SelectSubset<T, CiTypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiTypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CiType.
     * @param {CiTypeCreateArgs} args - Arguments to create a CiType.
     * @example
     * // Create one CiType
     * const CiType = await prisma.ciType.create({
     *   data: {
     *     // ... data to create a CiType
     *   }
     * })
     * 
     */
    create<T extends CiTypeCreateArgs>(args: SelectSubset<T, CiTypeCreateArgs<ExtArgs>>): Prisma__CiTypeClient<$Result.GetResult<Prisma.$CiTypePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CiTypes.
     * @param {CiTypeCreateManyArgs} args - Arguments to create many CiTypes.
     * @example
     * // Create many CiTypes
     * const ciType = await prisma.ciType.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CiTypeCreateManyArgs>(args?: SelectSubset<T, CiTypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CiTypes and returns the data saved in the database.
     * @param {CiTypeCreateManyAndReturnArgs} args - Arguments to create many CiTypes.
     * @example
     * // Create many CiTypes
     * const ciType = await prisma.ciType.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CiTypes and only return the `id`
     * const ciTypeWithIdOnly = await prisma.ciType.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CiTypeCreateManyAndReturnArgs>(args?: SelectSubset<T, CiTypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiTypePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CiType.
     * @param {CiTypeDeleteArgs} args - Arguments to delete one CiType.
     * @example
     * // Delete one CiType
     * const CiType = await prisma.ciType.delete({
     *   where: {
     *     // ... filter to delete one CiType
     *   }
     * })
     * 
     */
    delete<T extends CiTypeDeleteArgs>(args: SelectSubset<T, CiTypeDeleteArgs<ExtArgs>>): Prisma__CiTypeClient<$Result.GetResult<Prisma.$CiTypePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CiType.
     * @param {CiTypeUpdateArgs} args - Arguments to update one CiType.
     * @example
     * // Update one CiType
     * const ciType = await prisma.ciType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CiTypeUpdateArgs>(args: SelectSubset<T, CiTypeUpdateArgs<ExtArgs>>): Prisma__CiTypeClient<$Result.GetResult<Prisma.$CiTypePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CiTypes.
     * @param {CiTypeDeleteManyArgs} args - Arguments to filter CiTypes to delete.
     * @example
     * // Delete a few CiTypes
     * const { count } = await prisma.ciType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CiTypeDeleteManyArgs>(args?: SelectSubset<T, CiTypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CiTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CiTypes
     * const ciType = await prisma.ciType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CiTypeUpdateManyArgs>(args: SelectSubset<T, CiTypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CiTypes and returns the data updated in the database.
     * @param {CiTypeUpdateManyAndReturnArgs} args - Arguments to update many CiTypes.
     * @example
     * // Update many CiTypes
     * const ciType = await prisma.ciType.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CiTypes and only return the `id`
     * const ciTypeWithIdOnly = await prisma.ciType.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CiTypeUpdateManyAndReturnArgs>(args: SelectSubset<T, CiTypeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiTypePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CiType.
     * @param {CiTypeUpsertArgs} args - Arguments to update or create a CiType.
     * @example
     * // Update or create a CiType
     * const ciType = await prisma.ciType.upsert({
     *   create: {
     *     // ... data to create a CiType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CiType we want to update
     *   }
     * })
     */
    upsert<T extends CiTypeUpsertArgs>(args: SelectSubset<T, CiTypeUpsertArgs<ExtArgs>>): Prisma__CiTypeClient<$Result.GetResult<Prisma.$CiTypePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CiTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiTypeCountArgs} args - Arguments to filter CiTypes to count.
     * @example
     * // Count the number of CiTypes
     * const count = await prisma.ciType.count({
     *   where: {
     *     // ... the filter for the CiTypes we want to count
     *   }
     * })
    **/
    count<T extends CiTypeCountArgs>(
      args?: Subset<T, CiTypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CiTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CiType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CiTypeAggregateArgs>(args: Subset<T, CiTypeAggregateArgs>): Prisma.PrismaPromise<GetCiTypeAggregateType<T>>

    /**
     * Group by CiType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CiTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CiTypeGroupByArgs['orderBy'] }
        : { orderBy?: CiTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CiTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCiTypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CiType model
   */
  readonly fields: CiTypeFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for CiType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CiTypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parentType<T extends CiType$parentTypeArgs<ExtArgs> = {}>(args?: Subset<T, CiType$parentTypeArgs<ExtArgs>>): Prisma__CiTypeClient<$Result.GetResult<Prisma.$CiTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    childTypes<T extends CiType$childTypesArgs<ExtArgs> = {}>(args?: Subset<T, CiType$childTypesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiTypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    configurationItems<T extends CiType$configurationItemsArgs<ExtArgs> = {}>(args?: Subset<T, CiType$configurationItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    allowedRelationships<T extends CiType$allowedRelationshipsArgs<ExtArgs> = {}>(args?: Subset<T, CiType$allowedRelationshipsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiRelationshipTypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    targetRelationships<T extends CiType$targetRelationshipsArgs<ExtArgs> = {}>(args?: Subset<T, CiType$targetRelationshipsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiRelationshipTypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CiType model
   */
  interface CiTypeFieldRefs {
    readonly id: FieldRef<"CiType", 'String'>
    readonly name: FieldRef<"CiType", 'String'>
    readonly displayName: FieldRef<"CiType", 'String'>
    readonly description: FieldRef<"CiType", 'String'>
    readonly category: FieldRef<"CiType", 'String'>
    readonly icon: FieldRef<"CiType", 'String'>
    readonly color: FieldRef<"CiType", 'String'>
    readonly parentTypeId: FieldRef<"CiType", 'String'>
    readonly isAbstract: FieldRef<"CiType", 'Boolean'>
    readonly isActive: FieldRef<"CiType", 'Boolean'>
    readonly attributeSchema: FieldRef<"CiType", 'Json'>
    readonly validationRules: FieldRef<"CiType", 'Json'>
    readonly defaultStatus: FieldRef<"CiType", 'String'>
    readonly allowedStatuses: FieldRef<"CiType", 'String[]'>
    readonly discoveryEnabled: FieldRef<"CiType", 'Boolean'>
    readonly discoveryRules: FieldRef<"CiType", 'Json'>
    readonly createdAt: FieldRef<"CiType", 'DateTime'>
    readonly updatedAt: FieldRef<"CiType", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CiType findUnique
   */
  export type CiTypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiType
     */
    select?: CiTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiType
     */
    omit?: CiTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiTypeInclude<ExtArgs> | null
    /**
     * Filter, which CiType to fetch.
     */
    where: CiTypeWhereUniqueInput
  }

  /**
   * CiType findUniqueOrThrow
   */
  export type CiTypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiType
     */
    select?: CiTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiType
     */
    omit?: CiTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiTypeInclude<ExtArgs> | null
    /**
     * Filter, which CiType to fetch.
     */
    where: CiTypeWhereUniqueInput
  }

  /**
   * CiType findFirst
   */
  export type CiTypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiType
     */
    select?: CiTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiType
     */
    omit?: CiTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiTypeInclude<ExtArgs> | null
    /**
     * Filter, which CiType to fetch.
     */
    where?: CiTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiTypes to fetch.
     */
    orderBy?: CiTypeOrderByWithRelationInput | CiTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CiTypes.
     */
    cursor?: CiTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CiTypes.
     */
    distinct?: CiTypeScalarFieldEnum | CiTypeScalarFieldEnum[]
  }

  /**
   * CiType findFirstOrThrow
   */
  export type CiTypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiType
     */
    select?: CiTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiType
     */
    omit?: CiTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiTypeInclude<ExtArgs> | null
    /**
     * Filter, which CiType to fetch.
     */
    where?: CiTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiTypes to fetch.
     */
    orderBy?: CiTypeOrderByWithRelationInput | CiTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CiTypes.
     */
    cursor?: CiTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CiTypes.
     */
    distinct?: CiTypeScalarFieldEnum | CiTypeScalarFieldEnum[]
  }

  /**
   * CiType findMany
   */
  export type CiTypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiType
     */
    select?: CiTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiType
     */
    omit?: CiTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiTypeInclude<ExtArgs> | null
    /**
     * Filter, which CiTypes to fetch.
     */
    where?: CiTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiTypes to fetch.
     */
    orderBy?: CiTypeOrderByWithRelationInput | CiTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CiTypes.
     */
    cursor?: CiTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiTypes.
     */
    skip?: number
    distinct?: CiTypeScalarFieldEnum | CiTypeScalarFieldEnum[]
  }

  /**
   * CiType create
   */
  export type CiTypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiType
     */
    select?: CiTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiType
     */
    omit?: CiTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiTypeInclude<ExtArgs> | null
    /**
     * The data needed to create a CiType.
     */
    data: XOR<CiTypeCreateInput, CiTypeUncheckedCreateInput>
  }

  /**
   * CiType createMany
   */
  export type CiTypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CiTypes.
     */
    data: CiTypeCreateManyInput | CiTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CiType createManyAndReturn
   */
  export type CiTypeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiType
     */
    select?: CiTypeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CiType
     */
    omit?: CiTypeOmit<ExtArgs> | null
    /**
     * The data used to create many CiTypes.
     */
    data: CiTypeCreateManyInput | CiTypeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiTypeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CiType update
   */
  export type CiTypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiType
     */
    select?: CiTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiType
     */
    omit?: CiTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiTypeInclude<ExtArgs> | null
    /**
     * The data needed to update a CiType.
     */
    data: XOR<CiTypeUpdateInput, CiTypeUncheckedUpdateInput>
    /**
     * Choose, which CiType to update.
     */
    where: CiTypeWhereUniqueInput
  }

  /**
   * CiType updateMany
   */
  export type CiTypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CiTypes.
     */
    data: XOR<CiTypeUpdateManyMutationInput, CiTypeUncheckedUpdateManyInput>
    /**
     * Filter which CiTypes to update
     */
    where?: CiTypeWhereInput
    /**
     * Limit how many CiTypes to update.
     */
    limit?: number
  }

  /**
   * CiType updateManyAndReturn
   */
  export type CiTypeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiType
     */
    select?: CiTypeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CiType
     */
    omit?: CiTypeOmit<ExtArgs> | null
    /**
     * The data used to update CiTypes.
     */
    data: XOR<CiTypeUpdateManyMutationInput, CiTypeUncheckedUpdateManyInput>
    /**
     * Filter which CiTypes to update
     */
    where?: CiTypeWhereInput
    /**
     * Limit how many CiTypes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiTypeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CiType upsert
   */
  export type CiTypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiType
     */
    select?: CiTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiType
     */
    omit?: CiTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiTypeInclude<ExtArgs> | null
    /**
     * The filter to search for the CiType to update in case it exists.
     */
    where: CiTypeWhereUniqueInput
    /**
     * In case the CiType found by the `where` argument doesn't exist, create a new CiType with this data.
     */
    create: XOR<CiTypeCreateInput, CiTypeUncheckedCreateInput>
    /**
     * In case the CiType was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CiTypeUpdateInput, CiTypeUncheckedUpdateInput>
  }

  /**
   * CiType delete
   */
  export type CiTypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiType
     */
    select?: CiTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiType
     */
    omit?: CiTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiTypeInclude<ExtArgs> | null
    /**
     * Filter which CiType to delete.
     */
    where: CiTypeWhereUniqueInput
  }

  /**
   * CiType deleteMany
   */
  export type CiTypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CiTypes to delete
     */
    where?: CiTypeWhereInput
    /**
     * Limit how many CiTypes to delete.
     */
    limit?: number
  }

  /**
   * CiType.parentType
   */
  export type CiType$parentTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiType
     */
    select?: CiTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiType
     */
    omit?: CiTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiTypeInclude<ExtArgs> | null
    where?: CiTypeWhereInput
  }

  /**
   * CiType.childTypes
   */
  export type CiType$childTypesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiType
     */
    select?: CiTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiType
     */
    omit?: CiTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiTypeInclude<ExtArgs> | null
    where?: CiTypeWhereInput
    orderBy?: CiTypeOrderByWithRelationInput | CiTypeOrderByWithRelationInput[]
    cursor?: CiTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CiTypeScalarFieldEnum | CiTypeScalarFieldEnum[]
  }

  /**
   * CiType.configurationItems
   */
  export type CiType$configurationItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigurationItem
     */
    select?: ConfigurationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfigurationItem
     */
    omit?: ConfigurationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigurationItemInclude<ExtArgs> | null
    where?: ConfigurationItemWhereInput
    orderBy?: ConfigurationItemOrderByWithRelationInput | ConfigurationItemOrderByWithRelationInput[]
    cursor?: ConfigurationItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConfigurationItemScalarFieldEnum | ConfigurationItemScalarFieldEnum[]
  }

  /**
   * CiType.allowedRelationships
   */
  export type CiType$allowedRelationshipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationshipType
     */
    select?: CiRelationshipTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationshipType
     */
    omit?: CiRelationshipTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipTypeInclude<ExtArgs> | null
    where?: CiRelationshipTypeWhereInput
    orderBy?: CiRelationshipTypeOrderByWithRelationInput | CiRelationshipTypeOrderByWithRelationInput[]
    cursor?: CiRelationshipTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CiRelationshipTypeScalarFieldEnum | CiRelationshipTypeScalarFieldEnum[]
  }

  /**
   * CiType.targetRelationships
   */
  export type CiType$targetRelationshipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationshipType
     */
    select?: CiRelationshipTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationshipType
     */
    omit?: CiRelationshipTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipTypeInclude<ExtArgs> | null
    where?: CiRelationshipTypeWhereInput
    orderBy?: CiRelationshipTypeOrderByWithRelationInput | CiRelationshipTypeOrderByWithRelationInput[]
    cursor?: CiRelationshipTypeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CiRelationshipTypeScalarFieldEnum | CiRelationshipTypeScalarFieldEnum[]
  }

  /**
   * CiType without action
   */
  export type CiTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiType
     */
    select?: CiTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiType
     */
    omit?: CiTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiTypeInclude<ExtArgs> | null
  }


  /**
   * Model CiRelationshipType
   */

  export type AggregateCiRelationshipType = {
    _count: CiRelationshipTypeCountAggregateOutputType | null
    _min: CiRelationshipTypeMinAggregateOutputType | null
    _max: CiRelationshipTypeMaxAggregateOutputType | null
  }

  export type CiRelationshipTypeMinAggregateOutputType = {
    id: string | null
    name: string | null
    displayName: string | null
    description: string | null
    isDirectional: boolean | null
    category: string | null
    sourceCiTypeId: string | null
    targetCiTypeId: string | null
    allowMultiple: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CiRelationshipTypeMaxAggregateOutputType = {
    id: string | null
    name: string | null
    displayName: string | null
    description: string | null
    isDirectional: boolean | null
    category: string | null
    sourceCiTypeId: string | null
    targetCiTypeId: string | null
    allowMultiple: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CiRelationshipTypeCountAggregateOutputType = {
    id: number
    name: number
    displayName: number
    description: number
    isDirectional: number
    category: number
    sourceCiTypeId: number
    targetCiTypeId: number
    allowMultiple: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CiRelationshipTypeMinAggregateInputType = {
    id?: true
    name?: true
    displayName?: true
    description?: true
    isDirectional?: true
    category?: true
    sourceCiTypeId?: true
    targetCiTypeId?: true
    allowMultiple?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CiRelationshipTypeMaxAggregateInputType = {
    id?: true
    name?: true
    displayName?: true
    description?: true
    isDirectional?: true
    category?: true
    sourceCiTypeId?: true
    targetCiTypeId?: true
    allowMultiple?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CiRelationshipTypeCountAggregateInputType = {
    id?: true
    name?: true
    displayName?: true
    description?: true
    isDirectional?: true
    category?: true
    sourceCiTypeId?: true
    targetCiTypeId?: true
    allowMultiple?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CiRelationshipTypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CiRelationshipType to aggregate.
     */
    where?: CiRelationshipTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiRelationshipTypes to fetch.
     */
    orderBy?: CiRelationshipTypeOrderByWithRelationInput | CiRelationshipTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CiRelationshipTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiRelationshipTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiRelationshipTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CiRelationshipTypes
    **/
    _count?: true | CiRelationshipTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CiRelationshipTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CiRelationshipTypeMaxAggregateInputType
  }

  export type GetCiRelationshipTypeAggregateType<T extends CiRelationshipTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateCiRelationshipType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCiRelationshipType[P]>
      : GetScalarType<T[P], AggregateCiRelationshipType[P]>
  }




  export type CiRelationshipTypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiRelationshipTypeWhereInput
    orderBy?: CiRelationshipTypeOrderByWithAggregationInput | CiRelationshipTypeOrderByWithAggregationInput[]
    by: CiRelationshipTypeScalarFieldEnum[] | CiRelationshipTypeScalarFieldEnum
    having?: CiRelationshipTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CiRelationshipTypeCountAggregateInputType | true
    _min?: CiRelationshipTypeMinAggregateInputType
    _max?: CiRelationshipTypeMaxAggregateInputType
  }

  export type CiRelationshipTypeGroupByOutputType = {
    id: string
    name: string
    displayName: string | null
    description: string | null
    isDirectional: boolean
    category: string | null
    sourceCiTypeId: string | null
    targetCiTypeId: string | null
    allowMultiple: boolean
    createdAt: Date
    updatedAt: Date
    _count: CiRelationshipTypeCountAggregateOutputType | null
    _min: CiRelationshipTypeMinAggregateOutputType | null
    _max: CiRelationshipTypeMaxAggregateOutputType | null
  }

  type GetCiRelationshipTypeGroupByPayload<T extends CiRelationshipTypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CiRelationshipTypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CiRelationshipTypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CiRelationshipTypeGroupByOutputType[P]>
            : GetScalarType<T[P], CiRelationshipTypeGroupByOutputType[P]>
        }
      >
    >


  export type CiRelationshipTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    isDirectional?: boolean
    category?: boolean
    sourceCiTypeId?: boolean
    targetCiTypeId?: boolean
    allowMultiple?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sourceCiType?: boolean | CiRelationshipType$sourceCiTypeArgs<ExtArgs>
    targetCiType?: boolean | CiRelationshipType$targetCiTypeArgs<ExtArgs>
    relationships?: boolean | CiRelationshipType$relationshipsArgs<ExtArgs>
    _count?: boolean | CiRelationshipTypeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciRelationshipType"]>

  export type CiRelationshipTypeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    isDirectional?: boolean
    category?: boolean
    sourceCiTypeId?: boolean
    targetCiTypeId?: boolean
    allowMultiple?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sourceCiType?: boolean | CiRelationshipType$sourceCiTypeArgs<ExtArgs>
    targetCiType?: boolean | CiRelationshipType$targetCiTypeArgs<ExtArgs>
  }, ExtArgs["result"]["ciRelationshipType"]>

  export type CiRelationshipTypeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    isDirectional?: boolean
    category?: boolean
    sourceCiTypeId?: boolean
    targetCiTypeId?: boolean
    allowMultiple?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sourceCiType?: boolean | CiRelationshipType$sourceCiTypeArgs<ExtArgs>
    targetCiType?: boolean | CiRelationshipType$targetCiTypeArgs<ExtArgs>
  }, ExtArgs["result"]["ciRelationshipType"]>

  export type CiRelationshipTypeSelectScalar = {
    id?: boolean
    name?: boolean
    displayName?: boolean
    description?: boolean
    isDirectional?: boolean
    category?: boolean
    sourceCiTypeId?: boolean
    targetCiTypeId?: boolean
    allowMultiple?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CiRelationshipTypeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "displayName" | "description" | "isDirectional" | "category" | "sourceCiTypeId" | "targetCiTypeId" | "allowMultiple" | "createdAt" | "updatedAt", ExtArgs["result"]["ciRelationshipType"]>
  export type CiRelationshipTypeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sourceCiType?: boolean | CiRelationshipType$sourceCiTypeArgs<ExtArgs>
    targetCiType?: boolean | CiRelationshipType$targetCiTypeArgs<ExtArgs>
    relationships?: boolean | CiRelationshipType$relationshipsArgs<ExtArgs>
    _count?: boolean | CiRelationshipTypeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CiRelationshipTypeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sourceCiType?: boolean | CiRelationshipType$sourceCiTypeArgs<ExtArgs>
    targetCiType?: boolean | CiRelationshipType$targetCiTypeArgs<ExtArgs>
  }
  export type CiRelationshipTypeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sourceCiType?: boolean | CiRelationshipType$sourceCiTypeArgs<ExtArgs>
    targetCiType?: boolean | CiRelationshipType$targetCiTypeArgs<ExtArgs>
  }

  export type $CiRelationshipTypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CiRelationshipType"
    objects: {
      sourceCiType: Prisma.$CiTypePayload<ExtArgs> | null
      targetCiType: Prisma.$CiTypePayload<ExtArgs> | null
      relationships: Prisma.$CiRelationshipPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      displayName: string | null
      description: string | null
      isDirectional: boolean
      category: string | null
      sourceCiTypeId: string | null
      targetCiTypeId: string | null
      allowMultiple: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["ciRelationshipType"]>
    composites: {}
  }

  type CiRelationshipTypeGetPayload<S extends boolean | null | undefined | CiRelationshipTypeDefaultArgs> = $Result.GetResult<Prisma.$CiRelationshipTypePayload, S>

  type CiRelationshipTypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CiRelationshipTypeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CiRelationshipTypeCountAggregateInputType | true
    }

  export interface CiRelationshipTypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CiRelationshipType'], meta: { name: 'CiRelationshipType' } }
    /**
     * Find zero or one CiRelationshipType that matches the filter.
     * @param {CiRelationshipTypeFindUniqueArgs} args - Arguments to find a CiRelationshipType
     * @example
     * // Get one CiRelationshipType
     * const ciRelationshipType = await prisma.ciRelationshipType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CiRelationshipTypeFindUniqueArgs>(args: SelectSubset<T, CiRelationshipTypeFindUniqueArgs<ExtArgs>>): Prisma__CiRelationshipTypeClient<$Result.GetResult<Prisma.$CiRelationshipTypePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CiRelationshipType that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CiRelationshipTypeFindUniqueOrThrowArgs} args - Arguments to find a CiRelationshipType
     * @example
     * // Get one CiRelationshipType
     * const ciRelationshipType = await prisma.ciRelationshipType.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CiRelationshipTypeFindUniqueOrThrowArgs>(args: SelectSubset<T, CiRelationshipTypeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CiRelationshipTypeClient<$Result.GetResult<Prisma.$CiRelationshipTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CiRelationshipType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiRelationshipTypeFindFirstArgs} args - Arguments to find a CiRelationshipType
     * @example
     * // Get one CiRelationshipType
     * const ciRelationshipType = await prisma.ciRelationshipType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CiRelationshipTypeFindFirstArgs>(args?: SelectSubset<T, CiRelationshipTypeFindFirstArgs<ExtArgs>>): Prisma__CiRelationshipTypeClient<$Result.GetResult<Prisma.$CiRelationshipTypePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CiRelationshipType that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiRelationshipTypeFindFirstOrThrowArgs} args - Arguments to find a CiRelationshipType
     * @example
     * // Get one CiRelationshipType
     * const ciRelationshipType = await prisma.ciRelationshipType.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CiRelationshipTypeFindFirstOrThrowArgs>(args?: SelectSubset<T, CiRelationshipTypeFindFirstOrThrowArgs<ExtArgs>>): Prisma__CiRelationshipTypeClient<$Result.GetResult<Prisma.$CiRelationshipTypePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CiRelationshipTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiRelationshipTypeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CiRelationshipTypes
     * const ciRelationshipTypes = await prisma.ciRelationshipType.findMany()
     * 
     * // Get first 10 CiRelationshipTypes
     * const ciRelationshipTypes = await prisma.ciRelationshipType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ciRelationshipTypeWithIdOnly = await prisma.ciRelationshipType.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CiRelationshipTypeFindManyArgs>(args?: SelectSubset<T, CiRelationshipTypeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiRelationshipTypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CiRelationshipType.
     * @param {CiRelationshipTypeCreateArgs} args - Arguments to create a CiRelationshipType.
     * @example
     * // Create one CiRelationshipType
     * const CiRelationshipType = await prisma.ciRelationshipType.create({
     *   data: {
     *     // ... data to create a CiRelationshipType
     *   }
     * })
     * 
     */
    create<T extends CiRelationshipTypeCreateArgs>(args: SelectSubset<T, CiRelationshipTypeCreateArgs<ExtArgs>>): Prisma__CiRelationshipTypeClient<$Result.GetResult<Prisma.$CiRelationshipTypePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CiRelationshipTypes.
     * @param {CiRelationshipTypeCreateManyArgs} args - Arguments to create many CiRelationshipTypes.
     * @example
     * // Create many CiRelationshipTypes
     * const ciRelationshipType = await prisma.ciRelationshipType.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CiRelationshipTypeCreateManyArgs>(args?: SelectSubset<T, CiRelationshipTypeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CiRelationshipTypes and returns the data saved in the database.
     * @param {CiRelationshipTypeCreateManyAndReturnArgs} args - Arguments to create many CiRelationshipTypes.
     * @example
     * // Create many CiRelationshipTypes
     * const ciRelationshipType = await prisma.ciRelationshipType.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CiRelationshipTypes and only return the `id`
     * const ciRelationshipTypeWithIdOnly = await prisma.ciRelationshipType.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CiRelationshipTypeCreateManyAndReturnArgs>(args?: SelectSubset<T, CiRelationshipTypeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiRelationshipTypePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CiRelationshipType.
     * @param {CiRelationshipTypeDeleteArgs} args - Arguments to delete one CiRelationshipType.
     * @example
     * // Delete one CiRelationshipType
     * const CiRelationshipType = await prisma.ciRelationshipType.delete({
     *   where: {
     *     // ... filter to delete one CiRelationshipType
     *   }
     * })
     * 
     */
    delete<T extends CiRelationshipTypeDeleteArgs>(args: SelectSubset<T, CiRelationshipTypeDeleteArgs<ExtArgs>>): Prisma__CiRelationshipTypeClient<$Result.GetResult<Prisma.$CiRelationshipTypePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CiRelationshipType.
     * @param {CiRelationshipTypeUpdateArgs} args - Arguments to update one CiRelationshipType.
     * @example
     * // Update one CiRelationshipType
     * const ciRelationshipType = await prisma.ciRelationshipType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CiRelationshipTypeUpdateArgs>(args: SelectSubset<T, CiRelationshipTypeUpdateArgs<ExtArgs>>): Prisma__CiRelationshipTypeClient<$Result.GetResult<Prisma.$CiRelationshipTypePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CiRelationshipTypes.
     * @param {CiRelationshipTypeDeleteManyArgs} args - Arguments to filter CiRelationshipTypes to delete.
     * @example
     * // Delete a few CiRelationshipTypes
     * const { count } = await prisma.ciRelationshipType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CiRelationshipTypeDeleteManyArgs>(args?: SelectSubset<T, CiRelationshipTypeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CiRelationshipTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiRelationshipTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CiRelationshipTypes
     * const ciRelationshipType = await prisma.ciRelationshipType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CiRelationshipTypeUpdateManyArgs>(args: SelectSubset<T, CiRelationshipTypeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CiRelationshipTypes and returns the data updated in the database.
     * @param {CiRelationshipTypeUpdateManyAndReturnArgs} args - Arguments to update many CiRelationshipTypes.
     * @example
     * // Update many CiRelationshipTypes
     * const ciRelationshipType = await prisma.ciRelationshipType.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CiRelationshipTypes and only return the `id`
     * const ciRelationshipTypeWithIdOnly = await prisma.ciRelationshipType.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CiRelationshipTypeUpdateManyAndReturnArgs>(args: SelectSubset<T, CiRelationshipTypeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiRelationshipTypePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CiRelationshipType.
     * @param {CiRelationshipTypeUpsertArgs} args - Arguments to update or create a CiRelationshipType.
     * @example
     * // Update or create a CiRelationshipType
     * const ciRelationshipType = await prisma.ciRelationshipType.upsert({
     *   create: {
     *     // ... data to create a CiRelationshipType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CiRelationshipType we want to update
     *   }
     * })
     */
    upsert<T extends CiRelationshipTypeUpsertArgs>(args: SelectSubset<T, CiRelationshipTypeUpsertArgs<ExtArgs>>): Prisma__CiRelationshipTypeClient<$Result.GetResult<Prisma.$CiRelationshipTypePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CiRelationshipTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiRelationshipTypeCountArgs} args - Arguments to filter CiRelationshipTypes to count.
     * @example
     * // Count the number of CiRelationshipTypes
     * const count = await prisma.ciRelationshipType.count({
     *   where: {
     *     // ... the filter for the CiRelationshipTypes we want to count
     *   }
     * })
    **/
    count<T extends CiRelationshipTypeCountArgs>(
      args?: Subset<T, CiRelationshipTypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CiRelationshipTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CiRelationshipType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiRelationshipTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CiRelationshipTypeAggregateArgs>(args: Subset<T, CiRelationshipTypeAggregateArgs>): Prisma.PrismaPromise<GetCiRelationshipTypeAggregateType<T>>

    /**
     * Group by CiRelationshipType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiRelationshipTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CiRelationshipTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CiRelationshipTypeGroupByArgs['orderBy'] }
        : { orderBy?: CiRelationshipTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CiRelationshipTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCiRelationshipTypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CiRelationshipType model
   */
  readonly fields: CiRelationshipTypeFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for CiRelationshipType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CiRelationshipTypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sourceCiType<T extends CiRelationshipType$sourceCiTypeArgs<ExtArgs> = {}>(args?: Subset<T, CiRelationshipType$sourceCiTypeArgs<ExtArgs>>): Prisma__CiTypeClient<$Result.GetResult<Prisma.$CiTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    targetCiType<T extends CiRelationshipType$targetCiTypeArgs<ExtArgs> = {}>(args?: Subset<T, CiRelationshipType$targetCiTypeArgs<ExtArgs>>): Prisma__CiTypeClient<$Result.GetResult<Prisma.$CiTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    relationships<T extends CiRelationshipType$relationshipsArgs<ExtArgs> = {}>(args?: Subset<T, CiRelationshipType$relationshipsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiRelationshipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CiRelationshipType model
   */
  interface CiRelationshipTypeFieldRefs {
    readonly id: FieldRef<"CiRelationshipType", 'String'>
    readonly name: FieldRef<"CiRelationshipType", 'String'>
    readonly displayName: FieldRef<"CiRelationshipType", 'String'>
    readonly description: FieldRef<"CiRelationshipType", 'String'>
    readonly isDirectional: FieldRef<"CiRelationshipType", 'Boolean'>
    readonly category: FieldRef<"CiRelationshipType", 'String'>
    readonly sourceCiTypeId: FieldRef<"CiRelationshipType", 'String'>
    readonly targetCiTypeId: FieldRef<"CiRelationshipType", 'String'>
    readonly allowMultiple: FieldRef<"CiRelationshipType", 'Boolean'>
    readonly createdAt: FieldRef<"CiRelationshipType", 'DateTime'>
    readonly updatedAt: FieldRef<"CiRelationshipType", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CiRelationshipType findUnique
   */
  export type CiRelationshipTypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationshipType
     */
    select?: CiRelationshipTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationshipType
     */
    omit?: CiRelationshipTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipTypeInclude<ExtArgs> | null
    /**
     * Filter, which CiRelationshipType to fetch.
     */
    where: CiRelationshipTypeWhereUniqueInput
  }

  /**
   * CiRelationshipType findUniqueOrThrow
   */
  export type CiRelationshipTypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationshipType
     */
    select?: CiRelationshipTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationshipType
     */
    omit?: CiRelationshipTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipTypeInclude<ExtArgs> | null
    /**
     * Filter, which CiRelationshipType to fetch.
     */
    where: CiRelationshipTypeWhereUniqueInput
  }

  /**
   * CiRelationshipType findFirst
   */
  export type CiRelationshipTypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationshipType
     */
    select?: CiRelationshipTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationshipType
     */
    omit?: CiRelationshipTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipTypeInclude<ExtArgs> | null
    /**
     * Filter, which CiRelationshipType to fetch.
     */
    where?: CiRelationshipTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiRelationshipTypes to fetch.
     */
    orderBy?: CiRelationshipTypeOrderByWithRelationInput | CiRelationshipTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CiRelationshipTypes.
     */
    cursor?: CiRelationshipTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiRelationshipTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiRelationshipTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CiRelationshipTypes.
     */
    distinct?: CiRelationshipTypeScalarFieldEnum | CiRelationshipTypeScalarFieldEnum[]
  }

  /**
   * CiRelationshipType findFirstOrThrow
   */
  export type CiRelationshipTypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationshipType
     */
    select?: CiRelationshipTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationshipType
     */
    omit?: CiRelationshipTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipTypeInclude<ExtArgs> | null
    /**
     * Filter, which CiRelationshipType to fetch.
     */
    where?: CiRelationshipTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiRelationshipTypes to fetch.
     */
    orderBy?: CiRelationshipTypeOrderByWithRelationInput | CiRelationshipTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CiRelationshipTypes.
     */
    cursor?: CiRelationshipTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiRelationshipTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiRelationshipTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CiRelationshipTypes.
     */
    distinct?: CiRelationshipTypeScalarFieldEnum | CiRelationshipTypeScalarFieldEnum[]
  }

  /**
   * CiRelationshipType findMany
   */
  export type CiRelationshipTypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationshipType
     */
    select?: CiRelationshipTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationshipType
     */
    omit?: CiRelationshipTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipTypeInclude<ExtArgs> | null
    /**
     * Filter, which CiRelationshipTypes to fetch.
     */
    where?: CiRelationshipTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiRelationshipTypes to fetch.
     */
    orderBy?: CiRelationshipTypeOrderByWithRelationInput | CiRelationshipTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CiRelationshipTypes.
     */
    cursor?: CiRelationshipTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiRelationshipTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiRelationshipTypes.
     */
    skip?: number
    distinct?: CiRelationshipTypeScalarFieldEnum | CiRelationshipTypeScalarFieldEnum[]
  }

  /**
   * CiRelationshipType create
   */
  export type CiRelationshipTypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationshipType
     */
    select?: CiRelationshipTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationshipType
     */
    omit?: CiRelationshipTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipTypeInclude<ExtArgs> | null
    /**
     * The data needed to create a CiRelationshipType.
     */
    data: XOR<CiRelationshipTypeCreateInput, CiRelationshipTypeUncheckedCreateInput>
  }

  /**
   * CiRelationshipType createMany
   */
  export type CiRelationshipTypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CiRelationshipTypes.
     */
    data: CiRelationshipTypeCreateManyInput | CiRelationshipTypeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CiRelationshipType createManyAndReturn
   */
  export type CiRelationshipTypeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationshipType
     */
    select?: CiRelationshipTypeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationshipType
     */
    omit?: CiRelationshipTypeOmit<ExtArgs> | null
    /**
     * The data used to create many CiRelationshipTypes.
     */
    data: CiRelationshipTypeCreateManyInput | CiRelationshipTypeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipTypeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CiRelationshipType update
   */
  export type CiRelationshipTypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationshipType
     */
    select?: CiRelationshipTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationshipType
     */
    omit?: CiRelationshipTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipTypeInclude<ExtArgs> | null
    /**
     * The data needed to update a CiRelationshipType.
     */
    data: XOR<CiRelationshipTypeUpdateInput, CiRelationshipTypeUncheckedUpdateInput>
    /**
     * Choose, which CiRelationshipType to update.
     */
    where: CiRelationshipTypeWhereUniqueInput
  }

  /**
   * CiRelationshipType updateMany
   */
  export type CiRelationshipTypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CiRelationshipTypes.
     */
    data: XOR<CiRelationshipTypeUpdateManyMutationInput, CiRelationshipTypeUncheckedUpdateManyInput>
    /**
     * Filter which CiRelationshipTypes to update
     */
    where?: CiRelationshipTypeWhereInput
    /**
     * Limit how many CiRelationshipTypes to update.
     */
    limit?: number
  }

  /**
   * CiRelationshipType updateManyAndReturn
   */
  export type CiRelationshipTypeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationshipType
     */
    select?: CiRelationshipTypeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationshipType
     */
    omit?: CiRelationshipTypeOmit<ExtArgs> | null
    /**
     * The data used to update CiRelationshipTypes.
     */
    data: XOR<CiRelationshipTypeUpdateManyMutationInput, CiRelationshipTypeUncheckedUpdateManyInput>
    /**
     * Filter which CiRelationshipTypes to update
     */
    where?: CiRelationshipTypeWhereInput
    /**
     * Limit how many CiRelationshipTypes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipTypeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CiRelationshipType upsert
   */
  export type CiRelationshipTypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationshipType
     */
    select?: CiRelationshipTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationshipType
     */
    omit?: CiRelationshipTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipTypeInclude<ExtArgs> | null
    /**
     * The filter to search for the CiRelationshipType to update in case it exists.
     */
    where: CiRelationshipTypeWhereUniqueInput
    /**
     * In case the CiRelationshipType found by the `where` argument doesn't exist, create a new CiRelationshipType with this data.
     */
    create: XOR<CiRelationshipTypeCreateInput, CiRelationshipTypeUncheckedCreateInput>
    /**
     * In case the CiRelationshipType was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CiRelationshipTypeUpdateInput, CiRelationshipTypeUncheckedUpdateInput>
  }

  /**
   * CiRelationshipType delete
   */
  export type CiRelationshipTypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationshipType
     */
    select?: CiRelationshipTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationshipType
     */
    omit?: CiRelationshipTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipTypeInclude<ExtArgs> | null
    /**
     * Filter which CiRelationshipType to delete.
     */
    where: CiRelationshipTypeWhereUniqueInput
  }

  /**
   * CiRelationshipType deleteMany
   */
  export type CiRelationshipTypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CiRelationshipTypes to delete
     */
    where?: CiRelationshipTypeWhereInput
    /**
     * Limit how many CiRelationshipTypes to delete.
     */
    limit?: number
  }

  /**
   * CiRelationshipType.sourceCiType
   */
  export type CiRelationshipType$sourceCiTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiType
     */
    select?: CiTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiType
     */
    omit?: CiTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiTypeInclude<ExtArgs> | null
    where?: CiTypeWhereInput
  }

  /**
   * CiRelationshipType.targetCiType
   */
  export type CiRelationshipType$targetCiTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiType
     */
    select?: CiTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiType
     */
    omit?: CiTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiTypeInclude<ExtArgs> | null
    where?: CiTypeWhereInput
  }

  /**
   * CiRelationshipType.relationships
   */
  export type CiRelationshipType$relationshipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationship
     */
    select?: CiRelationshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationship
     */
    omit?: CiRelationshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipInclude<ExtArgs> | null
    where?: CiRelationshipWhereInput
    orderBy?: CiRelationshipOrderByWithRelationInput | CiRelationshipOrderByWithRelationInput[]
    cursor?: CiRelationshipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CiRelationshipScalarFieldEnum | CiRelationshipScalarFieldEnum[]
  }

  /**
   * CiRelationshipType without action
   */
  export type CiRelationshipTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationshipType
     */
    select?: CiRelationshipTypeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationshipType
     */
    omit?: CiRelationshipTypeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipTypeInclude<ExtArgs> | null
  }


  /**
   * Model CiRelationship
   */

  export type AggregateCiRelationship = {
    _count: CiRelationshipCountAggregateOutputType | null
    _min: CiRelationshipMinAggregateOutputType | null
    _max: CiRelationshipMaxAggregateOutputType | null
  }

  export type CiRelationshipMinAggregateOutputType = {
    id: string | null
    sourceCiId: string | null
    targetCiId: string | null
    relationshipTypeId: string | null
    strength: string | null
    criticality: string | null
    description: string | null
    isActive: boolean | null
    validFrom: Date | null
    validTo: Date | null
    discoveredDate: Date | null
    isDiscovered: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type CiRelationshipMaxAggregateOutputType = {
    id: string | null
    sourceCiId: string | null
    targetCiId: string | null
    relationshipTypeId: string | null
    strength: string | null
    criticality: string | null
    description: string | null
    isActive: boolean | null
    validFrom: Date | null
    validTo: Date | null
    discoveredDate: Date | null
    isDiscovered: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type CiRelationshipCountAggregateOutputType = {
    id: number
    sourceCiId: number
    targetCiId: number
    relationshipTypeId: number
    strength: number
    criticality: number
    description: number
    attributes: number
    isActive: number
    validFrom: number
    validTo: number
    discoveredDate: number
    isDiscovered: number
    createdAt: number
    updatedAt: number
    createdBy: number
    _all: number
  }


  export type CiRelationshipMinAggregateInputType = {
    id?: true
    sourceCiId?: true
    targetCiId?: true
    relationshipTypeId?: true
    strength?: true
    criticality?: true
    description?: true
    isActive?: true
    validFrom?: true
    validTo?: true
    discoveredDate?: true
    isDiscovered?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type CiRelationshipMaxAggregateInputType = {
    id?: true
    sourceCiId?: true
    targetCiId?: true
    relationshipTypeId?: true
    strength?: true
    criticality?: true
    description?: true
    isActive?: true
    validFrom?: true
    validTo?: true
    discoveredDate?: true
    isDiscovered?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type CiRelationshipCountAggregateInputType = {
    id?: true
    sourceCiId?: true
    targetCiId?: true
    relationshipTypeId?: true
    strength?: true
    criticality?: true
    description?: true
    attributes?: true
    isActive?: true
    validFrom?: true
    validTo?: true
    discoveredDate?: true
    isDiscovered?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    _all?: true
  }

  export type CiRelationshipAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CiRelationship to aggregate.
     */
    where?: CiRelationshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiRelationships to fetch.
     */
    orderBy?: CiRelationshipOrderByWithRelationInput | CiRelationshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CiRelationshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiRelationships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiRelationships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CiRelationships
    **/
    _count?: true | CiRelationshipCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CiRelationshipMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CiRelationshipMaxAggregateInputType
  }

  export type GetCiRelationshipAggregateType<T extends CiRelationshipAggregateArgs> = {
        [P in keyof T & keyof AggregateCiRelationship]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCiRelationship[P]>
      : GetScalarType<T[P], AggregateCiRelationship[P]>
  }




  export type CiRelationshipGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiRelationshipWhereInput
    orderBy?: CiRelationshipOrderByWithAggregationInput | CiRelationshipOrderByWithAggregationInput[]
    by: CiRelationshipScalarFieldEnum[] | CiRelationshipScalarFieldEnum
    having?: CiRelationshipScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CiRelationshipCountAggregateInputType | true
    _min?: CiRelationshipMinAggregateInputType
    _max?: CiRelationshipMaxAggregateInputType
  }

  export type CiRelationshipGroupByOutputType = {
    id: string
    sourceCiId: string
    targetCiId: string
    relationshipTypeId: string
    strength: string | null
    criticality: string | null
    description: string | null
    attributes: JsonValue | null
    isActive: boolean
    validFrom: Date | null
    validTo: Date | null
    discoveredDate: Date | null
    isDiscovered: boolean
    createdAt: Date
    updatedAt: Date
    createdBy: string | null
    _count: CiRelationshipCountAggregateOutputType | null
    _min: CiRelationshipMinAggregateOutputType | null
    _max: CiRelationshipMaxAggregateOutputType | null
  }

  type GetCiRelationshipGroupByPayload<T extends CiRelationshipGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CiRelationshipGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CiRelationshipGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CiRelationshipGroupByOutputType[P]>
            : GetScalarType<T[P], CiRelationshipGroupByOutputType[P]>
        }
      >
    >


  export type CiRelationshipSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sourceCiId?: boolean
    targetCiId?: boolean
    relationshipTypeId?: boolean
    strength?: boolean
    criticality?: boolean
    description?: boolean
    attributes?: boolean
    isActive?: boolean
    validFrom?: boolean
    validTo?: boolean
    discoveredDate?: boolean
    isDiscovered?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    sourceCi?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    targetCi?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    relationshipType?: boolean | CiRelationshipTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciRelationship"]>

  export type CiRelationshipSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sourceCiId?: boolean
    targetCiId?: boolean
    relationshipTypeId?: boolean
    strength?: boolean
    criticality?: boolean
    description?: boolean
    attributes?: boolean
    isActive?: boolean
    validFrom?: boolean
    validTo?: boolean
    discoveredDate?: boolean
    isDiscovered?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    sourceCi?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    targetCi?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    relationshipType?: boolean | CiRelationshipTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciRelationship"]>

  export type CiRelationshipSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sourceCiId?: boolean
    targetCiId?: boolean
    relationshipTypeId?: boolean
    strength?: boolean
    criticality?: boolean
    description?: boolean
    attributes?: boolean
    isActive?: boolean
    validFrom?: boolean
    validTo?: boolean
    discoveredDate?: boolean
    isDiscovered?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    sourceCi?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    targetCi?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    relationshipType?: boolean | CiRelationshipTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciRelationship"]>

  export type CiRelationshipSelectScalar = {
    id?: boolean
    sourceCiId?: boolean
    targetCiId?: boolean
    relationshipTypeId?: boolean
    strength?: boolean
    criticality?: boolean
    description?: boolean
    attributes?: boolean
    isActive?: boolean
    validFrom?: boolean
    validTo?: boolean
    discoveredDate?: boolean
    isDiscovered?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }

  export type CiRelationshipOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sourceCiId" | "targetCiId" | "relationshipTypeId" | "strength" | "criticality" | "description" | "attributes" | "isActive" | "validFrom" | "validTo" | "discoveredDate" | "isDiscovered" | "createdAt" | "updatedAt" | "createdBy", ExtArgs["result"]["ciRelationship"]>
  export type CiRelationshipInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sourceCi?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    targetCi?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    relationshipType?: boolean | CiRelationshipTypeDefaultArgs<ExtArgs>
  }
  export type CiRelationshipIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sourceCi?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    targetCi?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    relationshipType?: boolean | CiRelationshipTypeDefaultArgs<ExtArgs>
  }
  export type CiRelationshipIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sourceCi?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    targetCi?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    relationshipType?: boolean | CiRelationshipTypeDefaultArgs<ExtArgs>
  }

  export type $CiRelationshipPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CiRelationship"
    objects: {
      sourceCi: Prisma.$ConfigurationItemPayload<ExtArgs>
      targetCi: Prisma.$ConfigurationItemPayload<ExtArgs>
      relationshipType: Prisma.$CiRelationshipTypePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sourceCiId: string
      targetCiId: string
      relationshipTypeId: string
      strength: string | null
      criticality: string | null
      description: string | null
      attributes: Prisma.JsonValue | null
      isActive: boolean
      validFrom: Date | null
      validTo: Date | null
      discoveredDate: Date | null
      isDiscovered: boolean
      createdAt: Date
      updatedAt: Date
      createdBy: string | null
    }, ExtArgs["result"]["ciRelationship"]>
    composites: {}
  }

  type CiRelationshipGetPayload<S extends boolean | null | undefined | CiRelationshipDefaultArgs> = $Result.GetResult<Prisma.$CiRelationshipPayload, S>

  type CiRelationshipCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CiRelationshipFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CiRelationshipCountAggregateInputType | true
    }

  export interface CiRelationshipDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CiRelationship'], meta: { name: 'CiRelationship' } }
    /**
     * Find zero or one CiRelationship that matches the filter.
     * @param {CiRelationshipFindUniqueArgs} args - Arguments to find a CiRelationship
     * @example
     * // Get one CiRelationship
     * const ciRelationship = await prisma.ciRelationship.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CiRelationshipFindUniqueArgs>(args: SelectSubset<T, CiRelationshipFindUniqueArgs<ExtArgs>>): Prisma__CiRelationshipClient<$Result.GetResult<Prisma.$CiRelationshipPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CiRelationship that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CiRelationshipFindUniqueOrThrowArgs} args - Arguments to find a CiRelationship
     * @example
     * // Get one CiRelationship
     * const ciRelationship = await prisma.ciRelationship.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CiRelationshipFindUniqueOrThrowArgs>(args: SelectSubset<T, CiRelationshipFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CiRelationshipClient<$Result.GetResult<Prisma.$CiRelationshipPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CiRelationship that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiRelationshipFindFirstArgs} args - Arguments to find a CiRelationship
     * @example
     * // Get one CiRelationship
     * const ciRelationship = await prisma.ciRelationship.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CiRelationshipFindFirstArgs>(args?: SelectSubset<T, CiRelationshipFindFirstArgs<ExtArgs>>): Prisma__CiRelationshipClient<$Result.GetResult<Prisma.$CiRelationshipPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CiRelationship that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiRelationshipFindFirstOrThrowArgs} args - Arguments to find a CiRelationship
     * @example
     * // Get one CiRelationship
     * const ciRelationship = await prisma.ciRelationship.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CiRelationshipFindFirstOrThrowArgs>(args?: SelectSubset<T, CiRelationshipFindFirstOrThrowArgs<ExtArgs>>): Prisma__CiRelationshipClient<$Result.GetResult<Prisma.$CiRelationshipPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CiRelationships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiRelationshipFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CiRelationships
     * const ciRelationships = await prisma.ciRelationship.findMany()
     * 
     * // Get first 10 CiRelationships
     * const ciRelationships = await prisma.ciRelationship.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ciRelationshipWithIdOnly = await prisma.ciRelationship.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CiRelationshipFindManyArgs>(args?: SelectSubset<T, CiRelationshipFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiRelationshipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CiRelationship.
     * @param {CiRelationshipCreateArgs} args - Arguments to create a CiRelationship.
     * @example
     * // Create one CiRelationship
     * const CiRelationship = await prisma.ciRelationship.create({
     *   data: {
     *     // ... data to create a CiRelationship
     *   }
     * })
     * 
     */
    create<T extends CiRelationshipCreateArgs>(args: SelectSubset<T, CiRelationshipCreateArgs<ExtArgs>>): Prisma__CiRelationshipClient<$Result.GetResult<Prisma.$CiRelationshipPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CiRelationships.
     * @param {CiRelationshipCreateManyArgs} args - Arguments to create many CiRelationships.
     * @example
     * // Create many CiRelationships
     * const ciRelationship = await prisma.ciRelationship.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CiRelationshipCreateManyArgs>(args?: SelectSubset<T, CiRelationshipCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CiRelationships and returns the data saved in the database.
     * @param {CiRelationshipCreateManyAndReturnArgs} args - Arguments to create many CiRelationships.
     * @example
     * // Create many CiRelationships
     * const ciRelationship = await prisma.ciRelationship.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CiRelationships and only return the `id`
     * const ciRelationshipWithIdOnly = await prisma.ciRelationship.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CiRelationshipCreateManyAndReturnArgs>(args?: SelectSubset<T, CiRelationshipCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiRelationshipPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CiRelationship.
     * @param {CiRelationshipDeleteArgs} args - Arguments to delete one CiRelationship.
     * @example
     * // Delete one CiRelationship
     * const CiRelationship = await prisma.ciRelationship.delete({
     *   where: {
     *     // ... filter to delete one CiRelationship
     *   }
     * })
     * 
     */
    delete<T extends CiRelationshipDeleteArgs>(args: SelectSubset<T, CiRelationshipDeleteArgs<ExtArgs>>): Prisma__CiRelationshipClient<$Result.GetResult<Prisma.$CiRelationshipPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CiRelationship.
     * @param {CiRelationshipUpdateArgs} args - Arguments to update one CiRelationship.
     * @example
     * // Update one CiRelationship
     * const ciRelationship = await prisma.ciRelationship.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CiRelationshipUpdateArgs>(args: SelectSubset<T, CiRelationshipUpdateArgs<ExtArgs>>): Prisma__CiRelationshipClient<$Result.GetResult<Prisma.$CiRelationshipPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CiRelationships.
     * @param {CiRelationshipDeleteManyArgs} args - Arguments to filter CiRelationships to delete.
     * @example
     * // Delete a few CiRelationships
     * const { count } = await prisma.ciRelationship.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CiRelationshipDeleteManyArgs>(args?: SelectSubset<T, CiRelationshipDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CiRelationships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiRelationshipUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CiRelationships
     * const ciRelationship = await prisma.ciRelationship.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CiRelationshipUpdateManyArgs>(args: SelectSubset<T, CiRelationshipUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CiRelationships and returns the data updated in the database.
     * @param {CiRelationshipUpdateManyAndReturnArgs} args - Arguments to update many CiRelationships.
     * @example
     * // Update many CiRelationships
     * const ciRelationship = await prisma.ciRelationship.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CiRelationships and only return the `id`
     * const ciRelationshipWithIdOnly = await prisma.ciRelationship.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CiRelationshipUpdateManyAndReturnArgs>(args: SelectSubset<T, CiRelationshipUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiRelationshipPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CiRelationship.
     * @param {CiRelationshipUpsertArgs} args - Arguments to update or create a CiRelationship.
     * @example
     * // Update or create a CiRelationship
     * const ciRelationship = await prisma.ciRelationship.upsert({
     *   create: {
     *     // ... data to create a CiRelationship
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CiRelationship we want to update
     *   }
     * })
     */
    upsert<T extends CiRelationshipUpsertArgs>(args: SelectSubset<T, CiRelationshipUpsertArgs<ExtArgs>>): Prisma__CiRelationshipClient<$Result.GetResult<Prisma.$CiRelationshipPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CiRelationships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiRelationshipCountArgs} args - Arguments to filter CiRelationships to count.
     * @example
     * // Count the number of CiRelationships
     * const count = await prisma.ciRelationship.count({
     *   where: {
     *     // ... the filter for the CiRelationships we want to count
     *   }
     * })
    **/
    count<T extends CiRelationshipCountArgs>(
      args?: Subset<T, CiRelationshipCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CiRelationshipCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CiRelationship.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiRelationshipAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CiRelationshipAggregateArgs>(args: Subset<T, CiRelationshipAggregateArgs>): Prisma.PrismaPromise<GetCiRelationshipAggregateType<T>>

    /**
     * Group by CiRelationship.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiRelationshipGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CiRelationshipGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CiRelationshipGroupByArgs['orderBy'] }
        : { orderBy?: CiRelationshipGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CiRelationshipGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCiRelationshipGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CiRelationship model
   */
  readonly fields: CiRelationshipFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for CiRelationship.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CiRelationshipClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sourceCi<T extends ConfigurationItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItemDefaultArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    targetCi<T extends ConfigurationItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItemDefaultArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    relationshipType<T extends CiRelationshipTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CiRelationshipTypeDefaultArgs<ExtArgs>>): Prisma__CiRelationshipTypeClient<$Result.GetResult<Prisma.$CiRelationshipTypePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CiRelationship model
   */
  interface CiRelationshipFieldRefs {
    readonly id: FieldRef<"CiRelationship", 'String'>
    readonly sourceCiId: FieldRef<"CiRelationship", 'String'>
    readonly targetCiId: FieldRef<"CiRelationship", 'String'>
    readonly relationshipTypeId: FieldRef<"CiRelationship", 'String'>
    readonly strength: FieldRef<"CiRelationship", 'String'>
    readonly criticality: FieldRef<"CiRelationship", 'String'>
    readonly description: FieldRef<"CiRelationship", 'String'>
    readonly attributes: FieldRef<"CiRelationship", 'Json'>
    readonly isActive: FieldRef<"CiRelationship", 'Boolean'>
    readonly validFrom: FieldRef<"CiRelationship", 'DateTime'>
    readonly validTo: FieldRef<"CiRelationship", 'DateTime'>
    readonly discoveredDate: FieldRef<"CiRelationship", 'DateTime'>
    readonly isDiscovered: FieldRef<"CiRelationship", 'Boolean'>
    readonly createdAt: FieldRef<"CiRelationship", 'DateTime'>
    readonly updatedAt: FieldRef<"CiRelationship", 'DateTime'>
    readonly createdBy: FieldRef<"CiRelationship", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CiRelationship findUnique
   */
  export type CiRelationshipFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationship
     */
    select?: CiRelationshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationship
     */
    omit?: CiRelationshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipInclude<ExtArgs> | null
    /**
     * Filter, which CiRelationship to fetch.
     */
    where: CiRelationshipWhereUniqueInput
  }

  /**
   * CiRelationship findUniqueOrThrow
   */
  export type CiRelationshipFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationship
     */
    select?: CiRelationshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationship
     */
    omit?: CiRelationshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipInclude<ExtArgs> | null
    /**
     * Filter, which CiRelationship to fetch.
     */
    where: CiRelationshipWhereUniqueInput
  }

  /**
   * CiRelationship findFirst
   */
  export type CiRelationshipFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationship
     */
    select?: CiRelationshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationship
     */
    omit?: CiRelationshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipInclude<ExtArgs> | null
    /**
     * Filter, which CiRelationship to fetch.
     */
    where?: CiRelationshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiRelationships to fetch.
     */
    orderBy?: CiRelationshipOrderByWithRelationInput | CiRelationshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CiRelationships.
     */
    cursor?: CiRelationshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiRelationships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiRelationships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CiRelationships.
     */
    distinct?: CiRelationshipScalarFieldEnum | CiRelationshipScalarFieldEnum[]
  }

  /**
   * CiRelationship findFirstOrThrow
   */
  export type CiRelationshipFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationship
     */
    select?: CiRelationshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationship
     */
    omit?: CiRelationshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipInclude<ExtArgs> | null
    /**
     * Filter, which CiRelationship to fetch.
     */
    where?: CiRelationshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiRelationships to fetch.
     */
    orderBy?: CiRelationshipOrderByWithRelationInput | CiRelationshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CiRelationships.
     */
    cursor?: CiRelationshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiRelationships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiRelationships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CiRelationships.
     */
    distinct?: CiRelationshipScalarFieldEnum | CiRelationshipScalarFieldEnum[]
  }

  /**
   * CiRelationship findMany
   */
  export type CiRelationshipFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationship
     */
    select?: CiRelationshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationship
     */
    omit?: CiRelationshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipInclude<ExtArgs> | null
    /**
     * Filter, which CiRelationships to fetch.
     */
    where?: CiRelationshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiRelationships to fetch.
     */
    orderBy?: CiRelationshipOrderByWithRelationInput | CiRelationshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CiRelationships.
     */
    cursor?: CiRelationshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiRelationships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiRelationships.
     */
    skip?: number
    distinct?: CiRelationshipScalarFieldEnum | CiRelationshipScalarFieldEnum[]
  }

  /**
   * CiRelationship create
   */
  export type CiRelationshipCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationship
     */
    select?: CiRelationshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationship
     */
    omit?: CiRelationshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipInclude<ExtArgs> | null
    /**
     * The data needed to create a CiRelationship.
     */
    data: XOR<CiRelationshipCreateInput, CiRelationshipUncheckedCreateInput>
  }

  /**
   * CiRelationship createMany
   */
  export type CiRelationshipCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CiRelationships.
     */
    data: CiRelationshipCreateManyInput | CiRelationshipCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CiRelationship createManyAndReturn
   */
  export type CiRelationshipCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationship
     */
    select?: CiRelationshipSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationship
     */
    omit?: CiRelationshipOmit<ExtArgs> | null
    /**
     * The data used to create many CiRelationships.
     */
    data: CiRelationshipCreateManyInput | CiRelationshipCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CiRelationship update
   */
  export type CiRelationshipUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationship
     */
    select?: CiRelationshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationship
     */
    omit?: CiRelationshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipInclude<ExtArgs> | null
    /**
     * The data needed to update a CiRelationship.
     */
    data: XOR<CiRelationshipUpdateInput, CiRelationshipUncheckedUpdateInput>
    /**
     * Choose, which CiRelationship to update.
     */
    where: CiRelationshipWhereUniqueInput
  }

  /**
   * CiRelationship updateMany
   */
  export type CiRelationshipUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CiRelationships.
     */
    data: XOR<CiRelationshipUpdateManyMutationInput, CiRelationshipUncheckedUpdateManyInput>
    /**
     * Filter which CiRelationships to update
     */
    where?: CiRelationshipWhereInput
    /**
     * Limit how many CiRelationships to update.
     */
    limit?: number
  }

  /**
   * CiRelationship updateManyAndReturn
   */
  export type CiRelationshipUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationship
     */
    select?: CiRelationshipSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationship
     */
    omit?: CiRelationshipOmit<ExtArgs> | null
    /**
     * The data used to update CiRelationships.
     */
    data: XOR<CiRelationshipUpdateManyMutationInput, CiRelationshipUncheckedUpdateManyInput>
    /**
     * Filter which CiRelationships to update
     */
    where?: CiRelationshipWhereInput
    /**
     * Limit how many CiRelationships to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CiRelationship upsert
   */
  export type CiRelationshipUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationship
     */
    select?: CiRelationshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationship
     */
    omit?: CiRelationshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipInclude<ExtArgs> | null
    /**
     * The filter to search for the CiRelationship to update in case it exists.
     */
    where: CiRelationshipWhereUniqueInput
    /**
     * In case the CiRelationship found by the `where` argument doesn't exist, create a new CiRelationship with this data.
     */
    create: XOR<CiRelationshipCreateInput, CiRelationshipUncheckedCreateInput>
    /**
     * In case the CiRelationship was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CiRelationshipUpdateInput, CiRelationshipUncheckedUpdateInput>
  }

  /**
   * CiRelationship delete
   */
  export type CiRelationshipDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationship
     */
    select?: CiRelationshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationship
     */
    omit?: CiRelationshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipInclude<ExtArgs> | null
    /**
     * Filter which CiRelationship to delete.
     */
    where: CiRelationshipWhereUniqueInput
  }

  /**
   * CiRelationship deleteMany
   */
  export type CiRelationshipDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CiRelationships to delete
     */
    where?: CiRelationshipWhereInput
    /**
     * Limit how many CiRelationships to delete.
     */
    limit?: number
  }

  /**
   * CiRelationship without action
   */
  export type CiRelationshipDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiRelationship
     */
    select?: CiRelationshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiRelationship
     */
    omit?: CiRelationshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiRelationshipInclude<ExtArgs> | null
  }


  /**
   * Model HardwareCi
   */

  export type AggregateHardwareCi = {
    _count: HardwareCiCountAggregateOutputType | null
    _avg: HardwareCiAvgAggregateOutputType | null
    _sum: HardwareCiSumAggregateOutputType | null
    _min: HardwareCiMinAggregateOutputType | null
    _max: HardwareCiMaxAggregateOutputType | null
  }

  export type HardwareCiAvgAggregateOutputType = {
    coreCount: number | null
    portCount: number | null
  }

  export type HardwareCiSumAggregateOutputType = {
    coreCount: number | null
    portCount: number | null
  }

  export type HardwareCiMinAggregateOutputType = {
    ciId: string | null
    processorType: string | null
    processorSpeed: string | null
    coreCount: number | null
    memorySize: string | null
    storageSize: string | null
    storageType: string | null
    macAddress: string | null
    ipAddress: string | null
    portCount: number | null
    formFactor: string | null
    dimensions: string | null
    weight: string | null
    powerRequirements: string | null
  }

  export type HardwareCiMaxAggregateOutputType = {
    ciId: string | null
    processorType: string | null
    processorSpeed: string | null
    coreCount: number | null
    memorySize: string | null
    storageSize: string | null
    storageType: string | null
    macAddress: string | null
    ipAddress: string | null
    portCount: number | null
    formFactor: string | null
    dimensions: string | null
    weight: string | null
    powerRequirements: string | null
  }

  export type HardwareCiCountAggregateOutputType = {
    ciId: number
    processorType: number
    processorSpeed: number
    coreCount: number
    memorySize: number
    storageSize: number
    storageType: number
    macAddress: number
    ipAddress: number
    portCount: number
    formFactor: number
    dimensions: number
    weight: number
    powerRequirements: number
    _all: number
  }


  export type HardwareCiAvgAggregateInputType = {
    coreCount?: true
    portCount?: true
  }

  export type HardwareCiSumAggregateInputType = {
    coreCount?: true
    portCount?: true
  }

  export type HardwareCiMinAggregateInputType = {
    ciId?: true
    processorType?: true
    processorSpeed?: true
    coreCount?: true
    memorySize?: true
    storageSize?: true
    storageType?: true
    macAddress?: true
    ipAddress?: true
    portCount?: true
    formFactor?: true
    dimensions?: true
    weight?: true
    powerRequirements?: true
  }

  export type HardwareCiMaxAggregateInputType = {
    ciId?: true
    processorType?: true
    processorSpeed?: true
    coreCount?: true
    memorySize?: true
    storageSize?: true
    storageType?: true
    macAddress?: true
    ipAddress?: true
    portCount?: true
    formFactor?: true
    dimensions?: true
    weight?: true
    powerRequirements?: true
  }

  export type HardwareCiCountAggregateInputType = {
    ciId?: true
    processorType?: true
    processorSpeed?: true
    coreCount?: true
    memorySize?: true
    storageSize?: true
    storageType?: true
    macAddress?: true
    ipAddress?: true
    portCount?: true
    formFactor?: true
    dimensions?: true
    weight?: true
    powerRequirements?: true
    _all?: true
  }

  export type HardwareCiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HardwareCi to aggregate.
     */
    where?: HardwareCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HardwareCis to fetch.
     */
    orderBy?: HardwareCiOrderByWithRelationInput | HardwareCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HardwareCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HardwareCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HardwareCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HardwareCis
    **/
    _count?: true | HardwareCiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HardwareCiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HardwareCiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HardwareCiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HardwareCiMaxAggregateInputType
  }

  export type GetHardwareCiAggregateType<T extends HardwareCiAggregateArgs> = {
        [P in keyof T & keyof AggregateHardwareCi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHardwareCi[P]>
      : GetScalarType<T[P], AggregateHardwareCi[P]>
  }




  export type HardwareCiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HardwareCiWhereInput
    orderBy?: HardwareCiOrderByWithAggregationInput | HardwareCiOrderByWithAggregationInput[]
    by: HardwareCiScalarFieldEnum[] | HardwareCiScalarFieldEnum
    having?: HardwareCiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HardwareCiCountAggregateInputType | true
    _avg?: HardwareCiAvgAggregateInputType
    _sum?: HardwareCiSumAggregateInputType
    _min?: HardwareCiMinAggregateInputType
    _max?: HardwareCiMaxAggregateInputType
  }

  export type HardwareCiGroupByOutputType = {
    ciId: string
    processorType: string | null
    processorSpeed: string | null
    coreCount: number | null
    memorySize: string | null
    storageSize: string | null
    storageType: string | null
    macAddress: string | null
    ipAddress: string | null
    portCount: number | null
    formFactor: string | null
    dimensions: string | null
    weight: string | null
    powerRequirements: string | null
    _count: HardwareCiCountAggregateOutputType | null
    _avg: HardwareCiAvgAggregateOutputType | null
    _sum: HardwareCiSumAggregateOutputType | null
    _min: HardwareCiMinAggregateOutputType | null
    _max: HardwareCiMaxAggregateOutputType | null
  }

  type GetHardwareCiGroupByPayload<T extends HardwareCiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HardwareCiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HardwareCiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HardwareCiGroupByOutputType[P]>
            : GetScalarType<T[P], HardwareCiGroupByOutputType[P]>
        }
      >
    >


  export type HardwareCiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    processorType?: boolean
    processorSpeed?: boolean
    coreCount?: boolean
    memorySize?: boolean
    storageSize?: boolean
    storageType?: boolean
    macAddress?: boolean
    ipAddress?: boolean
    portCount?: boolean
    formFactor?: boolean
    dimensions?: boolean
    weight?: boolean
    powerRequirements?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["hardwareCi"]>

  export type HardwareCiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    processorType?: boolean
    processorSpeed?: boolean
    coreCount?: boolean
    memorySize?: boolean
    storageSize?: boolean
    storageType?: boolean
    macAddress?: boolean
    ipAddress?: boolean
    portCount?: boolean
    formFactor?: boolean
    dimensions?: boolean
    weight?: boolean
    powerRequirements?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["hardwareCi"]>

  export type HardwareCiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    processorType?: boolean
    processorSpeed?: boolean
    coreCount?: boolean
    memorySize?: boolean
    storageSize?: boolean
    storageType?: boolean
    macAddress?: boolean
    ipAddress?: boolean
    portCount?: boolean
    formFactor?: boolean
    dimensions?: boolean
    weight?: boolean
    powerRequirements?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["hardwareCi"]>

  export type HardwareCiSelectScalar = {
    ciId?: boolean
    processorType?: boolean
    processorSpeed?: boolean
    coreCount?: boolean
    memorySize?: boolean
    storageSize?: boolean
    storageType?: boolean
    macAddress?: boolean
    ipAddress?: boolean
    portCount?: boolean
    formFactor?: boolean
    dimensions?: boolean
    weight?: boolean
    powerRequirements?: boolean
  }

  export type HardwareCiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ciId" | "processorType" | "processorSpeed" | "coreCount" | "memorySize" | "storageSize" | "storageType" | "macAddress" | "ipAddress" | "portCount" | "formFactor" | "dimensions" | "weight" | "powerRequirements", ExtArgs["result"]["hardwareCi"]>
  export type HardwareCiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type HardwareCiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type HardwareCiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }

  export type $HardwareCiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HardwareCi"
    objects: {
      configurationItem: Prisma.$ConfigurationItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      ciId: string
      processorType: string | null
      processorSpeed: string | null
      coreCount: number | null
      memorySize: string | null
      storageSize: string | null
      storageType: string | null
      macAddress: string | null
      ipAddress: string | null
      portCount: number | null
      formFactor: string | null
      dimensions: string | null
      weight: string | null
      powerRequirements: string | null
    }, ExtArgs["result"]["hardwareCi"]>
    composites: {}
  }

  type HardwareCiGetPayload<S extends boolean | null | undefined | HardwareCiDefaultArgs> = $Result.GetResult<Prisma.$HardwareCiPayload, S>

  type HardwareCiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HardwareCiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HardwareCiCountAggregateInputType | true
    }

  export interface HardwareCiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HardwareCi'], meta: { name: 'HardwareCi' } }
    /**
     * Find zero or one HardwareCi that matches the filter.
     * @param {HardwareCiFindUniqueArgs} args - Arguments to find a HardwareCi
     * @example
     * // Get one HardwareCi
     * const hardwareCi = await prisma.hardwareCi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HardwareCiFindUniqueArgs>(args: SelectSubset<T, HardwareCiFindUniqueArgs<ExtArgs>>): Prisma__HardwareCiClient<$Result.GetResult<Prisma.$HardwareCiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one HardwareCi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HardwareCiFindUniqueOrThrowArgs} args - Arguments to find a HardwareCi
     * @example
     * // Get one HardwareCi
     * const hardwareCi = await prisma.hardwareCi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HardwareCiFindUniqueOrThrowArgs>(args: SelectSubset<T, HardwareCiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HardwareCiClient<$Result.GetResult<Prisma.$HardwareCiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HardwareCi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HardwareCiFindFirstArgs} args - Arguments to find a HardwareCi
     * @example
     * // Get one HardwareCi
     * const hardwareCi = await prisma.hardwareCi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HardwareCiFindFirstArgs>(args?: SelectSubset<T, HardwareCiFindFirstArgs<ExtArgs>>): Prisma__HardwareCiClient<$Result.GetResult<Prisma.$HardwareCiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HardwareCi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HardwareCiFindFirstOrThrowArgs} args - Arguments to find a HardwareCi
     * @example
     * // Get one HardwareCi
     * const hardwareCi = await prisma.hardwareCi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HardwareCiFindFirstOrThrowArgs>(args?: SelectSubset<T, HardwareCiFindFirstOrThrowArgs<ExtArgs>>): Prisma__HardwareCiClient<$Result.GetResult<Prisma.$HardwareCiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more HardwareCis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HardwareCiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HardwareCis
     * const hardwareCis = await prisma.hardwareCi.findMany()
     * 
     * // Get first 10 HardwareCis
     * const hardwareCis = await prisma.hardwareCi.findMany({ take: 10 })
     * 
     * // Only select the `ciId`
     * const hardwareCiWithCiIdOnly = await prisma.hardwareCi.findMany({ select: { ciId: true } })
     * 
     */
    findMany<T extends HardwareCiFindManyArgs>(args?: SelectSubset<T, HardwareCiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HardwareCiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a HardwareCi.
     * @param {HardwareCiCreateArgs} args - Arguments to create a HardwareCi.
     * @example
     * // Create one HardwareCi
     * const HardwareCi = await prisma.hardwareCi.create({
     *   data: {
     *     // ... data to create a HardwareCi
     *   }
     * })
     * 
     */
    create<T extends HardwareCiCreateArgs>(args: SelectSubset<T, HardwareCiCreateArgs<ExtArgs>>): Prisma__HardwareCiClient<$Result.GetResult<Prisma.$HardwareCiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many HardwareCis.
     * @param {HardwareCiCreateManyArgs} args - Arguments to create many HardwareCis.
     * @example
     * // Create many HardwareCis
     * const hardwareCi = await prisma.hardwareCi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HardwareCiCreateManyArgs>(args?: SelectSubset<T, HardwareCiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many HardwareCis and returns the data saved in the database.
     * @param {HardwareCiCreateManyAndReturnArgs} args - Arguments to create many HardwareCis.
     * @example
     * // Create many HardwareCis
     * const hardwareCi = await prisma.hardwareCi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many HardwareCis and only return the `ciId`
     * const hardwareCiWithCiIdOnly = await prisma.hardwareCi.createManyAndReturn({
     *   select: { ciId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HardwareCiCreateManyAndReturnArgs>(args?: SelectSubset<T, HardwareCiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HardwareCiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a HardwareCi.
     * @param {HardwareCiDeleteArgs} args - Arguments to delete one HardwareCi.
     * @example
     * // Delete one HardwareCi
     * const HardwareCi = await prisma.hardwareCi.delete({
     *   where: {
     *     // ... filter to delete one HardwareCi
     *   }
     * })
     * 
     */
    delete<T extends HardwareCiDeleteArgs>(args: SelectSubset<T, HardwareCiDeleteArgs<ExtArgs>>): Prisma__HardwareCiClient<$Result.GetResult<Prisma.$HardwareCiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one HardwareCi.
     * @param {HardwareCiUpdateArgs} args - Arguments to update one HardwareCi.
     * @example
     * // Update one HardwareCi
     * const hardwareCi = await prisma.hardwareCi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HardwareCiUpdateArgs>(args: SelectSubset<T, HardwareCiUpdateArgs<ExtArgs>>): Prisma__HardwareCiClient<$Result.GetResult<Prisma.$HardwareCiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more HardwareCis.
     * @param {HardwareCiDeleteManyArgs} args - Arguments to filter HardwareCis to delete.
     * @example
     * // Delete a few HardwareCis
     * const { count } = await prisma.hardwareCi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HardwareCiDeleteManyArgs>(args?: SelectSubset<T, HardwareCiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HardwareCis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HardwareCiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HardwareCis
     * const hardwareCi = await prisma.hardwareCi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HardwareCiUpdateManyArgs>(args: SelectSubset<T, HardwareCiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HardwareCis and returns the data updated in the database.
     * @param {HardwareCiUpdateManyAndReturnArgs} args - Arguments to update many HardwareCis.
     * @example
     * // Update many HardwareCis
     * const hardwareCi = await prisma.hardwareCi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more HardwareCis and only return the `ciId`
     * const hardwareCiWithCiIdOnly = await prisma.hardwareCi.updateManyAndReturn({
     *   select: { ciId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends HardwareCiUpdateManyAndReturnArgs>(args: SelectSubset<T, HardwareCiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HardwareCiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one HardwareCi.
     * @param {HardwareCiUpsertArgs} args - Arguments to update or create a HardwareCi.
     * @example
     * // Update or create a HardwareCi
     * const hardwareCi = await prisma.hardwareCi.upsert({
     *   create: {
     *     // ... data to create a HardwareCi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HardwareCi we want to update
     *   }
     * })
     */
    upsert<T extends HardwareCiUpsertArgs>(args: SelectSubset<T, HardwareCiUpsertArgs<ExtArgs>>): Prisma__HardwareCiClient<$Result.GetResult<Prisma.$HardwareCiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of HardwareCis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HardwareCiCountArgs} args - Arguments to filter HardwareCis to count.
     * @example
     * // Count the number of HardwareCis
     * const count = await prisma.hardwareCi.count({
     *   where: {
     *     // ... the filter for the HardwareCis we want to count
     *   }
     * })
    **/
    count<T extends HardwareCiCountArgs>(
      args?: Subset<T, HardwareCiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HardwareCiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HardwareCi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HardwareCiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HardwareCiAggregateArgs>(args: Subset<T, HardwareCiAggregateArgs>): Prisma.PrismaPromise<GetHardwareCiAggregateType<T>>

    /**
     * Group by HardwareCi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HardwareCiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HardwareCiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HardwareCiGroupByArgs['orderBy'] }
        : { orderBy?: HardwareCiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HardwareCiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHardwareCiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HardwareCi model
   */
  readonly fields: HardwareCiFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for HardwareCi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HardwareCiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    configurationItem<T extends ConfigurationItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItemDefaultArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HardwareCi model
   */
  interface HardwareCiFieldRefs {
    readonly ciId: FieldRef<"HardwareCi", 'String'>
    readonly processorType: FieldRef<"HardwareCi", 'String'>
    readonly processorSpeed: FieldRef<"HardwareCi", 'String'>
    readonly coreCount: FieldRef<"HardwareCi", 'Int'>
    readonly memorySize: FieldRef<"HardwareCi", 'String'>
    readonly storageSize: FieldRef<"HardwareCi", 'String'>
    readonly storageType: FieldRef<"HardwareCi", 'String'>
    readonly macAddress: FieldRef<"HardwareCi", 'String'>
    readonly ipAddress: FieldRef<"HardwareCi", 'String'>
    readonly portCount: FieldRef<"HardwareCi", 'Int'>
    readonly formFactor: FieldRef<"HardwareCi", 'String'>
    readonly dimensions: FieldRef<"HardwareCi", 'String'>
    readonly weight: FieldRef<"HardwareCi", 'String'>
    readonly powerRequirements: FieldRef<"HardwareCi", 'String'>
  }
    

  // Custom InputTypes
  /**
   * HardwareCi findUnique
   */
  export type HardwareCiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HardwareCi
     */
    select?: HardwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HardwareCi
     */
    omit?: HardwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HardwareCiInclude<ExtArgs> | null
    /**
     * Filter, which HardwareCi to fetch.
     */
    where: HardwareCiWhereUniqueInput
  }

  /**
   * HardwareCi findUniqueOrThrow
   */
  export type HardwareCiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HardwareCi
     */
    select?: HardwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HardwareCi
     */
    omit?: HardwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HardwareCiInclude<ExtArgs> | null
    /**
     * Filter, which HardwareCi to fetch.
     */
    where: HardwareCiWhereUniqueInput
  }

  /**
   * HardwareCi findFirst
   */
  export type HardwareCiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HardwareCi
     */
    select?: HardwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HardwareCi
     */
    omit?: HardwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HardwareCiInclude<ExtArgs> | null
    /**
     * Filter, which HardwareCi to fetch.
     */
    where?: HardwareCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HardwareCis to fetch.
     */
    orderBy?: HardwareCiOrderByWithRelationInput | HardwareCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HardwareCis.
     */
    cursor?: HardwareCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HardwareCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HardwareCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HardwareCis.
     */
    distinct?: HardwareCiScalarFieldEnum | HardwareCiScalarFieldEnum[]
  }

  /**
   * HardwareCi findFirstOrThrow
   */
  export type HardwareCiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HardwareCi
     */
    select?: HardwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HardwareCi
     */
    omit?: HardwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HardwareCiInclude<ExtArgs> | null
    /**
     * Filter, which HardwareCi to fetch.
     */
    where?: HardwareCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HardwareCis to fetch.
     */
    orderBy?: HardwareCiOrderByWithRelationInput | HardwareCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HardwareCis.
     */
    cursor?: HardwareCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HardwareCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HardwareCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HardwareCis.
     */
    distinct?: HardwareCiScalarFieldEnum | HardwareCiScalarFieldEnum[]
  }

  /**
   * HardwareCi findMany
   */
  export type HardwareCiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HardwareCi
     */
    select?: HardwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HardwareCi
     */
    omit?: HardwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HardwareCiInclude<ExtArgs> | null
    /**
     * Filter, which HardwareCis to fetch.
     */
    where?: HardwareCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HardwareCis to fetch.
     */
    orderBy?: HardwareCiOrderByWithRelationInput | HardwareCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HardwareCis.
     */
    cursor?: HardwareCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HardwareCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HardwareCis.
     */
    skip?: number
    distinct?: HardwareCiScalarFieldEnum | HardwareCiScalarFieldEnum[]
  }

  /**
   * HardwareCi create
   */
  export type HardwareCiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HardwareCi
     */
    select?: HardwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HardwareCi
     */
    omit?: HardwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HardwareCiInclude<ExtArgs> | null
    /**
     * The data needed to create a HardwareCi.
     */
    data: XOR<HardwareCiCreateInput, HardwareCiUncheckedCreateInput>
  }

  /**
   * HardwareCi createMany
   */
  export type HardwareCiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HardwareCis.
     */
    data: HardwareCiCreateManyInput | HardwareCiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HardwareCi createManyAndReturn
   */
  export type HardwareCiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HardwareCi
     */
    select?: HardwareCiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HardwareCi
     */
    omit?: HardwareCiOmit<ExtArgs> | null
    /**
     * The data used to create many HardwareCis.
     */
    data: HardwareCiCreateManyInput | HardwareCiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HardwareCiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * HardwareCi update
   */
  export type HardwareCiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HardwareCi
     */
    select?: HardwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HardwareCi
     */
    omit?: HardwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HardwareCiInclude<ExtArgs> | null
    /**
     * The data needed to update a HardwareCi.
     */
    data: XOR<HardwareCiUpdateInput, HardwareCiUncheckedUpdateInput>
    /**
     * Choose, which HardwareCi to update.
     */
    where: HardwareCiWhereUniqueInput
  }

  /**
   * HardwareCi updateMany
   */
  export type HardwareCiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HardwareCis.
     */
    data: XOR<HardwareCiUpdateManyMutationInput, HardwareCiUncheckedUpdateManyInput>
    /**
     * Filter which HardwareCis to update
     */
    where?: HardwareCiWhereInput
    /**
     * Limit how many HardwareCis to update.
     */
    limit?: number
  }

  /**
   * HardwareCi updateManyAndReturn
   */
  export type HardwareCiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HardwareCi
     */
    select?: HardwareCiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HardwareCi
     */
    omit?: HardwareCiOmit<ExtArgs> | null
    /**
     * The data used to update HardwareCis.
     */
    data: XOR<HardwareCiUpdateManyMutationInput, HardwareCiUncheckedUpdateManyInput>
    /**
     * Filter which HardwareCis to update
     */
    where?: HardwareCiWhereInput
    /**
     * Limit how many HardwareCis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HardwareCiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * HardwareCi upsert
   */
  export type HardwareCiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HardwareCi
     */
    select?: HardwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HardwareCi
     */
    omit?: HardwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HardwareCiInclude<ExtArgs> | null
    /**
     * The filter to search for the HardwareCi to update in case it exists.
     */
    where: HardwareCiWhereUniqueInput
    /**
     * In case the HardwareCi found by the `where` argument doesn't exist, create a new HardwareCi with this data.
     */
    create: XOR<HardwareCiCreateInput, HardwareCiUncheckedCreateInput>
    /**
     * In case the HardwareCi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HardwareCiUpdateInput, HardwareCiUncheckedUpdateInput>
  }

  /**
   * HardwareCi delete
   */
  export type HardwareCiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HardwareCi
     */
    select?: HardwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HardwareCi
     */
    omit?: HardwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HardwareCiInclude<ExtArgs> | null
    /**
     * Filter which HardwareCi to delete.
     */
    where: HardwareCiWhereUniqueInput
  }

  /**
   * HardwareCi deleteMany
   */
  export type HardwareCiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HardwareCis to delete
     */
    where?: HardwareCiWhereInput
    /**
     * Limit how many HardwareCis to delete.
     */
    limit?: number
  }

  /**
   * HardwareCi without action
   */
  export type HardwareCiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HardwareCi
     */
    select?: HardwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HardwareCi
     */
    omit?: HardwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HardwareCiInclude<ExtArgs> | null
  }


  /**
   * Model SoftwareCi
   */

  export type AggregateSoftwareCi = {
    _count: SoftwareCiCountAggregateOutputType | null
    _avg: SoftwareCiAvgAggregateOutputType | null
    _sum: SoftwareCiSumAggregateOutputType | null
    _min: SoftwareCiMinAggregateOutputType | null
    _max: SoftwareCiMaxAggregateOutputType | null
  }

  export type SoftwareCiAvgAggregateOutputType = {
    licenseCount: number | null
  }

  export type SoftwareCiSumAggregateOutputType = {
    licenseCount: number | null
  }

  export type SoftwareCiMinAggregateOutputType = {
    ciId: string | null
    version: string | null
    edition: string | null
    architecture: string | null
    licenseType: string | null
    licenseKey: string | null
    licenseCount: number | null
    installPath: string | null
    installDate: Date | null
    installedBy: string | null
    isLatestVersion: boolean | null
    patchLevel: string | null
    supportEndDate: Date | null
  }

  export type SoftwareCiMaxAggregateOutputType = {
    ciId: string | null
    version: string | null
    edition: string | null
    architecture: string | null
    licenseType: string | null
    licenseKey: string | null
    licenseCount: number | null
    installPath: string | null
    installDate: Date | null
    installedBy: string | null
    isLatestVersion: boolean | null
    patchLevel: string | null
    supportEndDate: Date | null
  }

  export type SoftwareCiCountAggregateOutputType = {
    ciId: number
    version: number
    edition: number
    architecture: number
    licenseType: number
    licenseKey: number
    licenseCount: number
    installPath: number
    installDate: number
    installedBy: number
    isLatestVersion: number
    patchLevel: number
    supportEndDate: number
    _all: number
  }


  export type SoftwareCiAvgAggregateInputType = {
    licenseCount?: true
  }

  export type SoftwareCiSumAggregateInputType = {
    licenseCount?: true
  }

  export type SoftwareCiMinAggregateInputType = {
    ciId?: true
    version?: true
    edition?: true
    architecture?: true
    licenseType?: true
    licenseKey?: true
    licenseCount?: true
    installPath?: true
    installDate?: true
    installedBy?: true
    isLatestVersion?: true
    patchLevel?: true
    supportEndDate?: true
  }

  export type SoftwareCiMaxAggregateInputType = {
    ciId?: true
    version?: true
    edition?: true
    architecture?: true
    licenseType?: true
    licenseKey?: true
    licenseCount?: true
    installPath?: true
    installDate?: true
    installedBy?: true
    isLatestVersion?: true
    patchLevel?: true
    supportEndDate?: true
  }

  export type SoftwareCiCountAggregateInputType = {
    ciId?: true
    version?: true
    edition?: true
    architecture?: true
    licenseType?: true
    licenseKey?: true
    licenseCount?: true
    installPath?: true
    installDate?: true
    installedBy?: true
    isLatestVersion?: true
    patchLevel?: true
    supportEndDate?: true
    _all?: true
  }

  export type SoftwareCiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SoftwareCi to aggregate.
     */
    where?: SoftwareCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SoftwareCis to fetch.
     */
    orderBy?: SoftwareCiOrderByWithRelationInput | SoftwareCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SoftwareCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SoftwareCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SoftwareCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SoftwareCis
    **/
    _count?: true | SoftwareCiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SoftwareCiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SoftwareCiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SoftwareCiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SoftwareCiMaxAggregateInputType
  }

  export type GetSoftwareCiAggregateType<T extends SoftwareCiAggregateArgs> = {
        [P in keyof T & keyof AggregateSoftwareCi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSoftwareCi[P]>
      : GetScalarType<T[P], AggregateSoftwareCi[P]>
  }




  export type SoftwareCiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SoftwareCiWhereInput
    orderBy?: SoftwareCiOrderByWithAggregationInput | SoftwareCiOrderByWithAggregationInput[]
    by: SoftwareCiScalarFieldEnum[] | SoftwareCiScalarFieldEnum
    having?: SoftwareCiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SoftwareCiCountAggregateInputType | true
    _avg?: SoftwareCiAvgAggregateInputType
    _sum?: SoftwareCiSumAggregateInputType
    _min?: SoftwareCiMinAggregateInputType
    _max?: SoftwareCiMaxAggregateInputType
  }

  export type SoftwareCiGroupByOutputType = {
    ciId: string
    version: string | null
    edition: string | null
    architecture: string | null
    licenseType: string | null
    licenseKey: string | null
    licenseCount: number | null
    installPath: string | null
    installDate: Date | null
    installedBy: string | null
    isLatestVersion: boolean | null
    patchLevel: string | null
    supportEndDate: Date | null
    _count: SoftwareCiCountAggregateOutputType | null
    _avg: SoftwareCiAvgAggregateOutputType | null
    _sum: SoftwareCiSumAggregateOutputType | null
    _min: SoftwareCiMinAggregateOutputType | null
    _max: SoftwareCiMaxAggregateOutputType | null
  }

  type GetSoftwareCiGroupByPayload<T extends SoftwareCiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SoftwareCiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SoftwareCiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SoftwareCiGroupByOutputType[P]>
            : GetScalarType<T[P], SoftwareCiGroupByOutputType[P]>
        }
      >
    >


  export type SoftwareCiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    version?: boolean
    edition?: boolean
    architecture?: boolean
    licenseType?: boolean
    licenseKey?: boolean
    licenseCount?: boolean
    installPath?: boolean
    installDate?: boolean
    installedBy?: boolean
    isLatestVersion?: boolean
    patchLevel?: boolean
    supportEndDate?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["softwareCi"]>

  export type SoftwareCiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    version?: boolean
    edition?: boolean
    architecture?: boolean
    licenseType?: boolean
    licenseKey?: boolean
    licenseCount?: boolean
    installPath?: boolean
    installDate?: boolean
    installedBy?: boolean
    isLatestVersion?: boolean
    patchLevel?: boolean
    supportEndDate?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["softwareCi"]>

  export type SoftwareCiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    version?: boolean
    edition?: boolean
    architecture?: boolean
    licenseType?: boolean
    licenseKey?: boolean
    licenseCount?: boolean
    installPath?: boolean
    installDate?: boolean
    installedBy?: boolean
    isLatestVersion?: boolean
    patchLevel?: boolean
    supportEndDate?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["softwareCi"]>

  export type SoftwareCiSelectScalar = {
    ciId?: boolean
    version?: boolean
    edition?: boolean
    architecture?: boolean
    licenseType?: boolean
    licenseKey?: boolean
    licenseCount?: boolean
    installPath?: boolean
    installDate?: boolean
    installedBy?: boolean
    isLatestVersion?: boolean
    patchLevel?: boolean
    supportEndDate?: boolean
  }

  export type SoftwareCiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ciId" | "version" | "edition" | "architecture" | "licenseType" | "licenseKey" | "licenseCount" | "installPath" | "installDate" | "installedBy" | "isLatestVersion" | "patchLevel" | "supportEndDate", ExtArgs["result"]["softwareCi"]>
  export type SoftwareCiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type SoftwareCiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type SoftwareCiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }

  export type $SoftwareCiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SoftwareCi"
    objects: {
      configurationItem: Prisma.$ConfigurationItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      ciId: string
      version: string | null
      edition: string | null
      architecture: string | null
      licenseType: string | null
      licenseKey: string | null
      licenseCount: number | null
      installPath: string | null
      installDate: Date | null
      installedBy: string | null
      isLatestVersion: boolean | null
      patchLevel: string | null
      supportEndDate: Date | null
    }, ExtArgs["result"]["softwareCi"]>
    composites: {}
  }

  type SoftwareCiGetPayload<S extends boolean | null | undefined | SoftwareCiDefaultArgs> = $Result.GetResult<Prisma.$SoftwareCiPayload, S>

  type SoftwareCiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SoftwareCiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SoftwareCiCountAggregateInputType | true
    }

  export interface SoftwareCiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SoftwareCi'], meta: { name: 'SoftwareCi' } }
    /**
     * Find zero or one SoftwareCi that matches the filter.
     * @param {SoftwareCiFindUniqueArgs} args - Arguments to find a SoftwareCi
     * @example
     * // Get one SoftwareCi
     * const softwareCi = await prisma.softwareCi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SoftwareCiFindUniqueArgs>(args: SelectSubset<T, SoftwareCiFindUniqueArgs<ExtArgs>>): Prisma__SoftwareCiClient<$Result.GetResult<Prisma.$SoftwareCiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SoftwareCi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SoftwareCiFindUniqueOrThrowArgs} args - Arguments to find a SoftwareCi
     * @example
     * // Get one SoftwareCi
     * const softwareCi = await prisma.softwareCi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SoftwareCiFindUniqueOrThrowArgs>(args: SelectSubset<T, SoftwareCiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SoftwareCiClient<$Result.GetResult<Prisma.$SoftwareCiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SoftwareCi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareCiFindFirstArgs} args - Arguments to find a SoftwareCi
     * @example
     * // Get one SoftwareCi
     * const softwareCi = await prisma.softwareCi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SoftwareCiFindFirstArgs>(args?: SelectSubset<T, SoftwareCiFindFirstArgs<ExtArgs>>): Prisma__SoftwareCiClient<$Result.GetResult<Prisma.$SoftwareCiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SoftwareCi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareCiFindFirstOrThrowArgs} args - Arguments to find a SoftwareCi
     * @example
     * // Get one SoftwareCi
     * const softwareCi = await prisma.softwareCi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SoftwareCiFindFirstOrThrowArgs>(args?: SelectSubset<T, SoftwareCiFindFirstOrThrowArgs<ExtArgs>>): Prisma__SoftwareCiClient<$Result.GetResult<Prisma.$SoftwareCiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SoftwareCis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareCiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SoftwareCis
     * const softwareCis = await prisma.softwareCi.findMany()
     * 
     * // Get first 10 SoftwareCis
     * const softwareCis = await prisma.softwareCi.findMany({ take: 10 })
     * 
     * // Only select the `ciId`
     * const softwareCiWithCiIdOnly = await prisma.softwareCi.findMany({ select: { ciId: true } })
     * 
     */
    findMany<T extends SoftwareCiFindManyArgs>(args?: SelectSubset<T, SoftwareCiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwareCiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SoftwareCi.
     * @param {SoftwareCiCreateArgs} args - Arguments to create a SoftwareCi.
     * @example
     * // Create one SoftwareCi
     * const SoftwareCi = await prisma.softwareCi.create({
     *   data: {
     *     // ... data to create a SoftwareCi
     *   }
     * })
     * 
     */
    create<T extends SoftwareCiCreateArgs>(args: SelectSubset<T, SoftwareCiCreateArgs<ExtArgs>>): Prisma__SoftwareCiClient<$Result.GetResult<Prisma.$SoftwareCiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SoftwareCis.
     * @param {SoftwareCiCreateManyArgs} args - Arguments to create many SoftwareCis.
     * @example
     * // Create many SoftwareCis
     * const softwareCi = await prisma.softwareCi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SoftwareCiCreateManyArgs>(args?: SelectSubset<T, SoftwareCiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SoftwareCis and returns the data saved in the database.
     * @param {SoftwareCiCreateManyAndReturnArgs} args - Arguments to create many SoftwareCis.
     * @example
     * // Create many SoftwareCis
     * const softwareCi = await prisma.softwareCi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SoftwareCis and only return the `ciId`
     * const softwareCiWithCiIdOnly = await prisma.softwareCi.createManyAndReturn({
     *   select: { ciId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SoftwareCiCreateManyAndReturnArgs>(args?: SelectSubset<T, SoftwareCiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwareCiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SoftwareCi.
     * @param {SoftwareCiDeleteArgs} args - Arguments to delete one SoftwareCi.
     * @example
     * // Delete one SoftwareCi
     * const SoftwareCi = await prisma.softwareCi.delete({
     *   where: {
     *     // ... filter to delete one SoftwareCi
     *   }
     * })
     * 
     */
    delete<T extends SoftwareCiDeleteArgs>(args: SelectSubset<T, SoftwareCiDeleteArgs<ExtArgs>>): Prisma__SoftwareCiClient<$Result.GetResult<Prisma.$SoftwareCiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SoftwareCi.
     * @param {SoftwareCiUpdateArgs} args - Arguments to update one SoftwareCi.
     * @example
     * // Update one SoftwareCi
     * const softwareCi = await prisma.softwareCi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SoftwareCiUpdateArgs>(args: SelectSubset<T, SoftwareCiUpdateArgs<ExtArgs>>): Prisma__SoftwareCiClient<$Result.GetResult<Prisma.$SoftwareCiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SoftwareCis.
     * @param {SoftwareCiDeleteManyArgs} args - Arguments to filter SoftwareCis to delete.
     * @example
     * // Delete a few SoftwareCis
     * const { count } = await prisma.softwareCi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SoftwareCiDeleteManyArgs>(args?: SelectSubset<T, SoftwareCiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SoftwareCis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareCiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SoftwareCis
     * const softwareCi = await prisma.softwareCi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SoftwareCiUpdateManyArgs>(args: SelectSubset<T, SoftwareCiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SoftwareCis and returns the data updated in the database.
     * @param {SoftwareCiUpdateManyAndReturnArgs} args - Arguments to update many SoftwareCis.
     * @example
     * // Update many SoftwareCis
     * const softwareCi = await prisma.softwareCi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SoftwareCis and only return the `ciId`
     * const softwareCiWithCiIdOnly = await prisma.softwareCi.updateManyAndReturn({
     *   select: { ciId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SoftwareCiUpdateManyAndReturnArgs>(args: SelectSubset<T, SoftwareCiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SoftwareCiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SoftwareCi.
     * @param {SoftwareCiUpsertArgs} args - Arguments to update or create a SoftwareCi.
     * @example
     * // Update or create a SoftwareCi
     * const softwareCi = await prisma.softwareCi.upsert({
     *   create: {
     *     // ... data to create a SoftwareCi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SoftwareCi we want to update
     *   }
     * })
     */
    upsert<T extends SoftwareCiUpsertArgs>(args: SelectSubset<T, SoftwareCiUpsertArgs<ExtArgs>>): Prisma__SoftwareCiClient<$Result.GetResult<Prisma.$SoftwareCiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SoftwareCis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareCiCountArgs} args - Arguments to filter SoftwareCis to count.
     * @example
     * // Count the number of SoftwareCis
     * const count = await prisma.softwareCi.count({
     *   where: {
     *     // ... the filter for the SoftwareCis we want to count
     *   }
     * })
    **/
    count<T extends SoftwareCiCountArgs>(
      args?: Subset<T, SoftwareCiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SoftwareCiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SoftwareCi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareCiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SoftwareCiAggregateArgs>(args: Subset<T, SoftwareCiAggregateArgs>): Prisma.PrismaPromise<GetSoftwareCiAggregateType<T>>

    /**
     * Group by SoftwareCi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SoftwareCiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SoftwareCiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SoftwareCiGroupByArgs['orderBy'] }
        : { orderBy?: SoftwareCiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SoftwareCiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSoftwareCiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SoftwareCi model
   */
  readonly fields: SoftwareCiFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for SoftwareCi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SoftwareCiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    configurationItem<T extends ConfigurationItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItemDefaultArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SoftwareCi model
   */
  interface SoftwareCiFieldRefs {
    readonly ciId: FieldRef<"SoftwareCi", 'String'>
    readonly version: FieldRef<"SoftwareCi", 'String'>
    readonly edition: FieldRef<"SoftwareCi", 'String'>
    readonly architecture: FieldRef<"SoftwareCi", 'String'>
    readonly licenseType: FieldRef<"SoftwareCi", 'String'>
    readonly licenseKey: FieldRef<"SoftwareCi", 'String'>
    readonly licenseCount: FieldRef<"SoftwareCi", 'Int'>
    readonly installPath: FieldRef<"SoftwareCi", 'String'>
    readonly installDate: FieldRef<"SoftwareCi", 'DateTime'>
    readonly installedBy: FieldRef<"SoftwareCi", 'String'>
    readonly isLatestVersion: FieldRef<"SoftwareCi", 'Boolean'>
    readonly patchLevel: FieldRef<"SoftwareCi", 'String'>
    readonly supportEndDate: FieldRef<"SoftwareCi", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SoftwareCi findUnique
   */
  export type SoftwareCiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareCi
     */
    select?: SoftwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareCi
     */
    omit?: SoftwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareCiInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareCi to fetch.
     */
    where: SoftwareCiWhereUniqueInput
  }

  /**
   * SoftwareCi findUniqueOrThrow
   */
  export type SoftwareCiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareCi
     */
    select?: SoftwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareCi
     */
    omit?: SoftwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareCiInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareCi to fetch.
     */
    where: SoftwareCiWhereUniqueInput
  }

  /**
   * SoftwareCi findFirst
   */
  export type SoftwareCiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareCi
     */
    select?: SoftwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareCi
     */
    omit?: SoftwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareCiInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareCi to fetch.
     */
    where?: SoftwareCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SoftwareCis to fetch.
     */
    orderBy?: SoftwareCiOrderByWithRelationInput | SoftwareCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SoftwareCis.
     */
    cursor?: SoftwareCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SoftwareCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SoftwareCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SoftwareCis.
     */
    distinct?: SoftwareCiScalarFieldEnum | SoftwareCiScalarFieldEnum[]
  }

  /**
   * SoftwareCi findFirstOrThrow
   */
  export type SoftwareCiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareCi
     */
    select?: SoftwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareCi
     */
    omit?: SoftwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareCiInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareCi to fetch.
     */
    where?: SoftwareCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SoftwareCis to fetch.
     */
    orderBy?: SoftwareCiOrderByWithRelationInput | SoftwareCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SoftwareCis.
     */
    cursor?: SoftwareCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SoftwareCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SoftwareCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SoftwareCis.
     */
    distinct?: SoftwareCiScalarFieldEnum | SoftwareCiScalarFieldEnum[]
  }

  /**
   * SoftwareCi findMany
   */
  export type SoftwareCiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareCi
     */
    select?: SoftwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareCi
     */
    omit?: SoftwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareCiInclude<ExtArgs> | null
    /**
     * Filter, which SoftwareCis to fetch.
     */
    where?: SoftwareCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SoftwareCis to fetch.
     */
    orderBy?: SoftwareCiOrderByWithRelationInput | SoftwareCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SoftwareCis.
     */
    cursor?: SoftwareCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SoftwareCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SoftwareCis.
     */
    skip?: number
    distinct?: SoftwareCiScalarFieldEnum | SoftwareCiScalarFieldEnum[]
  }

  /**
   * SoftwareCi create
   */
  export type SoftwareCiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareCi
     */
    select?: SoftwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareCi
     */
    omit?: SoftwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareCiInclude<ExtArgs> | null
    /**
     * The data needed to create a SoftwareCi.
     */
    data: XOR<SoftwareCiCreateInput, SoftwareCiUncheckedCreateInput>
  }

  /**
   * SoftwareCi createMany
   */
  export type SoftwareCiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SoftwareCis.
     */
    data: SoftwareCiCreateManyInput | SoftwareCiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SoftwareCi createManyAndReturn
   */
  export type SoftwareCiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareCi
     */
    select?: SoftwareCiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareCi
     */
    omit?: SoftwareCiOmit<ExtArgs> | null
    /**
     * The data used to create many SoftwareCis.
     */
    data: SoftwareCiCreateManyInput | SoftwareCiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareCiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SoftwareCi update
   */
  export type SoftwareCiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareCi
     */
    select?: SoftwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareCi
     */
    omit?: SoftwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareCiInclude<ExtArgs> | null
    /**
     * The data needed to update a SoftwareCi.
     */
    data: XOR<SoftwareCiUpdateInput, SoftwareCiUncheckedUpdateInput>
    /**
     * Choose, which SoftwareCi to update.
     */
    where: SoftwareCiWhereUniqueInput
  }

  /**
   * SoftwareCi updateMany
   */
  export type SoftwareCiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SoftwareCis.
     */
    data: XOR<SoftwareCiUpdateManyMutationInput, SoftwareCiUncheckedUpdateManyInput>
    /**
     * Filter which SoftwareCis to update
     */
    where?: SoftwareCiWhereInput
    /**
     * Limit how many SoftwareCis to update.
     */
    limit?: number
  }

  /**
   * SoftwareCi updateManyAndReturn
   */
  export type SoftwareCiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareCi
     */
    select?: SoftwareCiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareCi
     */
    omit?: SoftwareCiOmit<ExtArgs> | null
    /**
     * The data used to update SoftwareCis.
     */
    data: XOR<SoftwareCiUpdateManyMutationInput, SoftwareCiUncheckedUpdateManyInput>
    /**
     * Filter which SoftwareCis to update
     */
    where?: SoftwareCiWhereInput
    /**
     * Limit how many SoftwareCis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareCiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SoftwareCi upsert
   */
  export type SoftwareCiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareCi
     */
    select?: SoftwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareCi
     */
    omit?: SoftwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareCiInclude<ExtArgs> | null
    /**
     * The filter to search for the SoftwareCi to update in case it exists.
     */
    where: SoftwareCiWhereUniqueInput
    /**
     * In case the SoftwareCi found by the `where` argument doesn't exist, create a new SoftwareCi with this data.
     */
    create: XOR<SoftwareCiCreateInput, SoftwareCiUncheckedCreateInput>
    /**
     * In case the SoftwareCi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SoftwareCiUpdateInput, SoftwareCiUncheckedUpdateInput>
  }

  /**
   * SoftwareCi delete
   */
  export type SoftwareCiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareCi
     */
    select?: SoftwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareCi
     */
    omit?: SoftwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareCiInclude<ExtArgs> | null
    /**
     * Filter which SoftwareCi to delete.
     */
    where: SoftwareCiWhereUniqueInput
  }

  /**
   * SoftwareCi deleteMany
   */
  export type SoftwareCiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SoftwareCis to delete
     */
    where?: SoftwareCiWhereInput
    /**
     * Limit how many SoftwareCis to delete.
     */
    limit?: number
  }

  /**
   * SoftwareCi without action
   */
  export type SoftwareCiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SoftwareCi
     */
    select?: SoftwareCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SoftwareCi
     */
    omit?: SoftwareCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SoftwareCiInclude<ExtArgs> | null
  }


  /**
   * Model ApplicationCi
   */

  export type AggregateApplicationCi = {
    _count: ApplicationCiCountAggregateOutputType | null
    _avg: ApplicationCiAvgAggregateOutputType | null
    _sum: ApplicationCiSumAggregateOutputType | null
    _min: ApplicationCiMinAggregateOutputType | null
    _max: ApplicationCiMaxAggregateOutputType | null
  }

  export type ApplicationCiAvgAggregateOutputType = {
    applicationPort: number | null
    userCount: number | null
    availabilityTarget: Decimal | null
  }

  export type ApplicationCiSumAggregateOutputType = {
    applicationPort: number | null
    userCount: number | null
    availabilityTarget: Decimal | null
  }

  export type ApplicationCiMinAggregateOutputType = {
    ciId: string | null
    applicationUrl: string | null
    applicationPort: number | null
    applicationProtocol: string | null
    businessFunction: string | null
    userCount: number | null
    dataClassification: string | null
    programmingLanguage: string | null
    framework: string | null
    databaseType: string | null
    slaTarget: string | null
    availabilityTarget: Decimal | null
  }

  export type ApplicationCiMaxAggregateOutputType = {
    ciId: string | null
    applicationUrl: string | null
    applicationPort: number | null
    applicationProtocol: string | null
    businessFunction: string | null
    userCount: number | null
    dataClassification: string | null
    programmingLanguage: string | null
    framework: string | null
    databaseType: string | null
    slaTarget: string | null
    availabilityTarget: Decimal | null
  }

  export type ApplicationCiCountAggregateOutputType = {
    ciId: number
    applicationUrl: number
    applicationPort: number
    applicationProtocol: number
    businessFunction: number
    userCount: number
    dataClassification: number
    programmingLanguage: number
    framework: number
    databaseType: number
    slaTarget: number
    availabilityTarget: number
    _all: number
  }


  export type ApplicationCiAvgAggregateInputType = {
    applicationPort?: true
    userCount?: true
    availabilityTarget?: true
  }

  export type ApplicationCiSumAggregateInputType = {
    applicationPort?: true
    userCount?: true
    availabilityTarget?: true
  }

  export type ApplicationCiMinAggregateInputType = {
    ciId?: true
    applicationUrl?: true
    applicationPort?: true
    applicationProtocol?: true
    businessFunction?: true
    userCount?: true
    dataClassification?: true
    programmingLanguage?: true
    framework?: true
    databaseType?: true
    slaTarget?: true
    availabilityTarget?: true
  }

  export type ApplicationCiMaxAggregateInputType = {
    ciId?: true
    applicationUrl?: true
    applicationPort?: true
    applicationProtocol?: true
    businessFunction?: true
    userCount?: true
    dataClassification?: true
    programmingLanguage?: true
    framework?: true
    databaseType?: true
    slaTarget?: true
    availabilityTarget?: true
  }

  export type ApplicationCiCountAggregateInputType = {
    ciId?: true
    applicationUrl?: true
    applicationPort?: true
    applicationProtocol?: true
    businessFunction?: true
    userCount?: true
    dataClassification?: true
    programmingLanguage?: true
    framework?: true
    databaseType?: true
    slaTarget?: true
    availabilityTarget?: true
    _all?: true
  }

  export type ApplicationCiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApplicationCi to aggregate.
     */
    where?: ApplicationCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationCis to fetch.
     */
    orderBy?: ApplicationCiOrderByWithRelationInput | ApplicationCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ApplicationCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ApplicationCis
    **/
    _count?: true | ApplicationCiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ApplicationCiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ApplicationCiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ApplicationCiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ApplicationCiMaxAggregateInputType
  }

  export type GetApplicationCiAggregateType<T extends ApplicationCiAggregateArgs> = {
        [P in keyof T & keyof AggregateApplicationCi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApplicationCi[P]>
      : GetScalarType<T[P], AggregateApplicationCi[P]>
  }




  export type ApplicationCiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationCiWhereInput
    orderBy?: ApplicationCiOrderByWithAggregationInput | ApplicationCiOrderByWithAggregationInput[]
    by: ApplicationCiScalarFieldEnum[] | ApplicationCiScalarFieldEnum
    having?: ApplicationCiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ApplicationCiCountAggregateInputType | true
    _avg?: ApplicationCiAvgAggregateInputType
    _sum?: ApplicationCiSumAggregateInputType
    _min?: ApplicationCiMinAggregateInputType
    _max?: ApplicationCiMaxAggregateInputType
  }

  export type ApplicationCiGroupByOutputType = {
    ciId: string
    applicationUrl: string | null
    applicationPort: number | null
    applicationProtocol: string | null
    businessFunction: string | null
    userCount: number | null
    dataClassification: string | null
    programmingLanguage: string | null
    framework: string | null
    databaseType: string | null
    slaTarget: string | null
    availabilityTarget: Decimal | null
    _count: ApplicationCiCountAggregateOutputType | null
    _avg: ApplicationCiAvgAggregateOutputType | null
    _sum: ApplicationCiSumAggregateOutputType | null
    _min: ApplicationCiMinAggregateOutputType | null
    _max: ApplicationCiMaxAggregateOutputType | null
  }

  type GetApplicationCiGroupByPayload<T extends ApplicationCiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ApplicationCiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ApplicationCiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ApplicationCiGroupByOutputType[P]>
            : GetScalarType<T[P], ApplicationCiGroupByOutputType[P]>
        }
      >
    >


  export type ApplicationCiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    applicationUrl?: boolean
    applicationPort?: boolean
    applicationProtocol?: boolean
    businessFunction?: boolean
    userCount?: boolean
    dataClassification?: boolean
    programmingLanguage?: boolean
    framework?: boolean
    databaseType?: boolean
    slaTarget?: boolean
    availabilityTarget?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["applicationCi"]>

  export type ApplicationCiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    applicationUrl?: boolean
    applicationPort?: boolean
    applicationProtocol?: boolean
    businessFunction?: boolean
    userCount?: boolean
    dataClassification?: boolean
    programmingLanguage?: boolean
    framework?: boolean
    databaseType?: boolean
    slaTarget?: boolean
    availabilityTarget?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["applicationCi"]>

  export type ApplicationCiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    applicationUrl?: boolean
    applicationPort?: boolean
    applicationProtocol?: boolean
    businessFunction?: boolean
    userCount?: boolean
    dataClassification?: boolean
    programmingLanguage?: boolean
    framework?: boolean
    databaseType?: boolean
    slaTarget?: boolean
    availabilityTarget?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["applicationCi"]>

  export type ApplicationCiSelectScalar = {
    ciId?: boolean
    applicationUrl?: boolean
    applicationPort?: boolean
    applicationProtocol?: boolean
    businessFunction?: boolean
    userCount?: boolean
    dataClassification?: boolean
    programmingLanguage?: boolean
    framework?: boolean
    databaseType?: boolean
    slaTarget?: boolean
    availabilityTarget?: boolean
  }

  export type ApplicationCiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ciId" | "applicationUrl" | "applicationPort" | "applicationProtocol" | "businessFunction" | "userCount" | "dataClassification" | "programmingLanguage" | "framework" | "databaseType" | "slaTarget" | "availabilityTarget", ExtArgs["result"]["applicationCi"]>
  export type ApplicationCiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type ApplicationCiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type ApplicationCiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }

  export type $ApplicationCiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ApplicationCi"
    objects: {
      configurationItem: Prisma.$ConfigurationItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      ciId: string
      applicationUrl: string | null
      applicationPort: number | null
      applicationProtocol: string | null
      businessFunction: string | null
      userCount: number | null
      dataClassification: string | null
      programmingLanguage: string | null
      framework: string | null
      databaseType: string | null
      slaTarget: string | null
      availabilityTarget: Prisma.Decimal | null
    }, ExtArgs["result"]["applicationCi"]>
    composites: {}
  }

  type ApplicationCiGetPayload<S extends boolean | null | undefined | ApplicationCiDefaultArgs> = $Result.GetResult<Prisma.$ApplicationCiPayload, S>

  type ApplicationCiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ApplicationCiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ApplicationCiCountAggregateInputType | true
    }

  export interface ApplicationCiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ApplicationCi'], meta: { name: 'ApplicationCi' } }
    /**
     * Find zero or one ApplicationCi that matches the filter.
     * @param {ApplicationCiFindUniqueArgs} args - Arguments to find a ApplicationCi
     * @example
     * // Get one ApplicationCi
     * const applicationCi = await prisma.applicationCi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ApplicationCiFindUniqueArgs>(args: SelectSubset<T, ApplicationCiFindUniqueArgs<ExtArgs>>): Prisma__ApplicationCiClient<$Result.GetResult<Prisma.$ApplicationCiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ApplicationCi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ApplicationCiFindUniqueOrThrowArgs} args - Arguments to find a ApplicationCi
     * @example
     * // Get one ApplicationCi
     * const applicationCi = await prisma.applicationCi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ApplicationCiFindUniqueOrThrowArgs>(args: SelectSubset<T, ApplicationCiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ApplicationCiClient<$Result.GetResult<Prisma.$ApplicationCiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ApplicationCi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationCiFindFirstArgs} args - Arguments to find a ApplicationCi
     * @example
     * // Get one ApplicationCi
     * const applicationCi = await prisma.applicationCi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ApplicationCiFindFirstArgs>(args?: SelectSubset<T, ApplicationCiFindFirstArgs<ExtArgs>>): Prisma__ApplicationCiClient<$Result.GetResult<Prisma.$ApplicationCiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ApplicationCi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationCiFindFirstOrThrowArgs} args - Arguments to find a ApplicationCi
     * @example
     * // Get one ApplicationCi
     * const applicationCi = await prisma.applicationCi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ApplicationCiFindFirstOrThrowArgs>(args?: SelectSubset<T, ApplicationCiFindFirstOrThrowArgs<ExtArgs>>): Prisma__ApplicationCiClient<$Result.GetResult<Prisma.$ApplicationCiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ApplicationCis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationCiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ApplicationCis
     * const applicationCis = await prisma.applicationCi.findMany()
     * 
     * // Get first 10 ApplicationCis
     * const applicationCis = await prisma.applicationCi.findMany({ take: 10 })
     * 
     * // Only select the `ciId`
     * const applicationCiWithCiIdOnly = await prisma.applicationCi.findMany({ select: { ciId: true } })
     * 
     */
    findMany<T extends ApplicationCiFindManyArgs>(args?: SelectSubset<T, ApplicationCiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationCiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ApplicationCi.
     * @param {ApplicationCiCreateArgs} args - Arguments to create a ApplicationCi.
     * @example
     * // Create one ApplicationCi
     * const ApplicationCi = await prisma.applicationCi.create({
     *   data: {
     *     // ... data to create a ApplicationCi
     *   }
     * })
     * 
     */
    create<T extends ApplicationCiCreateArgs>(args: SelectSubset<T, ApplicationCiCreateArgs<ExtArgs>>): Prisma__ApplicationCiClient<$Result.GetResult<Prisma.$ApplicationCiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ApplicationCis.
     * @param {ApplicationCiCreateManyArgs} args - Arguments to create many ApplicationCis.
     * @example
     * // Create many ApplicationCis
     * const applicationCi = await prisma.applicationCi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ApplicationCiCreateManyArgs>(args?: SelectSubset<T, ApplicationCiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ApplicationCis and returns the data saved in the database.
     * @param {ApplicationCiCreateManyAndReturnArgs} args - Arguments to create many ApplicationCis.
     * @example
     * // Create many ApplicationCis
     * const applicationCi = await prisma.applicationCi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ApplicationCis and only return the `ciId`
     * const applicationCiWithCiIdOnly = await prisma.applicationCi.createManyAndReturn({
     *   select: { ciId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ApplicationCiCreateManyAndReturnArgs>(args?: SelectSubset<T, ApplicationCiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationCiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ApplicationCi.
     * @param {ApplicationCiDeleteArgs} args - Arguments to delete one ApplicationCi.
     * @example
     * // Delete one ApplicationCi
     * const ApplicationCi = await prisma.applicationCi.delete({
     *   where: {
     *     // ... filter to delete one ApplicationCi
     *   }
     * })
     * 
     */
    delete<T extends ApplicationCiDeleteArgs>(args: SelectSubset<T, ApplicationCiDeleteArgs<ExtArgs>>): Prisma__ApplicationCiClient<$Result.GetResult<Prisma.$ApplicationCiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ApplicationCi.
     * @param {ApplicationCiUpdateArgs} args - Arguments to update one ApplicationCi.
     * @example
     * // Update one ApplicationCi
     * const applicationCi = await prisma.applicationCi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ApplicationCiUpdateArgs>(args: SelectSubset<T, ApplicationCiUpdateArgs<ExtArgs>>): Prisma__ApplicationCiClient<$Result.GetResult<Prisma.$ApplicationCiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ApplicationCis.
     * @param {ApplicationCiDeleteManyArgs} args - Arguments to filter ApplicationCis to delete.
     * @example
     * // Delete a few ApplicationCis
     * const { count } = await prisma.applicationCi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ApplicationCiDeleteManyArgs>(args?: SelectSubset<T, ApplicationCiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ApplicationCis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationCiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ApplicationCis
     * const applicationCi = await prisma.applicationCi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ApplicationCiUpdateManyArgs>(args: SelectSubset<T, ApplicationCiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ApplicationCis and returns the data updated in the database.
     * @param {ApplicationCiUpdateManyAndReturnArgs} args - Arguments to update many ApplicationCis.
     * @example
     * // Update many ApplicationCis
     * const applicationCi = await prisma.applicationCi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ApplicationCis and only return the `ciId`
     * const applicationCiWithCiIdOnly = await prisma.applicationCi.updateManyAndReturn({
     *   select: { ciId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ApplicationCiUpdateManyAndReturnArgs>(args: SelectSubset<T, ApplicationCiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationCiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ApplicationCi.
     * @param {ApplicationCiUpsertArgs} args - Arguments to update or create a ApplicationCi.
     * @example
     * // Update or create a ApplicationCi
     * const applicationCi = await prisma.applicationCi.upsert({
     *   create: {
     *     // ... data to create a ApplicationCi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ApplicationCi we want to update
     *   }
     * })
     */
    upsert<T extends ApplicationCiUpsertArgs>(args: SelectSubset<T, ApplicationCiUpsertArgs<ExtArgs>>): Prisma__ApplicationCiClient<$Result.GetResult<Prisma.$ApplicationCiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ApplicationCis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationCiCountArgs} args - Arguments to filter ApplicationCis to count.
     * @example
     * // Count the number of ApplicationCis
     * const count = await prisma.applicationCi.count({
     *   where: {
     *     // ... the filter for the ApplicationCis we want to count
     *   }
     * })
    **/
    count<T extends ApplicationCiCountArgs>(
      args?: Subset<T, ApplicationCiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ApplicationCiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ApplicationCi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationCiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ApplicationCiAggregateArgs>(args: Subset<T, ApplicationCiAggregateArgs>): Prisma.PrismaPromise<GetApplicationCiAggregateType<T>>

    /**
     * Group by ApplicationCi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationCiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ApplicationCiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ApplicationCiGroupByArgs['orderBy'] }
        : { orderBy?: ApplicationCiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ApplicationCiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApplicationCiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ApplicationCi model
   */
  readonly fields: ApplicationCiFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for ApplicationCi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ApplicationCiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    configurationItem<T extends ConfigurationItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItemDefaultArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ApplicationCi model
   */
  interface ApplicationCiFieldRefs {
    readonly ciId: FieldRef<"ApplicationCi", 'String'>
    readonly applicationUrl: FieldRef<"ApplicationCi", 'String'>
    readonly applicationPort: FieldRef<"ApplicationCi", 'Int'>
    readonly applicationProtocol: FieldRef<"ApplicationCi", 'String'>
    readonly businessFunction: FieldRef<"ApplicationCi", 'String'>
    readonly userCount: FieldRef<"ApplicationCi", 'Int'>
    readonly dataClassification: FieldRef<"ApplicationCi", 'String'>
    readonly programmingLanguage: FieldRef<"ApplicationCi", 'String'>
    readonly framework: FieldRef<"ApplicationCi", 'String'>
    readonly databaseType: FieldRef<"ApplicationCi", 'String'>
    readonly slaTarget: FieldRef<"ApplicationCi", 'String'>
    readonly availabilityTarget: FieldRef<"ApplicationCi", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * ApplicationCi findUnique
   */
  export type ApplicationCiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationCi
     */
    select?: ApplicationCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationCi
     */
    omit?: ApplicationCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationCiInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationCi to fetch.
     */
    where: ApplicationCiWhereUniqueInput
  }

  /**
   * ApplicationCi findUniqueOrThrow
   */
  export type ApplicationCiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationCi
     */
    select?: ApplicationCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationCi
     */
    omit?: ApplicationCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationCiInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationCi to fetch.
     */
    where: ApplicationCiWhereUniqueInput
  }

  /**
   * ApplicationCi findFirst
   */
  export type ApplicationCiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationCi
     */
    select?: ApplicationCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationCi
     */
    omit?: ApplicationCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationCiInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationCi to fetch.
     */
    where?: ApplicationCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationCis to fetch.
     */
    orderBy?: ApplicationCiOrderByWithRelationInput | ApplicationCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApplicationCis.
     */
    cursor?: ApplicationCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApplicationCis.
     */
    distinct?: ApplicationCiScalarFieldEnum | ApplicationCiScalarFieldEnum[]
  }

  /**
   * ApplicationCi findFirstOrThrow
   */
  export type ApplicationCiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationCi
     */
    select?: ApplicationCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationCi
     */
    omit?: ApplicationCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationCiInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationCi to fetch.
     */
    where?: ApplicationCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationCis to fetch.
     */
    orderBy?: ApplicationCiOrderByWithRelationInput | ApplicationCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApplicationCis.
     */
    cursor?: ApplicationCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApplicationCis.
     */
    distinct?: ApplicationCiScalarFieldEnum | ApplicationCiScalarFieldEnum[]
  }

  /**
   * ApplicationCi findMany
   */
  export type ApplicationCiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationCi
     */
    select?: ApplicationCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationCi
     */
    omit?: ApplicationCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationCiInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationCis to fetch.
     */
    where?: ApplicationCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationCis to fetch.
     */
    orderBy?: ApplicationCiOrderByWithRelationInput | ApplicationCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ApplicationCis.
     */
    cursor?: ApplicationCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationCis.
     */
    skip?: number
    distinct?: ApplicationCiScalarFieldEnum | ApplicationCiScalarFieldEnum[]
  }

  /**
   * ApplicationCi create
   */
  export type ApplicationCiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationCi
     */
    select?: ApplicationCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationCi
     */
    omit?: ApplicationCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationCiInclude<ExtArgs> | null
    /**
     * The data needed to create a ApplicationCi.
     */
    data: XOR<ApplicationCiCreateInput, ApplicationCiUncheckedCreateInput>
  }

  /**
   * ApplicationCi createMany
   */
  export type ApplicationCiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ApplicationCis.
     */
    data: ApplicationCiCreateManyInput | ApplicationCiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ApplicationCi createManyAndReturn
   */
  export type ApplicationCiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationCi
     */
    select?: ApplicationCiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationCi
     */
    omit?: ApplicationCiOmit<ExtArgs> | null
    /**
     * The data used to create many ApplicationCis.
     */
    data: ApplicationCiCreateManyInput | ApplicationCiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationCiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ApplicationCi update
   */
  export type ApplicationCiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationCi
     */
    select?: ApplicationCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationCi
     */
    omit?: ApplicationCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationCiInclude<ExtArgs> | null
    /**
     * The data needed to update a ApplicationCi.
     */
    data: XOR<ApplicationCiUpdateInput, ApplicationCiUncheckedUpdateInput>
    /**
     * Choose, which ApplicationCi to update.
     */
    where: ApplicationCiWhereUniqueInput
  }

  /**
   * ApplicationCi updateMany
   */
  export type ApplicationCiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ApplicationCis.
     */
    data: XOR<ApplicationCiUpdateManyMutationInput, ApplicationCiUncheckedUpdateManyInput>
    /**
     * Filter which ApplicationCis to update
     */
    where?: ApplicationCiWhereInput
    /**
     * Limit how many ApplicationCis to update.
     */
    limit?: number
  }

  /**
   * ApplicationCi updateManyAndReturn
   */
  export type ApplicationCiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationCi
     */
    select?: ApplicationCiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationCi
     */
    omit?: ApplicationCiOmit<ExtArgs> | null
    /**
     * The data used to update ApplicationCis.
     */
    data: XOR<ApplicationCiUpdateManyMutationInput, ApplicationCiUncheckedUpdateManyInput>
    /**
     * Filter which ApplicationCis to update
     */
    where?: ApplicationCiWhereInput
    /**
     * Limit how many ApplicationCis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationCiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ApplicationCi upsert
   */
  export type ApplicationCiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationCi
     */
    select?: ApplicationCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationCi
     */
    omit?: ApplicationCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationCiInclude<ExtArgs> | null
    /**
     * The filter to search for the ApplicationCi to update in case it exists.
     */
    where: ApplicationCiWhereUniqueInput
    /**
     * In case the ApplicationCi found by the `where` argument doesn't exist, create a new ApplicationCi with this data.
     */
    create: XOR<ApplicationCiCreateInput, ApplicationCiUncheckedCreateInput>
    /**
     * In case the ApplicationCi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ApplicationCiUpdateInput, ApplicationCiUncheckedUpdateInput>
  }

  /**
   * ApplicationCi delete
   */
  export type ApplicationCiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationCi
     */
    select?: ApplicationCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationCi
     */
    omit?: ApplicationCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationCiInclude<ExtArgs> | null
    /**
     * Filter which ApplicationCi to delete.
     */
    where: ApplicationCiWhereUniqueInput
  }

  /**
   * ApplicationCi deleteMany
   */
  export type ApplicationCiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApplicationCis to delete
     */
    where?: ApplicationCiWhereInput
    /**
     * Limit how many ApplicationCis to delete.
     */
    limit?: number
  }

  /**
   * ApplicationCi without action
   */
  export type ApplicationCiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationCi
     */
    select?: ApplicationCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationCi
     */
    omit?: ApplicationCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationCiInclude<ExtArgs> | null
  }


  /**
   * Model NetworkCi
   */

  export type AggregateNetworkCi = {
    _count: NetworkCiCountAggregateOutputType | null
    _min: NetworkCiMinAggregateOutputType | null
    _max: NetworkCiMaxAggregateOutputType | null
  }

  export type NetworkCiMinAggregateOutputType = {
    ciId: string | null
    ipAddress: string | null
    subnetMask: string | null
    gateway: string | null
    vlanId: string | null
  }

  export type NetworkCiMaxAggregateOutputType = {
    ciId: string | null
    ipAddress: string | null
    subnetMask: string | null
    gateway: string | null
    vlanId: string | null
  }

  export type NetworkCiCountAggregateOutputType = {
    ciId: number
    ipAddress: number
    subnetMask: number
    gateway: number
    vlanId: number
    portConfiguration: number
    routingTable: number
    firewallRules: number
    _all: number
  }


  export type NetworkCiMinAggregateInputType = {
    ciId?: true
    ipAddress?: true
    subnetMask?: true
    gateway?: true
    vlanId?: true
  }

  export type NetworkCiMaxAggregateInputType = {
    ciId?: true
    ipAddress?: true
    subnetMask?: true
    gateway?: true
    vlanId?: true
  }

  export type NetworkCiCountAggregateInputType = {
    ciId?: true
    ipAddress?: true
    subnetMask?: true
    gateway?: true
    vlanId?: true
    portConfiguration?: true
    routingTable?: true
    firewallRules?: true
    _all?: true
  }

  export type NetworkCiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which NetworkCi to aggregate.
     */
    where?: NetworkCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NetworkCis to fetch.
     */
    orderBy?: NetworkCiOrderByWithRelationInput | NetworkCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NetworkCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NetworkCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NetworkCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned NetworkCis
    **/
    _count?: true | NetworkCiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NetworkCiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NetworkCiMaxAggregateInputType
  }

  export type GetNetworkCiAggregateType<T extends NetworkCiAggregateArgs> = {
        [P in keyof T & keyof AggregateNetworkCi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNetworkCi[P]>
      : GetScalarType<T[P], AggregateNetworkCi[P]>
  }




  export type NetworkCiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NetworkCiWhereInput
    orderBy?: NetworkCiOrderByWithAggregationInput | NetworkCiOrderByWithAggregationInput[]
    by: NetworkCiScalarFieldEnum[] | NetworkCiScalarFieldEnum
    having?: NetworkCiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NetworkCiCountAggregateInputType | true
    _min?: NetworkCiMinAggregateInputType
    _max?: NetworkCiMaxAggregateInputType
  }

  export type NetworkCiGroupByOutputType = {
    ciId: string
    ipAddress: string | null
    subnetMask: string | null
    gateway: string | null
    vlanId: string | null
    portConfiguration: JsonValue | null
    routingTable: JsonValue | null
    firewallRules: JsonValue | null
    _count: NetworkCiCountAggregateOutputType | null
    _min: NetworkCiMinAggregateOutputType | null
    _max: NetworkCiMaxAggregateOutputType | null
  }

  type GetNetworkCiGroupByPayload<T extends NetworkCiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NetworkCiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NetworkCiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NetworkCiGroupByOutputType[P]>
            : GetScalarType<T[P], NetworkCiGroupByOutputType[P]>
        }
      >
    >


  export type NetworkCiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    ipAddress?: boolean
    subnetMask?: boolean
    gateway?: boolean
    vlanId?: boolean
    portConfiguration?: boolean
    routingTable?: boolean
    firewallRules?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["networkCi"]>

  export type NetworkCiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    ipAddress?: boolean
    subnetMask?: boolean
    gateway?: boolean
    vlanId?: boolean
    portConfiguration?: boolean
    routingTable?: boolean
    firewallRules?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["networkCi"]>

  export type NetworkCiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    ipAddress?: boolean
    subnetMask?: boolean
    gateway?: boolean
    vlanId?: boolean
    portConfiguration?: boolean
    routingTable?: boolean
    firewallRules?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["networkCi"]>

  export type NetworkCiSelectScalar = {
    ciId?: boolean
    ipAddress?: boolean
    subnetMask?: boolean
    gateway?: boolean
    vlanId?: boolean
    portConfiguration?: boolean
    routingTable?: boolean
    firewallRules?: boolean
  }

  export type NetworkCiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ciId" | "ipAddress" | "subnetMask" | "gateway" | "vlanId" | "portConfiguration" | "routingTable" | "firewallRules", ExtArgs["result"]["networkCi"]>
  export type NetworkCiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type NetworkCiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type NetworkCiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }

  export type $NetworkCiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "NetworkCi"
    objects: {
      configurationItem: Prisma.$ConfigurationItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      ciId: string
      ipAddress: string | null
      subnetMask: string | null
      gateway: string | null
      vlanId: string | null
      portConfiguration: Prisma.JsonValue | null
      routingTable: Prisma.JsonValue | null
      firewallRules: Prisma.JsonValue | null
    }, ExtArgs["result"]["networkCi"]>
    composites: {}
  }

  type NetworkCiGetPayload<S extends boolean | null | undefined | NetworkCiDefaultArgs> = $Result.GetResult<Prisma.$NetworkCiPayload, S>

  type NetworkCiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NetworkCiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NetworkCiCountAggregateInputType | true
    }

  export interface NetworkCiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['NetworkCi'], meta: { name: 'NetworkCi' } }
    /**
     * Find zero or one NetworkCi that matches the filter.
     * @param {NetworkCiFindUniqueArgs} args - Arguments to find a NetworkCi
     * @example
     * // Get one NetworkCi
     * const networkCi = await prisma.networkCi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NetworkCiFindUniqueArgs>(args: SelectSubset<T, NetworkCiFindUniqueArgs<ExtArgs>>): Prisma__NetworkCiClient<$Result.GetResult<Prisma.$NetworkCiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one NetworkCi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NetworkCiFindUniqueOrThrowArgs} args - Arguments to find a NetworkCi
     * @example
     * // Get one NetworkCi
     * const networkCi = await prisma.networkCi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NetworkCiFindUniqueOrThrowArgs>(args: SelectSubset<T, NetworkCiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NetworkCiClient<$Result.GetResult<Prisma.$NetworkCiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first NetworkCi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NetworkCiFindFirstArgs} args - Arguments to find a NetworkCi
     * @example
     * // Get one NetworkCi
     * const networkCi = await prisma.networkCi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NetworkCiFindFirstArgs>(args?: SelectSubset<T, NetworkCiFindFirstArgs<ExtArgs>>): Prisma__NetworkCiClient<$Result.GetResult<Prisma.$NetworkCiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first NetworkCi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NetworkCiFindFirstOrThrowArgs} args - Arguments to find a NetworkCi
     * @example
     * // Get one NetworkCi
     * const networkCi = await prisma.networkCi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NetworkCiFindFirstOrThrowArgs>(args?: SelectSubset<T, NetworkCiFindFirstOrThrowArgs<ExtArgs>>): Prisma__NetworkCiClient<$Result.GetResult<Prisma.$NetworkCiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more NetworkCis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NetworkCiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all NetworkCis
     * const networkCis = await prisma.networkCi.findMany()
     * 
     * // Get first 10 NetworkCis
     * const networkCis = await prisma.networkCi.findMany({ take: 10 })
     * 
     * // Only select the `ciId`
     * const networkCiWithCiIdOnly = await prisma.networkCi.findMany({ select: { ciId: true } })
     * 
     */
    findMany<T extends NetworkCiFindManyArgs>(args?: SelectSubset<T, NetworkCiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NetworkCiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a NetworkCi.
     * @param {NetworkCiCreateArgs} args - Arguments to create a NetworkCi.
     * @example
     * // Create one NetworkCi
     * const NetworkCi = await prisma.networkCi.create({
     *   data: {
     *     // ... data to create a NetworkCi
     *   }
     * })
     * 
     */
    create<T extends NetworkCiCreateArgs>(args: SelectSubset<T, NetworkCiCreateArgs<ExtArgs>>): Prisma__NetworkCiClient<$Result.GetResult<Prisma.$NetworkCiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many NetworkCis.
     * @param {NetworkCiCreateManyArgs} args - Arguments to create many NetworkCis.
     * @example
     * // Create many NetworkCis
     * const networkCi = await prisma.networkCi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NetworkCiCreateManyArgs>(args?: SelectSubset<T, NetworkCiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many NetworkCis and returns the data saved in the database.
     * @param {NetworkCiCreateManyAndReturnArgs} args - Arguments to create many NetworkCis.
     * @example
     * // Create many NetworkCis
     * const networkCi = await prisma.networkCi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many NetworkCis and only return the `ciId`
     * const networkCiWithCiIdOnly = await prisma.networkCi.createManyAndReturn({
     *   select: { ciId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NetworkCiCreateManyAndReturnArgs>(args?: SelectSubset<T, NetworkCiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NetworkCiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a NetworkCi.
     * @param {NetworkCiDeleteArgs} args - Arguments to delete one NetworkCi.
     * @example
     * // Delete one NetworkCi
     * const NetworkCi = await prisma.networkCi.delete({
     *   where: {
     *     // ... filter to delete one NetworkCi
     *   }
     * })
     * 
     */
    delete<T extends NetworkCiDeleteArgs>(args: SelectSubset<T, NetworkCiDeleteArgs<ExtArgs>>): Prisma__NetworkCiClient<$Result.GetResult<Prisma.$NetworkCiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one NetworkCi.
     * @param {NetworkCiUpdateArgs} args - Arguments to update one NetworkCi.
     * @example
     * // Update one NetworkCi
     * const networkCi = await prisma.networkCi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NetworkCiUpdateArgs>(args: SelectSubset<T, NetworkCiUpdateArgs<ExtArgs>>): Prisma__NetworkCiClient<$Result.GetResult<Prisma.$NetworkCiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more NetworkCis.
     * @param {NetworkCiDeleteManyArgs} args - Arguments to filter NetworkCis to delete.
     * @example
     * // Delete a few NetworkCis
     * const { count } = await prisma.networkCi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NetworkCiDeleteManyArgs>(args?: SelectSubset<T, NetworkCiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more NetworkCis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NetworkCiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many NetworkCis
     * const networkCi = await prisma.networkCi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NetworkCiUpdateManyArgs>(args: SelectSubset<T, NetworkCiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more NetworkCis and returns the data updated in the database.
     * @param {NetworkCiUpdateManyAndReturnArgs} args - Arguments to update many NetworkCis.
     * @example
     * // Update many NetworkCis
     * const networkCi = await prisma.networkCi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more NetworkCis and only return the `ciId`
     * const networkCiWithCiIdOnly = await prisma.networkCi.updateManyAndReturn({
     *   select: { ciId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends NetworkCiUpdateManyAndReturnArgs>(args: SelectSubset<T, NetworkCiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NetworkCiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one NetworkCi.
     * @param {NetworkCiUpsertArgs} args - Arguments to update or create a NetworkCi.
     * @example
     * // Update or create a NetworkCi
     * const networkCi = await prisma.networkCi.upsert({
     *   create: {
     *     // ... data to create a NetworkCi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the NetworkCi we want to update
     *   }
     * })
     */
    upsert<T extends NetworkCiUpsertArgs>(args: SelectSubset<T, NetworkCiUpsertArgs<ExtArgs>>): Prisma__NetworkCiClient<$Result.GetResult<Prisma.$NetworkCiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of NetworkCis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NetworkCiCountArgs} args - Arguments to filter NetworkCis to count.
     * @example
     * // Count the number of NetworkCis
     * const count = await prisma.networkCi.count({
     *   where: {
     *     // ... the filter for the NetworkCis we want to count
     *   }
     * })
    **/
    count<T extends NetworkCiCountArgs>(
      args?: Subset<T, NetworkCiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NetworkCiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a NetworkCi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NetworkCiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NetworkCiAggregateArgs>(args: Subset<T, NetworkCiAggregateArgs>): Prisma.PrismaPromise<GetNetworkCiAggregateType<T>>

    /**
     * Group by NetworkCi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NetworkCiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NetworkCiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NetworkCiGroupByArgs['orderBy'] }
        : { orderBy?: NetworkCiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NetworkCiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNetworkCiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the NetworkCi model
   */
  readonly fields: NetworkCiFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for NetworkCi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NetworkCiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    configurationItem<T extends ConfigurationItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItemDefaultArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the NetworkCi model
   */
  interface NetworkCiFieldRefs {
    readonly ciId: FieldRef<"NetworkCi", 'String'>
    readonly ipAddress: FieldRef<"NetworkCi", 'String'>
    readonly subnetMask: FieldRef<"NetworkCi", 'String'>
    readonly gateway: FieldRef<"NetworkCi", 'String'>
    readonly vlanId: FieldRef<"NetworkCi", 'String'>
    readonly portConfiguration: FieldRef<"NetworkCi", 'Json'>
    readonly routingTable: FieldRef<"NetworkCi", 'Json'>
    readonly firewallRules: FieldRef<"NetworkCi", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * NetworkCi findUnique
   */
  export type NetworkCiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NetworkCi
     */
    select?: NetworkCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NetworkCi
     */
    omit?: NetworkCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NetworkCiInclude<ExtArgs> | null
    /**
     * Filter, which NetworkCi to fetch.
     */
    where: NetworkCiWhereUniqueInput
  }

  /**
   * NetworkCi findUniqueOrThrow
   */
  export type NetworkCiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NetworkCi
     */
    select?: NetworkCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NetworkCi
     */
    omit?: NetworkCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NetworkCiInclude<ExtArgs> | null
    /**
     * Filter, which NetworkCi to fetch.
     */
    where: NetworkCiWhereUniqueInput
  }

  /**
   * NetworkCi findFirst
   */
  export type NetworkCiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NetworkCi
     */
    select?: NetworkCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NetworkCi
     */
    omit?: NetworkCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NetworkCiInclude<ExtArgs> | null
    /**
     * Filter, which NetworkCi to fetch.
     */
    where?: NetworkCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NetworkCis to fetch.
     */
    orderBy?: NetworkCiOrderByWithRelationInput | NetworkCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for NetworkCis.
     */
    cursor?: NetworkCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NetworkCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NetworkCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of NetworkCis.
     */
    distinct?: NetworkCiScalarFieldEnum | NetworkCiScalarFieldEnum[]
  }

  /**
   * NetworkCi findFirstOrThrow
   */
  export type NetworkCiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NetworkCi
     */
    select?: NetworkCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NetworkCi
     */
    omit?: NetworkCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NetworkCiInclude<ExtArgs> | null
    /**
     * Filter, which NetworkCi to fetch.
     */
    where?: NetworkCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NetworkCis to fetch.
     */
    orderBy?: NetworkCiOrderByWithRelationInput | NetworkCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for NetworkCis.
     */
    cursor?: NetworkCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NetworkCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NetworkCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of NetworkCis.
     */
    distinct?: NetworkCiScalarFieldEnum | NetworkCiScalarFieldEnum[]
  }

  /**
   * NetworkCi findMany
   */
  export type NetworkCiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NetworkCi
     */
    select?: NetworkCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NetworkCi
     */
    omit?: NetworkCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NetworkCiInclude<ExtArgs> | null
    /**
     * Filter, which NetworkCis to fetch.
     */
    where?: NetworkCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of NetworkCis to fetch.
     */
    orderBy?: NetworkCiOrderByWithRelationInput | NetworkCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing NetworkCis.
     */
    cursor?: NetworkCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` NetworkCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` NetworkCis.
     */
    skip?: number
    distinct?: NetworkCiScalarFieldEnum | NetworkCiScalarFieldEnum[]
  }

  /**
   * NetworkCi create
   */
  export type NetworkCiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NetworkCi
     */
    select?: NetworkCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NetworkCi
     */
    omit?: NetworkCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NetworkCiInclude<ExtArgs> | null
    /**
     * The data needed to create a NetworkCi.
     */
    data: XOR<NetworkCiCreateInput, NetworkCiUncheckedCreateInput>
  }

  /**
   * NetworkCi createMany
   */
  export type NetworkCiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many NetworkCis.
     */
    data: NetworkCiCreateManyInput | NetworkCiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * NetworkCi createManyAndReturn
   */
  export type NetworkCiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NetworkCi
     */
    select?: NetworkCiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the NetworkCi
     */
    omit?: NetworkCiOmit<ExtArgs> | null
    /**
     * The data used to create many NetworkCis.
     */
    data: NetworkCiCreateManyInput | NetworkCiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NetworkCiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * NetworkCi update
   */
  export type NetworkCiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NetworkCi
     */
    select?: NetworkCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NetworkCi
     */
    omit?: NetworkCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NetworkCiInclude<ExtArgs> | null
    /**
     * The data needed to update a NetworkCi.
     */
    data: XOR<NetworkCiUpdateInput, NetworkCiUncheckedUpdateInput>
    /**
     * Choose, which NetworkCi to update.
     */
    where: NetworkCiWhereUniqueInput
  }

  /**
   * NetworkCi updateMany
   */
  export type NetworkCiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update NetworkCis.
     */
    data: XOR<NetworkCiUpdateManyMutationInput, NetworkCiUncheckedUpdateManyInput>
    /**
     * Filter which NetworkCis to update
     */
    where?: NetworkCiWhereInput
    /**
     * Limit how many NetworkCis to update.
     */
    limit?: number
  }

  /**
   * NetworkCi updateManyAndReturn
   */
  export type NetworkCiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NetworkCi
     */
    select?: NetworkCiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the NetworkCi
     */
    omit?: NetworkCiOmit<ExtArgs> | null
    /**
     * The data used to update NetworkCis.
     */
    data: XOR<NetworkCiUpdateManyMutationInput, NetworkCiUncheckedUpdateManyInput>
    /**
     * Filter which NetworkCis to update
     */
    where?: NetworkCiWhereInput
    /**
     * Limit how many NetworkCis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NetworkCiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * NetworkCi upsert
   */
  export type NetworkCiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NetworkCi
     */
    select?: NetworkCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NetworkCi
     */
    omit?: NetworkCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NetworkCiInclude<ExtArgs> | null
    /**
     * The filter to search for the NetworkCi to update in case it exists.
     */
    where: NetworkCiWhereUniqueInput
    /**
     * In case the NetworkCi found by the `where` argument doesn't exist, create a new NetworkCi with this data.
     */
    create: XOR<NetworkCiCreateInput, NetworkCiUncheckedCreateInput>
    /**
     * In case the NetworkCi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NetworkCiUpdateInput, NetworkCiUncheckedUpdateInput>
  }

  /**
   * NetworkCi delete
   */
  export type NetworkCiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NetworkCi
     */
    select?: NetworkCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NetworkCi
     */
    omit?: NetworkCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NetworkCiInclude<ExtArgs> | null
    /**
     * Filter which NetworkCi to delete.
     */
    where: NetworkCiWhereUniqueInput
  }

  /**
   * NetworkCi deleteMany
   */
  export type NetworkCiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which NetworkCis to delete
     */
    where?: NetworkCiWhereInput
    /**
     * Limit how many NetworkCis to delete.
     */
    limit?: number
  }

  /**
   * NetworkCi without action
   */
  export type NetworkCiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NetworkCi
     */
    select?: NetworkCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the NetworkCi
     */
    omit?: NetworkCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NetworkCiInclude<ExtArgs> | null
  }


  /**
   * Model ServiceCi
   */

  export type AggregateServiceCi = {
    _count: ServiceCiCountAggregateOutputType | null
    _avg: ServiceCiAvgAggregateOutputType | null
    _sum: ServiceCiSumAggregateOutputType | null
    _min: ServiceCiMinAggregateOutputType | null
    _max: ServiceCiMaxAggregateOutputType | null
  }

  export type ServiceCiAvgAggregateOutputType = {
    availabilityTarget: Decimal | null
  }

  export type ServiceCiSumAggregateOutputType = {
    availabilityTarget: Decimal | null
  }

  export type ServiceCiMinAggregateOutputType = {
    ciId: string | null
    serviceType: string | null
    serviceLevel: string | null
    businessOwner: string | null
    slaDocument: string | null
    availabilityTarget: Decimal | null
    performanceTarget: string | null
  }

  export type ServiceCiMaxAggregateOutputType = {
    ciId: string | null
    serviceType: string | null
    serviceLevel: string | null
    businessOwner: string | null
    slaDocument: string | null
    availabilityTarget: Decimal | null
    performanceTarget: string | null
  }

  export type ServiceCiCountAggregateOutputType = {
    ciId: number
    serviceType: number
    serviceLevel: number
    businessOwner: number
    slaDocument: number
    availabilityTarget: number
    performanceTarget: number
    serviceHours: number
    maintenanceWindow: number
    _all: number
  }


  export type ServiceCiAvgAggregateInputType = {
    availabilityTarget?: true
  }

  export type ServiceCiSumAggregateInputType = {
    availabilityTarget?: true
  }

  export type ServiceCiMinAggregateInputType = {
    ciId?: true
    serviceType?: true
    serviceLevel?: true
    businessOwner?: true
    slaDocument?: true
    availabilityTarget?: true
    performanceTarget?: true
  }

  export type ServiceCiMaxAggregateInputType = {
    ciId?: true
    serviceType?: true
    serviceLevel?: true
    businessOwner?: true
    slaDocument?: true
    availabilityTarget?: true
    performanceTarget?: true
  }

  export type ServiceCiCountAggregateInputType = {
    ciId?: true
    serviceType?: true
    serviceLevel?: true
    businessOwner?: true
    slaDocument?: true
    availabilityTarget?: true
    performanceTarget?: true
    serviceHours?: true
    maintenanceWindow?: true
    _all?: true
  }

  export type ServiceCiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ServiceCi to aggregate.
     */
    where?: ServiceCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceCis to fetch.
     */
    orderBy?: ServiceCiOrderByWithRelationInput | ServiceCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ServiceCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ServiceCis
    **/
    _count?: true | ServiceCiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServiceCiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServiceCiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServiceCiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServiceCiMaxAggregateInputType
  }

  export type GetServiceCiAggregateType<T extends ServiceCiAggregateArgs> = {
        [P in keyof T & keyof AggregateServiceCi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateServiceCi[P]>
      : GetScalarType<T[P], AggregateServiceCi[P]>
  }




  export type ServiceCiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceCiWhereInput
    orderBy?: ServiceCiOrderByWithAggregationInput | ServiceCiOrderByWithAggregationInput[]
    by: ServiceCiScalarFieldEnum[] | ServiceCiScalarFieldEnum
    having?: ServiceCiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServiceCiCountAggregateInputType | true
    _avg?: ServiceCiAvgAggregateInputType
    _sum?: ServiceCiSumAggregateInputType
    _min?: ServiceCiMinAggregateInputType
    _max?: ServiceCiMaxAggregateInputType
  }

  export type ServiceCiGroupByOutputType = {
    ciId: string
    serviceType: string | null
    serviceLevel: string | null
    businessOwner: string | null
    slaDocument: string | null
    availabilityTarget: Decimal | null
    performanceTarget: string | null
    serviceHours: JsonValue | null
    maintenanceWindow: JsonValue | null
    _count: ServiceCiCountAggregateOutputType | null
    _avg: ServiceCiAvgAggregateOutputType | null
    _sum: ServiceCiSumAggregateOutputType | null
    _min: ServiceCiMinAggregateOutputType | null
    _max: ServiceCiMaxAggregateOutputType | null
  }

  type GetServiceCiGroupByPayload<T extends ServiceCiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServiceCiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServiceCiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServiceCiGroupByOutputType[P]>
            : GetScalarType<T[P], ServiceCiGroupByOutputType[P]>
        }
      >
    >


  export type ServiceCiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    serviceType?: boolean
    serviceLevel?: boolean
    businessOwner?: boolean
    slaDocument?: boolean
    availabilityTarget?: boolean
    performanceTarget?: boolean
    serviceHours?: boolean
    maintenanceWindow?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceCi"]>

  export type ServiceCiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    serviceType?: boolean
    serviceLevel?: boolean
    businessOwner?: boolean
    slaDocument?: boolean
    availabilityTarget?: boolean
    performanceTarget?: boolean
    serviceHours?: boolean
    maintenanceWindow?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceCi"]>

  export type ServiceCiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    serviceType?: boolean
    serviceLevel?: boolean
    businessOwner?: boolean
    slaDocument?: boolean
    availabilityTarget?: boolean
    performanceTarget?: boolean
    serviceHours?: boolean
    maintenanceWindow?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceCi"]>

  export type ServiceCiSelectScalar = {
    ciId?: boolean
    serviceType?: boolean
    serviceLevel?: boolean
    businessOwner?: boolean
    slaDocument?: boolean
    availabilityTarget?: boolean
    performanceTarget?: boolean
    serviceHours?: boolean
    maintenanceWindow?: boolean
  }

  export type ServiceCiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ciId" | "serviceType" | "serviceLevel" | "businessOwner" | "slaDocument" | "availabilityTarget" | "performanceTarget" | "serviceHours" | "maintenanceWindow", ExtArgs["result"]["serviceCi"]>
  export type ServiceCiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type ServiceCiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type ServiceCiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }

  export type $ServiceCiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ServiceCi"
    objects: {
      configurationItem: Prisma.$ConfigurationItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      ciId: string
      serviceType: string | null
      serviceLevel: string | null
      businessOwner: string | null
      slaDocument: string | null
      availabilityTarget: Prisma.Decimal | null
      performanceTarget: string | null
      serviceHours: Prisma.JsonValue | null
      maintenanceWindow: Prisma.JsonValue | null
    }, ExtArgs["result"]["serviceCi"]>
    composites: {}
  }

  type ServiceCiGetPayload<S extends boolean | null | undefined | ServiceCiDefaultArgs> = $Result.GetResult<Prisma.$ServiceCiPayload, S>

  type ServiceCiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ServiceCiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ServiceCiCountAggregateInputType | true
    }

  export interface ServiceCiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ServiceCi'], meta: { name: 'ServiceCi' } }
    /**
     * Find zero or one ServiceCi that matches the filter.
     * @param {ServiceCiFindUniqueArgs} args - Arguments to find a ServiceCi
     * @example
     * // Get one ServiceCi
     * const serviceCi = await prisma.serviceCi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ServiceCiFindUniqueArgs>(args: SelectSubset<T, ServiceCiFindUniqueArgs<ExtArgs>>): Prisma__ServiceCiClient<$Result.GetResult<Prisma.$ServiceCiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ServiceCi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ServiceCiFindUniqueOrThrowArgs} args - Arguments to find a ServiceCi
     * @example
     * // Get one ServiceCi
     * const serviceCi = await prisma.serviceCi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ServiceCiFindUniqueOrThrowArgs>(args: SelectSubset<T, ServiceCiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ServiceCiClient<$Result.GetResult<Prisma.$ServiceCiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ServiceCi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceCiFindFirstArgs} args - Arguments to find a ServiceCi
     * @example
     * // Get one ServiceCi
     * const serviceCi = await prisma.serviceCi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ServiceCiFindFirstArgs>(args?: SelectSubset<T, ServiceCiFindFirstArgs<ExtArgs>>): Prisma__ServiceCiClient<$Result.GetResult<Prisma.$ServiceCiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ServiceCi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceCiFindFirstOrThrowArgs} args - Arguments to find a ServiceCi
     * @example
     * // Get one ServiceCi
     * const serviceCi = await prisma.serviceCi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ServiceCiFindFirstOrThrowArgs>(args?: SelectSubset<T, ServiceCiFindFirstOrThrowArgs<ExtArgs>>): Prisma__ServiceCiClient<$Result.GetResult<Prisma.$ServiceCiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ServiceCis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceCiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ServiceCis
     * const serviceCis = await prisma.serviceCi.findMany()
     * 
     * // Get first 10 ServiceCis
     * const serviceCis = await prisma.serviceCi.findMany({ take: 10 })
     * 
     * // Only select the `ciId`
     * const serviceCiWithCiIdOnly = await prisma.serviceCi.findMany({ select: { ciId: true } })
     * 
     */
    findMany<T extends ServiceCiFindManyArgs>(args?: SelectSubset<T, ServiceCiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceCiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ServiceCi.
     * @param {ServiceCiCreateArgs} args - Arguments to create a ServiceCi.
     * @example
     * // Create one ServiceCi
     * const ServiceCi = await prisma.serviceCi.create({
     *   data: {
     *     // ... data to create a ServiceCi
     *   }
     * })
     * 
     */
    create<T extends ServiceCiCreateArgs>(args: SelectSubset<T, ServiceCiCreateArgs<ExtArgs>>): Prisma__ServiceCiClient<$Result.GetResult<Prisma.$ServiceCiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ServiceCis.
     * @param {ServiceCiCreateManyArgs} args - Arguments to create many ServiceCis.
     * @example
     * // Create many ServiceCis
     * const serviceCi = await prisma.serviceCi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ServiceCiCreateManyArgs>(args?: SelectSubset<T, ServiceCiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ServiceCis and returns the data saved in the database.
     * @param {ServiceCiCreateManyAndReturnArgs} args - Arguments to create many ServiceCis.
     * @example
     * // Create many ServiceCis
     * const serviceCi = await prisma.serviceCi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ServiceCis and only return the `ciId`
     * const serviceCiWithCiIdOnly = await prisma.serviceCi.createManyAndReturn({
     *   select: { ciId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ServiceCiCreateManyAndReturnArgs>(args?: SelectSubset<T, ServiceCiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceCiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ServiceCi.
     * @param {ServiceCiDeleteArgs} args - Arguments to delete one ServiceCi.
     * @example
     * // Delete one ServiceCi
     * const ServiceCi = await prisma.serviceCi.delete({
     *   where: {
     *     // ... filter to delete one ServiceCi
     *   }
     * })
     * 
     */
    delete<T extends ServiceCiDeleteArgs>(args: SelectSubset<T, ServiceCiDeleteArgs<ExtArgs>>): Prisma__ServiceCiClient<$Result.GetResult<Prisma.$ServiceCiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ServiceCi.
     * @param {ServiceCiUpdateArgs} args - Arguments to update one ServiceCi.
     * @example
     * // Update one ServiceCi
     * const serviceCi = await prisma.serviceCi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ServiceCiUpdateArgs>(args: SelectSubset<T, ServiceCiUpdateArgs<ExtArgs>>): Prisma__ServiceCiClient<$Result.GetResult<Prisma.$ServiceCiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ServiceCis.
     * @param {ServiceCiDeleteManyArgs} args - Arguments to filter ServiceCis to delete.
     * @example
     * // Delete a few ServiceCis
     * const { count } = await prisma.serviceCi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ServiceCiDeleteManyArgs>(args?: SelectSubset<T, ServiceCiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ServiceCis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceCiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ServiceCis
     * const serviceCi = await prisma.serviceCi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ServiceCiUpdateManyArgs>(args: SelectSubset<T, ServiceCiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ServiceCis and returns the data updated in the database.
     * @param {ServiceCiUpdateManyAndReturnArgs} args - Arguments to update many ServiceCis.
     * @example
     * // Update many ServiceCis
     * const serviceCi = await prisma.serviceCi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ServiceCis and only return the `ciId`
     * const serviceCiWithCiIdOnly = await prisma.serviceCi.updateManyAndReturn({
     *   select: { ciId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ServiceCiUpdateManyAndReturnArgs>(args: SelectSubset<T, ServiceCiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceCiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ServiceCi.
     * @param {ServiceCiUpsertArgs} args - Arguments to update or create a ServiceCi.
     * @example
     * // Update or create a ServiceCi
     * const serviceCi = await prisma.serviceCi.upsert({
     *   create: {
     *     // ... data to create a ServiceCi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ServiceCi we want to update
     *   }
     * })
     */
    upsert<T extends ServiceCiUpsertArgs>(args: SelectSubset<T, ServiceCiUpsertArgs<ExtArgs>>): Prisma__ServiceCiClient<$Result.GetResult<Prisma.$ServiceCiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ServiceCis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceCiCountArgs} args - Arguments to filter ServiceCis to count.
     * @example
     * // Count the number of ServiceCis
     * const count = await prisma.serviceCi.count({
     *   where: {
     *     // ... the filter for the ServiceCis we want to count
     *   }
     * })
    **/
    count<T extends ServiceCiCountArgs>(
      args?: Subset<T, ServiceCiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServiceCiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ServiceCi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceCiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServiceCiAggregateArgs>(args: Subset<T, ServiceCiAggregateArgs>): Prisma.PrismaPromise<GetServiceCiAggregateType<T>>

    /**
     * Group by ServiceCi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceCiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ServiceCiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ServiceCiGroupByArgs['orderBy'] }
        : { orderBy?: ServiceCiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ServiceCiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServiceCiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ServiceCi model
   */
  readonly fields: ServiceCiFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for ServiceCi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ServiceCiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    configurationItem<T extends ConfigurationItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItemDefaultArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ServiceCi model
   */
  interface ServiceCiFieldRefs {
    readonly ciId: FieldRef<"ServiceCi", 'String'>
    readonly serviceType: FieldRef<"ServiceCi", 'String'>
    readonly serviceLevel: FieldRef<"ServiceCi", 'String'>
    readonly businessOwner: FieldRef<"ServiceCi", 'String'>
    readonly slaDocument: FieldRef<"ServiceCi", 'String'>
    readonly availabilityTarget: FieldRef<"ServiceCi", 'Decimal'>
    readonly performanceTarget: FieldRef<"ServiceCi", 'String'>
    readonly serviceHours: FieldRef<"ServiceCi", 'Json'>
    readonly maintenanceWindow: FieldRef<"ServiceCi", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * ServiceCi findUnique
   */
  export type ServiceCiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceCi
     */
    select?: ServiceCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceCi
     */
    omit?: ServiceCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceCiInclude<ExtArgs> | null
    /**
     * Filter, which ServiceCi to fetch.
     */
    where: ServiceCiWhereUniqueInput
  }

  /**
   * ServiceCi findUniqueOrThrow
   */
  export type ServiceCiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceCi
     */
    select?: ServiceCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceCi
     */
    omit?: ServiceCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceCiInclude<ExtArgs> | null
    /**
     * Filter, which ServiceCi to fetch.
     */
    where: ServiceCiWhereUniqueInput
  }

  /**
   * ServiceCi findFirst
   */
  export type ServiceCiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceCi
     */
    select?: ServiceCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceCi
     */
    omit?: ServiceCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceCiInclude<ExtArgs> | null
    /**
     * Filter, which ServiceCi to fetch.
     */
    where?: ServiceCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceCis to fetch.
     */
    orderBy?: ServiceCiOrderByWithRelationInput | ServiceCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ServiceCis.
     */
    cursor?: ServiceCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ServiceCis.
     */
    distinct?: ServiceCiScalarFieldEnum | ServiceCiScalarFieldEnum[]
  }

  /**
   * ServiceCi findFirstOrThrow
   */
  export type ServiceCiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceCi
     */
    select?: ServiceCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceCi
     */
    omit?: ServiceCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceCiInclude<ExtArgs> | null
    /**
     * Filter, which ServiceCi to fetch.
     */
    where?: ServiceCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceCis to fetch.
     */
    orderBy?: ServiceCiOrderByWithRelationInput | ServiceCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ServiceCis.
     */
    cursor?: ServiceCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ServiceCis.
     */
    distinct?: ServiceCiScalarFieldEnum | ServiceCiScalarFieldEnum[]
  }

  /**
   * ServiceCi findMany
   */
  export type ServiceCiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceCi
     */
    select?: ServiceCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceCi
     */
    omit?: ServiceCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceCiInclude<ExtArgs> | null
    /**
     * Filter, which ServiceCis to fetch.
     */
    where?: ServiceCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceCis to fetch.
     */
    orderBy?: ServiceCiOrderByWithRelationInput | ServiceCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ServiceCis.
     */
    cursor?: ServiceCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceCis.
     */
    skip?: number
    distinct?: ServiceCiScalarFieldEnum | ServiceCiScalarFieldEnum[]
  }

  /**
   * ServiceCi create
   */
  export type ServiceCiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceCi
     */
    select?: ServiceCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceCi
     */
    omit?: ServiceCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceCiInclude<ExtArgs> | null
    /**
     * The data needed to create a ServiceCi.
     */
    data: XOR<ServiceCiCreateInput, ServiceCiUncheckedCreateInput>
  }

  /**
   * ServiceCi createMany
   */
  export type ServiceCiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ServiceCis.
     */
    data: ServiceCiCreateManyInput | ServiceCiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ServiceCi createManyAndReturn
   */
  export type ServiceCiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceCi
     */
    select?: ServiceCiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceCi
     */
    omit?: ServiceCiOmit<ExtArgs> | null
    /**
     * The data used to create many ServiceCis.
     */
    data: ServiceCiCreateManyInput | ServiceCiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceCiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ServiceCi update
   */
  export type ServiceCiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceCi
     */
    select?: ServiceCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceCi
     */
    omit?: ServiceCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceCiInclude<ExtArgs> | null
    /**
     * The data needed to update a ServiceCi.
     */
    data: XOR<ServiceCiUpdateInput, ServiceCiUncheckedUpdateInput>
    /**
     * Choose, which ServiceCi to update.
     */
    where: ServiceCiWhereUniqueInput
  }

  /**
   * ServiceCi updateMany
   */
  export type ServiceCiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ServiceCis.
     */
    data: XOR<ServiceCiUpdateManyMutationInput, ServiceCiUncheckedUpdateManyInput>
    /**
     * Filter which ServiceCis to update
     */
    where?: ServiceCiWhereInput
    /**
     * Limit how many ServiceCis to update.
     */
    limit?: number
  }

  /**
   * ServiceCi updateManyAndReturn
   */
  export type ServiceCiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceCi
     */
    select?: ServiceCiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceCi
     */
    omit?: ServiceCiOmit<ExtArgs> | null
    /**
     * The data used to update ServiceCis.
     */
    data: XOR<ServiceCiUpdateManyMutationInput, ServiceCiUncheckedUpdateManyInput>
    /**
     * Filter which ServiceCis to update
     */
    where?: ServiceCiWhereInput
    /**
     * Limit how many ServiceCis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceCiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ServiceCi upsert
   */
  export type ServiceCiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceCi
     */
    select?: ServiceCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceCi
     */
    omit?: ServiceCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceCiInclude<ExtArgs> | null
    /**
     * The filter to search for the ServiceCi to update in case it exists.
     */
    where: ServiceCiWhereUniqueInput
    /**
     * In case the ServiceCi found by the `where` argument doesn't exist, create a new ServiceCi with this data.
     */
    create: XOR<ServiceCiCreateInput, ServiceCiUncheckedCreateInput>
    /**
     * In case the ServiceCi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ServiceCiUpdateInput, ServiceCiUncheckedUpdateInput>
  }

  /**
   * ServiceCi delete
   */
  export type ServiceCiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceCi
     */
    select?: ServiceCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceCi
     */
    omit?: ServiceCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceCiInclude<ExtArgs> | null
    /**
     * Filter which ServiceCi to delete.
     */
    where: ServiceCiWhereUniqueInput
  }

  /**
   * ServiceCi deleteMany
   */
  export type ServiceCiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ServiceCis to delete
     */
    where?: ServiceCiWhereInput
    /**
     * Limit how many ServiceCis to delete.
     */
    limit?: number
  }

  /**
   * ServiceCi without action
   */
  export type ServiceCiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceCi
     */
    select?: ServiceCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceCi
     */
    omit?: ServiceCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceCiInclude<ExtArgs> | null
  }


  /**
   * Model DatabaseCi
   */

  export type AggregateDatabaseCi = {
    _count: DatabaseCiCountAggregateOutputType | null
    _avg: DatabaseCiAvgAggregateOutputType | null
    _sum: DatabaseCiSumAggregateOutputType | null
    _min: DatabaseCiMinAggregateOutputType | null
    _max: DatabaseCiMaxAggregateOutputType | null
  }

  export type DatabaseCiAvgAggregateOutputType = {
    port: number | null
    schemaCount: number | null
  }

  export type DatabaseCiSumAggregateOutputType = {
    port: number | null
    schemaCount: number | null
  }

  export type DatabaseCiMinAggregateOutputType = {
    ciId: string | null
    databaseType: string | null
    databaseVersion: string | null
    databaseSize: string | null
    connectionString: string | null
    port: number | null
    schemaCount: number | null
    lastBackupDate: Date | null
  }

  export type DatabaseCiMaxAggregateOutputType = {
    ciId: string | null
    databaseType: string | null
    databaseVersion: string | null
    databaseSize: string | null
    connectionString: string | null
    port: number | null
    schemaCount: number | null
    lastBackupDate: Date | null
  }

  export type DatabaseCiCountAggregateOutputType = {
    ciId: number
    databaseType: number
    databaseVersion: number
    databaseSize: number
    connectionString: number
    port: number
    schemaCount: number
    backupSchedule: number
    lastBackupDate: number
    _all: number
  }


  export type DatabaseCiAvgAggregateInputType = {
    port?: true
    schemaCount?: true
  }

  export type DatabaseCiSumAggregateInputType = {
    port?: true
    schemaCount?: true
  }

  export type DatabaseCiMinAggregateInputType = {
    ciId?: true
    databaseType?: true
    databaseVersion?: true
    databaseSize?: true
    connectionString?: true
    port?: true
    schemaCount?: true
    lastBackupDate?: true
  }

  export type DatabaseCiMaxAggregateInputType = {
    ciId?: true
    databaseType?: true
    databaseVersion?: true
    databaseSize?: true
    connectionString?: true
    port?: true
    schemaCount?: true
    lastBackupDate?: true
  }

  export type DatabaseCiCountAggregateInputType = {
    ciId?: true
    databaseType?: true
    databaseVersion?: true
    databaseSize?: true
    connectionString?: true
    port?: true
    schemaCount?: true
    backupSchedule?: true
    lastBackupDate?: true
    _all?: true
  }

  export type DatabaseCiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DatabaseCi to aggregate.
     */
    where?: DatabaseCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DatabaseCis to fetch.
     */
    orderBy?: DatabaseCiOrderByWithRelationInput | DatabaseCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DatabaseCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DatabaseCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DatabaseCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DatabaseCis
    **/
    _count?: true | DatabaseCiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DatabaseCiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DatabaseCiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DatabaseCiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DatabaseCiMaxAggregateInputType
  }

  export type GetDatabaseCiAggregateType<T extends DatabaseCiAggregateArgs> = {
        [P in keyof T & keyof AggregateDatabaseCi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDatabaseCi[P]>
      : GetScalarType<T[P], AggregateDatabaseCi[P]>
  }




  export type DatabaseCiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DatabaseCiWhereInput
    orderBy?: DatabaseCiOrderByWithAggregationInput | DatabaseCiOrderByWithAggregationInput[]
    by: DatabaseCiScalarFieldEnum[] | DatabaseCiScalarFieldEnum
    having?: DatabaseCiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DatabaseCiCountAggregateInputType | true
    _avg?: DatabaseCiAvgAggregateInputType
    _sum?: DatabaseCiSumAggregateInputType
    _min?: DatabaseCiMinAggregateInputType
    _max?: DatabaseCiMaxAggregateInputType
  }

  export type DatabaseCiGroupByOutputType = {
    ciId: string
    databaseType: string | null
    databaseVersion: string | null
    databaseSize: string | null
    connectionString: string | null
    port: number | null
    schemaCount: number | null
    backupSchedule: JsonValue | null
    lastBackupDate: Date | null
    _count: DatabaseCiCountAggregateOutputType | null
    _avg: DatabaseCiAvgAggregateOutputType | null
    _sum: DatabaseCiSumAggregateOutputType | null
    _min: DatabaseCiMinAggregateOutputType | null
    _max: DatabaseCiMaxAggregateOutputType | null
  }

  type GetDatabaseCiGroupByPayload<T extends DatabaseCiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DatabaseCiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DatabaseCiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DatabaseCiGroupByOutputType[P]>
            : GetScalarType<T[P], DatabaseCiGroupByOutputType[P]>
        }
      >
    >


  export type DatabaseCiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    databaseType?: boolean
    databaseVersion?: boolean
    databaseSize?: boolean
    connectionString?: boolean
    port?: boolean
    schemaCount?: boolean
    backupSchedule?: boolean
    lastBackupDate?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["databaseCi"]>

  export type DatabaseCiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    databaseType?: boolean
    databaseVersion?: boolean
    databaseSize?: boolean
    connectionString?: boolean
    port?: boolean
    schemaCount?: boolean
    backupSchedule?: boolean
    lastBackupDate?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["databaseCi"]>

  export type DatabaseCiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    databaseType?: boolean
    databaseVersion?: boolean
    databaseSize?: boolean
    connectionString?: boolean
    port?: boolean
    schemaCount?: boolean
    backupSchedule?: boolean
    lastBackupDate?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["databaseCi"]>

  export type DatabaseCiSelectScalar = {
    ciId?: boolean
    databaseType?: boolean
    databaseVersion?: boolean
    databaseSize?: boolean
    connectionString?: boolean
    port?: boolean
    schemaCount?: boolean
    backupSchedule?: boolean
    lastBackupDate?: boolean
  }

  export type DatabaseCiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ciId" | "databaseType" | "databaseVersion" | "databaseSize" | "connectionString" | "port" | "schemaCount" | "backupSchedule" | "lastBackupDate", ExtArgs["result"]["databaseCi"]>
  export type DatabaseCiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type DatabaseCiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type DatabaseCiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }

  export type $DatabaseCiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DatabaseCi"
    objects: {
      configurationItem: Prisma.$ConfigurationItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      ciId: string
      databaseType: string | null
      databaseVersion: string | null
      databaseSize: string | null
      connectionString: string | null
      port: number | null
      schemaCount: number | null
      backupSchedule: Prisma.JsonValue | null
      lastBackupDate: Date | null
    }, ExtArgs["result"]["databaseCi"]>
    composites: {}
  }

  type DatabaseCiGetPayload<S extends boolean | null | undefined | DatabaseCiDefaultArgs> = $Result.GetResult<Prisma.$DatabaseCiPayload, S>

  type DatabaseCiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DatabaseCiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DatabaseCiCountAggregateInputType | true
    }

  export interface DatabaseCiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DatabaseCi'], meta: { name: 'DatabaseCi' } }
    /**
     * Find zero or one DatabaseCi that matches the filter.
     * @param {DatabaseCiFindUniqueArgs} args - Arguments to find a DatabaseCi
     * @example
     * // Get one DatabaseCi
     * const databaseCi = await prisma.databaseCi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DatabaseCiFindUniqueArgs>(args: SelectSubset<T, DatabaseCiFindUniqueArgs<ExtArgs>>): Prisma__DatabaseCiClient<$Result.GetResult<Prisma.$DatabaseCiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DatabaseCi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DatabaseCiFindUniqueOrThrowArgs} args - Arguments to find a DatabaseCi
     * @example
     * // Get one DatabaseCi
     * const databaseCi = await prisma.databaseCi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DatabaseCiFindUniqueOrThrowArgs>(args: SelectSubset<T, DatabaseCiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DatabaseCiClient<$Result.GetResult<Prisma.$DatabaseCiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DatabaseCi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DatabaseCiFindFirstArgs} args - Arguments to find a DatabaseCi
     * @example
     * // Get one DatabaseCi
     * const databaseCi = await prisma.databaseCi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DatabaseCiFindFirstArgs>(args?: SelectSubset<T, DatabaseCiFindFirstArgs<ExtArgs>>): Prisma__DatabaseCiClient<$Result.GetResult<Prisma.$DatabaseCiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DatabaseCi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DatabaseCiFindFirstOrThrowArgs} args - Arguments to find a DatabaseCi
     * @example
     * // Get one DatabaseCi
     * const databaseCi = await prisma.databaseCi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DatabaseCiFindFirstOrThrowArgs>(args?: SelectSubset<T, DatabaseCiFindFirstOrThrowArgs<ExtArgs>>): Prisma__DatabaseCiClient<$Result.GetResult<Prisma.$DatabaseCiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DatabaseCis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DatabaseCiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DatabaseCis
     * const databaseCis = await prisma.databaseCi.findMany()
     * 
     * // Get first 10 DatabaseCis
     * const databaseCis = await prisma.databaseCi.findMany({ take: 10 })
     * 
     * // Only select the `ciId`
     * const databaseCiWithCiIdOnly = await prisma.databaseCi.findMany({ select: { ciId: true } })
     * 
     */
    findMany<T extends DatabaseCiFindManyArgs>(args?: SelectSubset<T, DatabaseCiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DatabaseCiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DatabaseCi.
     * @param {DatabaseCiCreateArgs} args - Arguments to create a DatabaseCi.
     * @example
     * // Create one DatabaseCi
     * const DatabaseCi = await prisma.databaseCi.create({
     *   data: {
     *     // ... data to create a DatabaseCi
     *   }
     * })
     * 
     */
    create<T extends DatabaseCiCreateArgs>(args: SelectSubset<T, DatabaseCiCreateArgs<ExtArgs>>): Prisma__DatabaseCiClient<$Result.GetResult<Prisma.$DatabaseCiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DatabaseCis.
     * @param {DatabaseCiCreateManyArgs} args - Arguments to create many DatabaseCis.
     * @example
     * // Create many DatabaseCis
     * const databaseCi = await prisma.databaseCi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DatabaseCiCreateManyArgs>(args?: SelectSubset<T, DatabaseCiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DatabaseCis and returns the data saved in the database.
     * @param {DatabaseCiCreateManyAndReturnArgs} args - Arguments to create many DatabaseCis.
     * @example
     * // Create many DatabaseCis
     * const databaseCi = await prisma.databaseCi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DatabaseCis and only return the `ciId`
     * const databaseCiWithCiIdOnly = await prisma.databaseCi.createManyAndReturn({
     *   select: { ciId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DatabaseCiCreateManyAndReturnArgs>(args?: SelectSubset<T, DatabaseCiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DatabaseCiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DatabaseCi.
     * @param {DatabaseCiDeleteArgs} args - Arguments to delete one DatabaseCi.
     * @example
     * // Delete one DatabaseCi
     * const DatabaseCi = await prisma.databaseCi.delete({
     *   where: {
     *     // ... filter to delete one DatabaseCi
     *   }
     * })
     * 
     */
    delete<T extends DatabaseCiDeleteArgs>(args: SelectSubset<T, DatabaseCiDeleteArgs<ExtArgs>>): Prisma__DatabaseCiClient<$Result.GetResult<Prisma.$DatabaseCiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DatabaseCi.
     * @param {DatabaseCiUpdateArgs} args - Arguments to update one DatabaseCi.
     * @example
     * // Update one DatabaseCi
     * const databaseCi = await prisma.databaseCi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DatabaseCiUpdateArgs>(args: SelectSubset<T, DatabaseCiUpdateArgs<ExtArgs>>): Prisma__DatabaseCiClient<$Result.GetResult<Prisma.$DatabaseCiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DatabaseCis.
     * @param {DatabaseCiDeleteManyArgs} args - Arguments to filter DatabaseCis to delete.
     * @example
     * // Delete a few DatabaseCis
     * const { count } = await prisma.databaseCi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DatabaseCiDeleteManyArgs>(args?: SelectSubset<T, DatabaseCiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DatabaseCis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DatabaseCiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DatabaseCis
     * const databaseCi = await prisma.databaseCi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DatabaseCiUpdateManyArgs>(args: SelectSubset<T, DatabaseCiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DatabaseCis and returns the data updated in the database.
     * @param {DatabaseCiUpdateManyAndReturnArgs} args - Arguments to update many DatabaseCis.
     * @example
     * // Update many DatabaseCis
     * const databaseCi = await prisma.databaseCi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DatabaseCis and only return the `ciId`
     * const databaseCiWithCiIdOnly = await prisma.databaseCi.updateManyAndReturn({
     *   select: { ciId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DatabaseCiUpdateManyAndReturnArgs>(args: SelectSubset<T, DatabaseCiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DatabaseCiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DatabaseCi.
     * @param {DatabaseCiUpsertArgs} args - Arguments to update or create a DatabaseCi.
     * @example
     * // Update or create a DatabaseCi
     * const databaseCi = await prisma.databaseCi.upsert({
     *   create: {
     *     // ... data to create a DatabaseCi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DatabaseCi we want to update
     *   }
     * })
     */
    upsert<T extends DatabaseCiUpsertArgs>(args: SelectSubset<T, DatabaseCiUpsertArgs<ExtArgs>>): Prisma__DatabaseCiClient<$Result.GetResult<Prisma.$DatabaseCiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DatabaseCis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DatabaseCiCountArgs} args - Arguments to filter DatabaseCis to count.
     * @example
     * // Count the number of DatabaseCis
     * const count = await prisma.databaseCi.count({
     *   where: {
     *     // ... the filter for the DatabaseCis we want to count
     *   }
     * })
    **/
    count<T extends DatabaseCiCountArgs>(
      args?: Subset<T, DatabaseCiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DatabaseCiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DatabaseCi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DatabaseCiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DatabaseCiAggregateArgs>(args: Subset<T, DatabaseCiAggregateArgs>): Prisma.PrismaPromise<GetDatabaseCiAggregateType<T>>

    /**
     * Group by DatabaseCi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DatabaseCiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DatabaseCiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DatabaseCiGroupByArgs['orderBy'] }
        : { orderBy?: DatabaseCiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DatabaseCiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDatabaseCiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DatabaseCi model
   */
  readonly fields: DatabaseCiFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for DatabaseCi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DatabaseCiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    configurationItem<T extends ConfigurationItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItemDefaultArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DatabaseCi model
   */
  interface DatabaseCiFieldRefs {
    readonly ciId: FieldRef<"DatabaseCi", 'String'>
    readonly databaseType: FieldRef<"DatabaseCi", 'String'>
    readonly databaseVersion: FieldRef<"DatabaseCi", 'String'>
    readonly databaseSize: FieldRef<"DatabaseCi", 'String'>
    readonly connectionString: FieldRef<"DatabaseCi", 'String'>
    readonly port: FieldRef<"DatabaseCi", 'Int'>
    readonly schemaCount: FieldRef<"DatabaseCi", 'Int'>
    readonly backupSchedule: FieldRef<"DatabaseCi", 'Json'>
    readonly lastBackupDate: FieldRef<"DatabaseCi", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DatabaseCi findUnique
   */
  export type DatabaseCiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DatabaseCi
     */
    select?: DatabaseCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DatabaseCi
     */
    omit?: DatabaseCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DatabaseCiInclude<ExtArgs> | null
    /**
     * Filter, which DatabaseCi to fetch.
     */
    where: DatabaseCiWhereUniqueInput
  }

  /**
   * DatabaseCi findUniqueOrThrow
   */
  export type DatabaseCiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DatabaseCi
     */
    select?: DatabaseCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DatabaseCi
     */
    omit?: DatabaseCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DatabaseCiInclude<ExtArgs> | null
    /**
     * Filter, which DatabaseCi to fetch.
     */
    where: DatabaseCiWhereUniqueInput
  }

  /**
   * DatabaseCi findFirst
   */
  export type DatabaseCiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DatabaseCi
     */
    select?: DatabaseCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DatabaseCi
     */
    omit?: DatabaseCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DatabaseCiInclude<ExtArgs> | null
    /**
     * Filter, which DatabaseCi to fetch.
     */
    where?: DatabaseCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DatabaseCis to fetch.
     */
    orderBy?: DatabaseCiOrderByWithRelationInput | DatabaseCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DatabaseCis.
     */
    cursor?: DatabaseCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DatabaseCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DatabaseCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DatabaseCis.
     */
    distinct?: DatabaseCiScalarFieldEnum | DatabaseCiScalarFieldEnum[]
  }

  /**
   * DatabaseCi findFirstOrThrow
   */
  export type DatabaseCiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DatabaseCi
     */
    select?: DatabaseCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DatabaseCi
     */
    omit?: DatabaseCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DatabaseCiInclude<ExtArgs> | null
    /**
     * Filter, which DatabaseCi to fetch.
     */
    where?: DatabaseCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DatabaseCis to fetch.
     */
    orderBy?: DatabaseCiOrderByWithRelationInput | DatabaseCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DatabaseCis.
     */
    cursor?: DatabaseCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DatabaseCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DatabaseCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DatabaseCis.
     */
    distinct?: DatabaseCiScalarFieldEnum | DatabaseCiScalarFieldEnum[]
  }

  /**
   * DatabaseCi findMany
   */
  export type DatabaseCiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DatabaseCi
     */
    select?: DatabaseCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DatabaseCi
     */
    omit?: DatabaseCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DatabaseCiInclude<ExtArgs> | null
    /**
     * Filter, which DatabaseCis to fetch.
     */
    where?: DatabaseCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DatabaseCis to fetch.
     */
    orderBy?: DatabaseCiOrderByWithRelationInput | DatabaseCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DatabaseCis.
     */
    cursor?: DatabaseCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DatabaseCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DatabaseCis.
     */
    skip?: number
    distinct?: DatabaseCiScalarFieldEnum | DatabaseCiScalarFieldEnum[]
  }

  /**
   * DatabaseCi create
   */
  export type DatabaseCiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DatabaseCi
     */
    select?: DatabaseCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DatabaseCi
     */
    omit?: DatabaseCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DatabaseCiInclude<ExtArgs> | null
    /**
     * The data needed to create a DatabaseCi.
     */
    data: XOR<DatabaseCiCreateInput, DatabaseCiUncheckedCreateInput>
  }

  /**
   * DatabaseCi createMany
   */
  export type DatabaseCiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DatabaseCis.
     */
    data: DatabaseCiCreateManyInput | DatabaseCiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DatabaseCi createManyAndReturn
   */
  export type DatabaseCiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DatabaseCi
     */
    select?: DatabaseCiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DatabaseCi
     */
    omit?: DatabaseCiOmit<ExtArgs> | null
    /**
     * The data used to create many DatabaseCis.
     */
    data: DatabaseCiCreateManyInput | DatabaseCiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DatabaseCiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DatabaseCi update
   */
  export type DatabaseCiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DatabaseCi
     */
    select?: DatabaseCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DatabaseCi
     */
    omit?: DatabaseCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DatabaseCiInclude<ExtArgs> | null
    /**
     * The data needed to update a DatabaseCi.
     */
    data: XOR<DatabaseCiUpdateInput, DatabaseCiUncheckedUpdateInput>
    /**
     * Choose, which DatabaseCi to update.
     */
    where: DatabaseCiWhereUniqueInput
  }

  /**
   * DatabaseCi updateMany
   */
  export type DatabaseCiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DatabaseCis.
     */
    data: XOR<DatabaseCiUpdateManyMutationInput, DatabaseCiUncheckedUpdateManyInput>
    /**
     * Filter which DatabaseCis to update
     */
    where?: DatabaseCiWhereInput
    /**
     * Limit how many DatabaseCis to update.
     */
    limit?: number
  }

  /**
   * DatabaseCi updateManyAndReturn
   */
  export type DatabaseCiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DatabaseCi
     */
    select?: DatabaseCiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DatabaseCi
     */
    omit?: DatabaseCiOmit<ExtArgs> | null
    /**
     * The data used to update DatabaseCis.
     */
    data: XOR<DatabaseCiUpdateManyMutationInput, DatabaseCiUncheckedUpdateManyInput>
    /**
     * Filter which DatabaseCis to update
     */
    where?: DatabaseCiWhereInput
    /**
     * Limit how many DatabaseCis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DatabaseCiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * DatabaseCi upsert
   */
  export type DatabaseCiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DatabaseCi
     */
    select?: DatabaseCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DatabaseCi
     */
    omit?: DatabaseCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DatabaseCiInclude<ExtArgs> | null
    /**
     * The filter to search for the DatabaseCi to update in case it exists.
     */
    where: DatabaseCiWhereUniqueInput
    /**
     * In case the DatabaseCi found by the `where` argument doesn't exist, create a new DatabaseCi with this data.
     */
    create: XOR<DatabaseCiCreateInput, DatabaseCiUncheckedCreateInput>
    /**
     * In case the DatabaseCi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DatabaseCiUpdateInput, DatabaseCiUncheckedUpdateInput>
  }

  /**
   * DatabaseCi delete
   */
  export type DatabaseCiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DatabaseCi
     */
    select?: DatabaseCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DatabaseCi
     */
    omit?: DatabaseCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DatabaseCiInclude<ExtArgs> | null
    /**
     * Filter which DatabaseCi to delete.
     */
    where: DatabaseCiWhereUniqueInput
  }

  /**
   * DatabaseCi deleteMany
   */
  export type DatabaseCiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DatabaseCis to delete
     */
    where?: DatabaseCiWhereInput
    /**
     * Limit how many DatabaseCis to delete.
     */
    limit?: number
  }

  /**
   * DatabaseCi without action
   */
  export type DatabaseCiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DatabaseCi
     */
    select?: DatabaseCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DatabaseCi
     */
    omit?: DatabaseCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DatabaseCiInclude<ExtArgs> | null
  }


  /**
   * Model VirtualCi
   */

  export type AggregateVirtualCi = {
    _count: VirtualCiCountAggregateOutputType | null
    _avg: VirtualCiAvgAggregateOutputType | null
    _sum: VirtualCiSumAggregateOutputType | null
    _min: VirtualCiMinAggregateOutputType | null
    _max: VirtualCiMaxAggregateOutputType | null
  }

  export type VirtualCiAvgAggregateOutputType = {
    allocatedCpu: number | null
  }

  export type VirtualCiSumAggregateOutputType = {
    allocatedCpu: number | null
  }

  export type VirtualCiMinAggregateOutputType = {
    ciId: string | null
    hypervisorType: string | null
    hostCiId: string | null
    allocatedCpu: number | null
    allocatedMemory: string | null
    allocatedStorage: string | null
  }

  export type VirtualCiMaxAggregateOutputType = {
    ciId: string | null
    hypervisorType: string | null
    hostCiId: string | null
    allocatedCpu: number | null
    allocatedMemory: string | null
    allocatedStorage: string | null
  }

  export type VirtualCiCountAggregateOutputType = {
    ciId: number
    hypervisorType: number
    hostCiId: number
    allocatedCpu: number
    allocatedMemory: number
    allocatedStorage: number
    virtualNetworks: number
    _all: number
  }


  export type VirtualCiAvgAggregateInputType = {
    allocatedCpu?: true
  }

  export type VirtualCiSumAggregateInputType = {
    allocatedCpu?: true
  }

  export type VirtualCiMinAggregateInputType = {
    ciId?: true
    hypervisorType?: true
    hostCiId?: true
    allocatedCpu?: true
    allocatedMemory?: true
    allocatedStorage?: true
  }

  export type VirtualCiMaxAggregateInputType = {
    ciId?: true
    hypervisorType?: true
    hostCiId?: true
    allocatedCpu?: true
    allocatedMemory?: true
    allocatedStorage?: true
  }

  export type VirtualCiCountAggregateInputType = {
    ciId?: true
    hypervisorType?: true
    hostCiId?: true
    allocatedCpu?: true
    allocatedMemory?: true
    allocatedStorage?: true
    virtualNetworks?: true
    _all?: true
  }

  export type VirtualCiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VirtualCi to aggregate.
     */
    where?: VirtualCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VirtualCis to fetch.
     */
    orderBy?: VirtualCiOrderByWithRelationInput | VirtualCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VirtualCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VirtualCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VirtualCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VirtualCis
    **/
    _count?: true | VirtualCiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VirtualCiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VirtualCiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VirtualCiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VirtualCiMaxAggregateInputType
  }

  export type GetVirtualCiAggregateType<T extends VirtualCiAggregateArgs> = {
        [P in keyof T & keyof AggregateVirtualCi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVirtualCi[P]>
      : GetScalarType<T[P], AggregateVirtualCi[P]>
  }




  export type VirtualCiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VirtualCiWhereInput
    orderBy?: VirtualCiOrderByWithAggregationInput | VirtualCiOrderByWithAggregationInput[]
    by: VirtualCiScalarFieldEnum[] | VirtualCiScalarFieldEnum
    having?: VirtualCiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VirtualCiCountAggregateInputType | true
    _avg?: VirtualCiAvgAggregateInputType
    _sum?: VirtualCiSumAggregateInputType
    _min?: VirtualCiMinAggregateInputType
    _max?: VirtualCiMaxAggregateInputType
  }

  export type VirtualCiGroupByOutputType = {
    ciId: string
    hypervisorType: string | null
    hostCiId: string | null
    allocatedCpu: number | null
    allocatedMemory: string | null
    allocatedStorage: string | null
    virtualNetworks: JsonValue | null
    _count: VirtualCiCountAggregateOutputType | null
    _avg: VirtualCiAvgAggregateOutputType | null
    _sum: VirtualCiSumAggregateOutputType | null
    _min: VirtualCiMinAggregateOutputType | null
    _max: VirtualCiMaxAggregateOutputType | null
  }

  type GetVirtualCiGroupByPayload<T extends VirtualCiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VirtualCiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VirtualCiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VirtualCiGroupByOutputType[P]>
            : GetScalarType<T[P], VirtualCiGroupByOutputType[P]>
        }
      >
    >


  export type VirtualCiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    hypervisorType?: boolean
    hostCiId?: boolean
    allocatedCpu?: boolean
    allocatedMemory?: boolean
    allocatedStorage?: boolean
    virtualNetworks?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["virtualCi"]>

  export type VirtualCiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    hypervisorType?: boolean
    hostCiId?: boolean
    allocatedCpu?: boolean
    allocatedMemory?: boolean
    allocatedStorage?: boolean
    virtualNetworks?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["virtualCi"]>

  export type VirtualCiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    hypervisorType?: boolean
    hostCiId?: boolean
    allocatedCpu?: boolean
    allocatedMemory?: boolean
    allocatedStorage?: boolean
    virtualNetworks?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["virtualCi"]>

  export type VirtualCiSelectScalar = {
    ciId?: boolean
    hypervisorType?: boolean
    hostCiId?: boolean
    allocatedCpu?: boolean
    allocatedMemory?: boolean
    allocatedStorage?: boolean
    virtualNetworks?: boolean
  }

  export type VirtualCiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ciId" | "hypervisorType" | "hostCiId" | "allocatedCpu" | "allocatedMemory" | "allocatedStorage" | "virtualNetworks", ExtArgs["result"]["virtualCi"]>
  export type VirtualCiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type VirtualCiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type VirtualCiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }

  export type $VirtualCiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VirtualCi"
    objects: {
      configurationItem: Prisma.$ConfigurationItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      ciId: string
      hypervisorType: string | null
      hostCiId: string | null
      allocatedCpu: number | null
      allocatedMemory: string | null
      allocatedStorage: string | null
      virtualNetworks: Prisma.JsonValue | null
    }, ExtArgs["result"]["virtualCi"]>
    composites: {}
  }

  type VirtualCiGetPayload<S extends boolean | null | undefined | VirtualCiDefaultArgs> = $Result.GetResult<Prisma.$VirtualCiPayload, S>

  type VirtualCiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VirtualCiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VirtualCiCountAggregateInputType | true
    }

  export interface VirtualCiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VirtualCi'], meta: { name: 'VirtualCi' } }
    /**
     * Find zero or one VirtualCi that matches the filter.
     * @param {VirtualCiFindUniqueArgs} args - Arguments to find a VirtualCi
     * @example
     * // Get one VirtualCi
     * const virtualCi = await prisma.virtualCi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VirtualCiFindUniqueArgs>(args: SelectSubset<T, VirtualCiFindUniqueArgs<ExtArgs>>): Prisma__VirtualCiClient<$Result.GetResult<Prisma.$VirtualCiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VirtualCi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VirtualCiFindUniqueOrThrowArgs} args - Arguments to find a VirtualCi
     * @example
     * // Get one VirtualCi
     * const virtualCi = await prisma.virtualCi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VirtualCiFindUniqueOrThrowArgs>(args: SelectSubset<T, VirtualCiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VirtualCiClient<$Result.GetResult<Prisma.$VirtualCiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VirtualCi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualCiFindFirstArgs} args - Arguments to find a VirtualCi
     * @example
     * // Get one VirtualCi
     * const virtualCi = await prisma.virtualCi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VirtualCiFindFirstArgs>(args?: SelectSubset<T, VirtualCiFindFirstArgs<ExtArgs>>): Prisma__VirtualCiClient<$Result.GetResult<Prisma.$VirtualCiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VirtualCi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualCiFindFirstOrThrowArgs} args - Arguments to find a VirtualCi
     * @example
     * // Get one VirtualCi
     * const virtualCi = await prisma.virtualCi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VirtualCiFindFirstOrThrowArgs>(args?: SelectSubset<T, VirtualCiFindFirstOrThrowArgs<ExtArgs>>): Prisma__VirtualCiClient<$Result.GetResult<Prisma.$VirtualCiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VirtualCis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualCiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VirtualCis
     * const virtualCis = await prisma.virtualCi.findMany()
     * 
     * // Get first 10 VirtualCis
     * const virtualCis = await prisma.virtualCi.findMany({ take: 10 })
     * 
     * // Only select the `ciId`
     * const virtualCiWithCiIdOnly = await prisma.virtualCi.findMany({ select: { ciId: true } })
     * 
     */
    findMany<T extends VirtualCiFindManyArgs>(args?: SelectSubset<T, VirtualCiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VirtualCiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VirtualCi.
     * @param {VirtualCiCreateArgs} args - Arguments to create a VirtualCi.
     * @example
     * // Create one VirtualCi
     * const VirtualCi = await prisma.virtualCi.create({
     *   data: {
     *     // ... data to create a VirtualCi
     *   }
     * })
     * 
     */
    create<T extends VirtualCiCreateArgs>(args: SelectSubset<T, VirtualCiCreateArgs<ExtArgs>>): Prisma__VirtualCiClient<$Result.GetResult<Prisma.$VirtualCiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VirtualCis.
     * @param {VirtualCiCreateManyArgs} args - Arguments to create many VirtualCis.
     * @example
     * // Create many VirtualCis
     * const virtualCi = await prisma.virtualCi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VirtualCiCreateManyArgs>(args?: SelectSubset<T, VirtualCiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VirtualCis and returns the data saved in the database.
     * @param {VirtualCiCreateManyAndReturnArgs} args - Arguments to create many VirtualCis.
     * @example
     * // Create many VirtualCis
     * const virtualCi = await prisma.virtualCi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VirtualCis and only return the `ciId`
     * const virtualCiWithCiIdOnly = await prisma.virtualCi.createManyAndReturn({
     *   select: { ciId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VirtualCiCreateManyAndReturnArgs>(args?: SelectSubset<T, VirtualCiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VirtualCiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a VirtualCi.
     * @param {VirtualCiDeleteArgs} args - Arguments to delete one VirtualCi.
     * @example
     * // Delete one VirtualCi
     * const VirtualCi = await prisma.virtualCi.delete({
     *   where: {
     *     // ... filter to delete one VirtualCi
     *   }
     * })
     * 
     */
    delete<T extends VirtualCiDeleteArgs>(args: SelectSubset<T, VirtualCiDeleteArgs<ExtArgs>>): Prisma__VirtualCiClient<$Result.GetResult<Prisma.$VirtualCiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VirtualCi.
     * @param {VirtualCiUpdateArgs} args - Arguments to update one VirtualCi.
     * @example
     * // Update one VirtualCi
     * const virtualCi = await prisma.virtualCi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VirtualCiUpdateArgs>(args: SelectSubset<T, VirtualCiUpdateArgs<ExtArgs>>): Prisma__VirtualCiClient<$Result.GetResult<Prisma.$VirtualCiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VirtualCis.
     * @param {VirtualCiDeleteManyArgs} args - Arguments to filter VirtualCis to delete.
     * @example
     * // Delete a few VirtualCis
     * const { count } = await prisma.virtualCi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VirtualCiDeleteManyArgs>(args?: SelectSubset<T, VirtualCiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VirtualCis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualCiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VirtualCis
     * const virtualCi = await prisma.virtualCi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VirtualCiUpdateManyArgs>(args: SelectSubset<T, VirtualCiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VirtualCis and returns the data updated in the database.
     * @param {VirtualCiUpdateManyAndReturnArgs} args - Arguments to update many VirtualCis.
     * @example
     * // Update many VirtualCis
     * const virtualCi = await prisma.virtualCi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more VirtualCis and only return the `ciId`
     * const virtualCiWithCiIdOnly = await prisma.virtualCi.updateManyAndReturn({
     *   select: { ciId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VirtualCiUpdateManyAndReturnArgs>(args: SelectSubset<T, VirtualCiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VirtualCiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one VirtualCi.
     * @param {VirtualCiUpsertArgs} args - Arguments to update or create a VirtualCi.
     * @example
     * // Update or create a VirtualCi
     * const virtualCi = await prisma.virtualCi.upsert({
     *   create: {
     *     // ... data to create a VirtualCi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VirtualCi we want to update
     *   }
     * })
     */
    upsert<T extends VirtualCiUpsertArgs>(args: SelectSubset<T, VirtualCiUpsertArgs<ExtArgs>>): Prisma__VirtualCiClient<$Result.GetResult<Prisma.$VirtualCiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VirtualCis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualCiCountArgs} args - Arguments to filter VirtualCis to count.
     * @example
     * // Count the number of VirtualCis
     * const count = await prisma.virtualCi.count({
     *   where: {
     *     // ... the filter for the VirtualCis we want to count
     *   }
     * })
    **/
    count<T extends VirtualCiCountArgs>(
      args?: Subset<T, VirtualCiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VirtualCiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VirtualCi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualCiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VirtualCiAggregateArgs>(args: Subset<T, VirtualCiAggregateArgs>): Prisma.PrismaPromise<GetVirtualCiAggregateType<T>>

    /**
     * Group by VirtualCi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualCiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VirtualCiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VirtualCiGroupByArgs['orderBy'] }
        : { orderBy?: VirtualCiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VirtualCiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVirtualCiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VirtualCi model
   */
  readonly fields: VirtualCiFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for VirtualCi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VirtualCiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    configurationItem<T extends ConfigurationItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItemDefaultArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VirtualCi model
   */
  interface VirtualCiFieldRefs {
    readonly ciId: FieldRef<"VirtualCi", 'String'>
    readonly hypervisorType: FieldRef<"VirtualCi", 'String'>
    readonly hostCiId: FieldRef<"VirtualCi", 'String'>
    readonly allocatedCpu: FieldRef<"VirtualCi", 'Int'>
    readonly allocatedMemory: FieldRef<"VirtualCi", 'String'>
    readonly allocatedStorage: FieldRef<"VirtualCi", 'String'>
    readonly virtualNetworks: FieldRef<"VirtualCi", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * VirtualCi findUnique
   */
  export type VirtualCiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualCi
     */
    select?: VirtualCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualCi
     */
    omit?: VirtualCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualCiInclude<ExtArgs> | null
    /**
     * Filter, which VirtualCi to fetch.
     */
    where: VirtualCiWhereUniqueInput
  }

  /**
   * VirtualCi findUniqueOrThrow
   */
  export type VirtualCiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualCi
     */
    select?: VirtualCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualCi
     */
    omit?: VirtualCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualCiInclude<ExtArgs> | null
    /**
     * Filter, which VirtualCi to fetch.
     */
    where: VirtualCiWhereUniqueInput
  }

  /**
   * VirtualCi findFirst
   */
  export type VirtualCiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualCi
     */
    select?: VirtualCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualCi
     */
    omit?: VirtualCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualCiInclude<ExtArgs> | null
    /**
     * Filter, which VirtualCi to fetch.
     */
    where?: VirtualCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VirtualCis to fetch.
     */
    orderBy?: VirtualCiOrderByWithRelationInput | VirtualCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VirtualCis.
     */
    cursor?: VirtualCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VirtualCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VirtualCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VirtualCis.
     */
    distinct?: VirtualCiScalarFieldEnum | VirtualCiScalarFieldEnum[]
  }

  /**
   * VirtualCi findFirstOrThrow
   */
  export type VirtualCiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualCi
     */
    select?: VirtualCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualCi
     */
    omit?: VirtualCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualCiInclude<ExtArgs> | null
    /**
     * Filter, which VirtualCi to fetch.
     */
    where?: VirtualCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VirtualCis to fetch.
     */
    orderBy?: VirtualCiOrderByWithRelationInput | VirtualCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VirtualCis.
     */
    cursor?: VirtualCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VirtualCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VirtualCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VirtualCis.
     */
    distinct?: VirtualCiScalarFieldEnum | VirtualCiScalarFieldEnum[]
  }

  /**
   * VirtualCi findMany
   */
  export type VirtualCiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualCi
     */
    select?: VirtualCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualCi
     */
    omit?: VirtualCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualCiInclude<ExtArgs> | null
    /**
     * Filter, which VirtualCis to fetch.
     */
    where?: VirtualCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VirtualCis to fetch.
     */
    orderBy?: VirtualCiOrderByWithRelationInput | VirtualCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VirtualCis.
     */
    cursor?: VirtualCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VirtualCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VirtualCis.
     */
    skip?: number
    distinct?: VirtualCiScalarFieldEnum | VirtualCiScalarFieldEnum[]
  }

  /**
   * VirtualCi create
   */
  export type VirtualCiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualCi
     */
    select?: VirtualCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualCi
     */
    omit?: VirtualCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualCiInclude<ExtArgs> | null
    /**
     * The data needed to create a VirtualCi.
     */
    data: XOR<VirtualCiCreateInput, VirtualCiUncheckedCreateInput>
  }

  /**
   * VirtualCi createMany
   */
  export type VirtualCiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VirtualCis.
     */
    data: VirtualCiCreateManyInput | VirtualCiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VirtualCi createManyAndReturn
   */
  export type VirtualCiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualCi
     */
    select?: VirtualCiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualCi
     */
    omit?: VirtualCiOmit<ExtArgs> | null
    /**
     * The data used to create many VirtualCis.
     */
    data: VirtualCiCreateManyInput | VirtualCiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualCiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * VirtualCi update
   */
  export type VirtualCiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualCi
     */
    select?: VirtualCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualCi
     */
    omit?: VirtualCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualCiInclude<ExtArgs> | null
    /**
     * The data needed to update a VirtualCi.
     */
    data: XOR<VirtualCiUpdateInput, VirtualCiUncheckedUpdateInput>
    /**
     * Choose, which VirtualCi to update.
     */
    where: VirtualCiWhereUniqueInput
  }

  /**
   * VirtualCi updateMany
   */
  export type VirtualCiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VirtualCis.
     */
    data: XOR<VirtualCiUpdateManyMutationInput, VirtualCiUncheckedUpdateManyInput>
    /**
     * Filter which VirtualCis to update
     */
    where?: VirtualCiWhereInput
    /**
     * Limit how many VirtualCis to update.
     */
    limit?: number
  }

  /**
   * VirtualCi updateManyAndReturn
   */
  export type VirtualCiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualCi
     */
    select?: VirtualCiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualCi
     */
    omit?: VirtualCiOmit<ExtArgs> | null
    /**
     * The data used to update VirtualCis.
     */
    data: XOR<VirtualCiUpdateManyMutationInput, VirtualCiUncheckedUpdateManyInput>
    /**
     * Filter which VirtualCis to update
     */
    where?: VirtualCiWhereInput
    /**
     * Limit how many VirtualCis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualCiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * VirtualCi upsert
   */
  export type VirtualCiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualCi
     */
    select?: VirtualCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualCi
     */
    omit?: VirtualCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualCiInclude<ExtArgs> | null
    /**
     * The filter to search for the VirtualCi to update in case it exists.
     */
    where: VirtualCiWhereUniqueInput
    /**
     * In case the VirtualCi found by the `where` argument doesn't exist, create a new VirtualCi with this data.
     */
    create: XOR<VirtualCiCreateInput, VirtualCiUncheckedCreateInput>
    /**
     * In case the VirtualCi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VirtualCiUpdateInput, VirtualCiUncheckedUpdateInput>
  }

  /**
   * VirtualCi delete
   */
  export type VirtualCiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualCi
     */
    select?: VirtualCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualCi
     */
    omit?: VirtualCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualCiInclude<ExtArgs> | null
    /**
     * Filter which VirtualCi to delete.
     */
    where: VirtualCiWhereUniqueInput
  }

  /**
   * VirtualCi deleteMany
   */
  export type VirtualCiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VirtualCis to delete
     */
    where?: VirtualCiWhereInput
    /**
     * Limit how many VirtualCis to delete.
     */
    limit?: number
  }

  /**
   * VirtualCi without action
   */
  export type VirtualCiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualCi
     */
    select?: VirtualCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualCi
     */
    omit?: VirtualCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualCiInclude<ExtArgs> | null
  }


  /**
   * Model FacilityCi
   */

  export type AggregateFacilityCi = {
    _count: FacilityCiCountAggregateOutputType | null
    _avg: FacilityCiAvgAggregateOutputType | null
    _sum: FacilityCiSumAggregateOutputType | null
    _min: FacilityCiMinAggregateOutputType | null
    _max: FacilityCiMaxAggregateOutputType | null
  }

  export type FacilityCiAvgAggregateOutputType = {
    squareFootage: number | null
    capacity: number | null
  }

  export type FacilityCiSumAggregateOutputType = {
    squareFootage: number | null
    capacity: number | null
  }

  export type FacilityCiMinAggregateOutputType = {
    ciId: string | null
    facilityType: string | null
    address: string | null
    coordinates: string | null
    squareFootage: number | null
    capacity: number | null
    powerCapacity: string | null
    coolingCapacity: string | null
  }

  export type FacilityCiMaxAggregateOutputType = {
    ciId: string | null
    facilityType: string | null
    address: string | null
    coordinates: string | null
    squareFootage: number | null
    capacity: number | null
    powerCapacity: string | null
    coolingCapacity: string | null
  }

  export type FacilityCiCountAggregateOutputType = {
    ciId: number
    facilityType: number
    address: number
    coordinates: number
    squareFootage: number
    capacity: number
    powerCapacity: number
    coolingCapacity: number
    _all: number
  }


  export type FacilityCiAvgAggregateInputType = {
    squareFootage?: true
    capacity?: true
  }

  export type FacilityCiSumAggregateInputType = {
    squareFootage?: true
    capacity?: true
  }

  export type FacilityCiMinAggregateInputType = {
    ciId?: true
    facilityType?: true
    address?: true
    coordinates?: true
    squareFootage?: true
    capacity?: true
    powerCapacity?: true
    coolingCapacity?: true
  }

  export type FacilityCiMaxAggregateInputType = {
    ciId?: true
    facilityType?: true
    address?: true
    coordinates?: true
    squareFootage?: true
    capacity?: true
    powerCapacity?: true
    coolingCapacity?: true
  }

  export type FacilityCiCountAggregateInputType = {
    ciId?: true
    facilityType?: true
    address?: true
    coordinates?: true
    squareFootage?: true
    capacity?: true
    powerCapacity?: true
    coolingCapacity?: true
    _all?: true
  }

  export type FacilityCiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FacilityCi to aggregate.
     */
    where?: FacilityCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FacilityCis to fetch.
     */
    orderBy?: FacilityCiOrderByWithRelationInput | FacilityCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FacilityCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FacilityCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FacilityCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FacilityCis
    **/
    _count?: true | FacilityCiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FacilityCiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FacilityCiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FacilityCiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FacilityCiMaxAggregateInputType
  }

  export type GetFacilityCiAggregateType<T extends FacilityCiAggregateArgs> = {
        [P in keyof T & keyof AggregateFacilityCi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFacilityCi[P]>
      : GetScalarType<T[P], AggregateFacilityCi[P]>
  }




  export type FacilityCiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FacilityCiWhereInput
    orderBy?: FacilityCiOrderByWithAggregationInput | FacilityCiOrderByWithAggregationInput[]
    by: FacilityCiScalarFieldEnum[] | FacilityCiScalarFieldEnum
    having?: FacilityCiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FacilityCiCountAggregateInputType | true
    _avg?: FacilityCiAvgAggregateInputType
    _sum?: FacilityCiSumAggregateInputType
    _min?: FacilityCiMinAggregateInputType
    _max?: FacilityCiMaxAggregateInputType
  }

  export type FacilityCiGroupByOutputType = {
    ciId: string
    facilityType: string | null
    address: string | null
    coordinates: string | null
    squareFootage: number | null
    capacity: number | null
    powerCapacity: string | null
    coolingCapacity: string | null
    _count: FacilityCiCountAggregateOutputType | null
    _avg: FacilityCiAvgAggregateOutputType | null
    _sum: FacilityCiSumAggregateOutputType | null
    _min: FacilityCiMinAggregateOutputType | null
    _max: FacilityCiMaxAggregateOutputType | null
  }

  type GetFacilityCiGroupByPayload<T extends FacilityCiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FacilityCiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FacilityCiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FacilityCiGroupByOutputType[P]>
            : GetScalarType<T[P], FacilityCiGroupByOutputType[P]>
        }
      >
    >


  export type FacilityCiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    facilityType?: boolean
    address?: boolean
    coordinates?: boolean
    squareFootage?: boolean
    capacity?: boolean
    powerCapacity?: boolean
    coolingCapacity?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["facilityCi"]>

  export type FacilityCiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    facilityType?: boolean
    address?: boolean
    coordinates?: boolean
    squareFootage?: boolean
    capacity?: boolean
    powerCapacity?: boolean
    coolingCapacity?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["facilityCi"]>

  export type FacilityCiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    facilityType?: boolean
    address?: boolean
    coordinates?: boolean
    squareFootage?: boolean
    capacity?: boolean
    powerCapacity?: boolean
    coolingCapacity?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["facilityCi"]>

  export type FacilityCiSelectScalar = {
    ciId?: boolean
    facilityType?: boolean
    address?: boolean
    coordinates?: boolean
    squareFootage?: boolean
    capacity?: boolean
    powerCapacity?: boolean
    coolingCapacity?: boolean
  }

  export type FacilityCiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ciId" | "facilityType" | "address" | "coordinates" | "squareFootage" | "capacity" | "powerCapacity" | "coolingCapacity", ExtArgs["result"]["facilityCi"]>
  export type FacilityCiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type FacilityCiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type FacilityCiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }

  export type $FacilityCiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FacilityCi"
    objects: {
      configurationItem: Prisma.$ConfigurationItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      ciId: string
      facilityType: string | null
      address: string | null
      coordinates: string | null
      squareFootage: number | null
      capacity: number | null
      powerCapacity: string | null
      coolingCapacity: string | null
    }, ExtArgs["result"]["facilityCi"]>
    composites: {}
  }

  type FacilityCiGetPayload<S extends boolean | null | undefined | FacilityCiDefaultArgs> = $Result.GetResult<Prisma.$FacilityCiPayload, S>

  type FacilityCiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FacilityCiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FacilityCiCountAggregateInputType | true
    }

  export interface FacilityCiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FacilityCi'], meta: { name: 'FacilityCi' } }
    /**
     * Find zero or one FacilityCi that matches the filter.
     * @param {FacilityCiFindUniqueArgs} args - Arguments to find a FacilityCi
     * @example
     * // Get one FacilityCi
     * const facilityCi = await prisma.facilityCi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FacilityCiFindUniqueArgs>(args: SelectSubset<T, FacilityCiFindUniqueArgs<ExtArgs>>): Prisma__FacilityCiClient<$Result.GetResult<Prisma.$FacilityCiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FacilityCi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FacilityCiFindUniqueOrThrowArgs} args - Arguments to find a FacilityCi
     * @example
     * // Get one FacilityCi
     * const facilityCi = await prisma.facilityCi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FacilityCiFindUniqueOrThrowArgs>(args: SelectSubset<T, FacilityCiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FacilityCiClient<$Result.GetResult<Prisma.$FacilityCiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FacilityCi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacilityCiFindFirstArgs} args - Arguments to find a FacilityCi
     * @example
     * // Get one FacilityCi
     * const facilityCi = await prisma.facilityCi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FacilityCiFindFirstArgs>(args?: SelectSubset<T, FacilityCiFindFirstArgs<ExtArgs>>): Prisma__FacilityCiClient<$Result.GetResult<Prisma.$FacilityCiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FacilityCi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacilityCiFindFirstOrThrowArgs} args - Arguments to find a FacilityCi
     * @example
     * // Get one FacilityCi
     * const facilityCi = await prisma.facilityCi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FacilityCiFindFirstOrThrowArgs>(args?: SelectSubset<T, FacilityCiFindFirstOrThrowArgs<ExtArgs>>): Prisma__FacilityCiClient<$Result.GetResult<Prisma.$FacilityCiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FacilityCis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacilityCiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FacilityCis
     * const facilityCis = await prisma.facilityCi.findMany()
     * 
     * // Get first 10 FacilityCis
     * const facilityCis = await prisma.facilityCi.findMany({ take: 10 })
     * 
     * // Only select the `ciId`
     * const facilityCiWithCiIdOnly = await prisma.facilityCi.findMany({ select: { ciId: true } })
     * 
     */
    findMany<T extends FacilityCiFindManyArgs>(args?: SelectSubset<T, FacilityCiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FacilityCiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FacilityCi.
     * @param {FacilityCiCreateArgs} args - Arguments to create a FacilityCi.
     * @example
     * // Create one FacilityCi
     * const FacilityCi = await prisma.facilityCi.create({
     *   data: {
     *     // ... data to create a FacilityCi
     *   }
     * })
     * 
     */
    create<T extends FacilityCiCreateArgs>(args: SelectSubset<T, FacilityCiCreateArgs<ExtArgs>>): Prisma__FacilityCiClient<$Result.GetResult<Prisma.$FacilityCiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FacilityCis.
     * @param {FacilityCiCreateManyArgs} args - Arguments to create many FacilityCis.
     * @example
     * // Create many FacilityCis
     * const facilityCi = await prisma.facilityCi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FacilityCiCreateManyArgs>(args?: SelectSubset<T, FacilityCiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FacilityCis and returns the data saved in the database.
     * @param {FacilityCiCreateManyAndReturnArgs} args - Arguments to create many FacilityCis.
     * @example
     * // Create many FacilityCis
     * const facilityCi = await prisma.facilityCi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FacilityCis and only return the `ciId`
     * const facilityCiWithCiIdOnly = await prisma.facilityCi.createManyAndReturn({
     *   select: { ciId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FacilityCiCreateManyAndReturnArgs>(args?: SelectSubset<T, FacilityCiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FacilityCiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FacilityCi.
     * @param {FacilityCiDeleteArgs} args - Arguments to delete one FacilityCi.
     * @example
     * // Delete one FacilityCi
     * const FacilityCi = await prisma.facilityCi.delete({
     *   where: {
     *     // ... filter to delete one FacilityCi
     *   }
     * })
     * 
     */
    delete<T extends FacilityCiDeleteArgs>(args: SelectSubset<T, FacilityCiDeleteArgs<ExtArgs>>): Prisma__FacilityCiClient<$Result.GetResult<Prisma.$FacilityCiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FacilityCi.
     * @param {FacilityCiUpdateArgs} args - Arguments to update one FacilityCi.
     * @example
     * // Update one FacilityCi
     * const facilityCi = await prisma.facilityCi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FacilityCiUpdateArgs>(args: SelectSubset<T, FacilityCiUpdateArgs<ExtArgs>>): Prisma__FacilityCiClient<$Result.GetResult<Prisma.$FacilityCiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FacilityCis.
     * @param {FacilityCiDeleteManyArgs} args - Arguments to filter FacilityCis to delete.
     * @example
     * // Delete a few FacilityCis
     * const { count } = await prisma.facilityCi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FacilityCiDeleteManyArgs>(args?: SelectSubset<T, FacilityCiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FacilityCis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacilityCiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FacilityCis
     * const facilityCi = await prisma.facilityCi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FacilityCiUpdateManyArgs>(args: SelectSubset<T, FacilityCiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FacilityCis and returns the data updated in the database.
     * @param {FacilityCiUpdateManyAndReturnArgs} args - Arguments to update many FacilityCis.
     * @example
     * // Update many FacilityCis
     * const facilityCi = await prisma.facilityCi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FacilityCis and only return the `ciId`
     * const facilityCiWithCiIdOnly = await prisma.facilityCi.updateManyAndReturn({
     *   select: { ciId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FacilityCiUpdateManyAndReturnArgs>(args: SelectSubset<T, FacilityCiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FacilityCiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FacilityCi.
     * @param {FacilityCiUpsertArgs} args - Arguments to update or create a FacilityCi.
     * @example
     * // Update or create a FacilityCi
     * const facilityCi = await prisma.facilityCi.upsert({
     *   create: {
     *     // ... data to create a FacilityCi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FacilityCi we want to update
     *   }
     * })
     */
    upsert<T extends FacilityCiUpsertArgs>(args: SelectSubset<T, FacilityCiUpsertArgs<ExtArgs>>): Prisma__FacilityCiClient<$Result.GetResult<Prisma.$FacilityCiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FacilityCis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacilityCiCountArgs} args - Arguments to filter FacilityCis to count.
     * @example
     * // Count the number of FacilityCis
     * const count = await prisma.facilityCi.count({
     *   where: {
     *     // ... the filter for the FacilityCis we want to count
     *   }
     * })
    **/
    count<T extends FacilityCiCountArgs>(
      args?: Subset<T, FacilityCiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FacilityCiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FacilityCi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacilityCiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FacilityCiAggregateArgs>(args: Subset<T, FacilityCiAggregateArgs>): Prisma.PrismaPromise<GetFacilityCiAggregateType<T>>

    /**
     * Group by FacilityCi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacilityCiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FacilityCiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FacilityCiGroupByArgs['orderBy'] }
        : { orderBy?: FacilityCiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FacilityCiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFacilityCiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FacilityCi model
   */
  readonly fields: FacilityCiFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for FacilityCi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FacilityCiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    configurationItem<T extends ConfigurationItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItemDefaultArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FacilityCi model
   */
  interface FacilityCiFieldRefs {
    readonly ciId: FieldRef<"FacilityCi", 'String'>
    readonly facilityType: FieldRef<"FacilityCi", 'String'>
    readonly address: FieldRef<"FacilityCi", 'String'>
    readonly coordinates: FieldRef<"FacilityCi", 'String'>
    readonly squareFootage: FieldRef<"FacilityCi", 'Int'>
    readonly capacity: FieldRef<"FacilityCi", 'Int'>
    readonly powerCapacity: FieldRef<"FacilityCi", 'String'>
    readonly coolingCapacity: FieldRef<"FacilityCi", 'String'>
  }
    

  // Custom InputTypes
  /**
   * FacilityCi findUnique
   */
  export type FacilityCiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FacilityCi
     */
    select?: FacilityCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FacilityCi
     */
    omit?: FacilityCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityCiInclude<ExtArgs> | null
    /**
     * Filter, which FacilityCi to fetch.
     */
    where: FacilityCiWhereUniqueInput
  }

  /**
   * FacilityCi findUniqueOrThrow
   */
  export type FacilityCiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FacilityCi
     */
    select?: FacilityCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FacilityCi
     */
    omit?: FacilityCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityCiInclude<ExtArgs> | null
    /**
     * Filter, which FacilityCi to fetch.
     */
    where: FacilityCiWhereUniqueInput
  }

  /**
   * FacilityCi findFirst
   */
  export type FacilityCiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FacilityCi
     */
    select?: FacilityCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FacilityCi
     */
    omit?: FacilityCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityCiInclude<ExtArgs> | null
    /**
     * Filter, which FacilityCi to fetch.
     */
    where?: FacilityCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FacilityCis to fetch.
     */
    orderBy?: FacilityCiOrderByWithRelationInput | FacilityCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FacilityCis.
     */
    cursor?: FacilityCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FacilityCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FacilityCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FacilityCis.
     */
    distinct?: FacilityCiScalarFieldEnum | FacilityCiScalarFieldEnum[]
  }

  /**
   * FacilityCi findFirstOrThrow
   */
  export type FacilityCiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FacilityCi
     */
    select?: FacilityCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FacilityCi
     */
    omit?: FacilityCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityCiInclude<ExtArgs> | null
    /**
     * Filter, which FacilityCi to fetch.
     */
    where?: FacilityCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FacilityCis to fetch.
     */
    orderBy?: FacilityCiOrderByWithRelationInput | FacilityCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FacilityCis.
     */
    cursor?: FacilityCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FacilityCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FacilityCis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FacilityCis.
     */
    distinct?: FacilityCiScalarFieldEnum | FacilityCiScalarFieldEnum[]
  }

  /**
   * FacilityCi findMany
   */
  export type FacilityCiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FacilityCi
     */
    select?: FacilityCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FacilityCi
     */
    omit?: FacilityCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityCiInclude<ExtArgs> | null
    /**
     * Filter, which FacilityCis to fetch.
     */
    where?: FacilityCiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FacilityCis to fetch.
     */
    orderBy?: FacilityCiOrderByWithRelationInput | FacilityCiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FacilityCis.
     */
    cursor?: FacilityCiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FacilityCis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FacilityCis.
     */
    skip?: number
    distinct?: FacilityCiScalarFieldEnum | FacilityCiScalarFieldEnum[]
  }

  /**
   * FacilityCi create
   */
  export type FacilityCiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FacilityCi
     */
    select?: FacilityCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FacilityCi
     */
    omit?: FacilityCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityCiInclude<ExtArgs> | null
    /**
     * The data needed to create a FacilityCi.
     */
    data: XOR<FacilityCiCreateInput, FacilityCiUncheckedCreateInput>
  }

  /**
   * FacilityCi createMany
   */
  export type FacilityCiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FacilityCis.
     */
    data: FacilityCiCreateManyInput | FacilityCiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FacilityCi createManyAndReturn
   */
  export type FacilityCiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FacilityCi
     */
    select?: FacilityCiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FacilityCi
     */
    omit?: FacilityCiOmit<ExtArgs> | null
    /**
     * The data used to create many FacilityCis.
     */
    data: FacilityCiCreateManyInput | FacilityCiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityCiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FacilityCi update
   */
  export type FacilityCiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FacilityCi
     */
    select?: FacilityCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FacilityCi
     */
    omit?: FacilityCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityCiInclude<ExtArgs> | null
    /**
     * The data needed to update a FacilityCi.
     */
    data: XOR<FacilityCiUpdateInput, FacilityCiUncheckedUpdateInput>
    /**
     * Choose, which FacilityCi to update.
     */
    where: FacilityCiWhereUniqueInput
  }

  /**
   * FacilityCi updateMany
   */
  export type FacilityCiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FacilityCis.
     */
    data: XOR<FacilityCiUpdateManyMutationInput, FacilityCiUncheckedUpdateManyInput>
    /**
     * Filter which FacilityCis to update
     */
    where?: FacilityCiWhereInput
    /**
     * Limit how many FacilityCis to update.
     */
    limit?: number
  }

  /**
   * FacilityCi updateManyAndReturn
   */
  export type FacilityCiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FacilityCi
     */
    select?: FacilityCiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FacilityCi
     */
    omit?: FacilityCiOmit<ExtArgs> | null
    /**
     * The data used to update FacilityCis.
     */
    data: XOR<FacilityCiUpdateManyMutationInput, FacilityCiUncheckedUpdateManyInput>
    /**
     * Filter which FacilityCis to update
     */
    where?: FacilityCiWhereInput
    /**
     * Limit how many FacilityCis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityCiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FacilityCi upsert
   */
  export type FacilityCiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FacilityCi
     */
    select?: FacilityCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FacilityCi
     */
    omit?: FacilityCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityCiInclude<ExtArgs> | null
    /**
     * The filter to search for the FacilityCi to update in case it exists.
     */
    where: FacilityCiWhereUniqueInput
    /**
     * In case the FacilityCi found by the `where` argument doesn't exist, create a new FacilityCi with this data.
     */
    create: XOR<FacilityCiCreateInput, FacilityCiUncheckedCreateInput>
    /**
     * In case the FacilityCi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FacilityCiUpdateInput, FacilityCiUncheckedUpdateInput>
  }

  /**
   * FacilityCi delete
   */
  export type FacilityCiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FacilityCi
     */
    select?: FacilityCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FacilityCi
     */
    omit?: FacilityCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityCiInclude<ExtArgs> | null
    /**
     * Filter which FacilityCi to delete.
     */
    where: FacilityCiWhereUniqueInput
  }

  /**
   * FacilityCi deleteMany
   */
  export type FacilityCiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FacilityCis to delete
     */
    where?: FacilityCiWhereInput
    /**
     * Limit how many FacilityCis to delete.
     */
    limit?: number
  }

  /**
   * FacilityCi without action
   */
  export type FacilityCiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FacilityCi
     */
    select?: FacilityCiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FacilityCi
     */
    omit?: FacilityCiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacilityCiInclude<ExtArgs> | null
  }


  /**
   * Model BusinessService
   */

  export type AggregateBusinessService = {
    _count: BusinessServiceCountAggregateOutputType | null
    _avg: BusinessServiceAvgAggregateOutputType | null
    _sum: BusinessServiceSumAggregateOutputType | null
    _min: BusinessServiceMinAggregateOutputType | null
    _max: BusinessServiceMaxAggregateOutputType | null
  }

  export type BusinessServiceAvgAggregateOutputType = {
    availabilityTarget: Decimal | null
  }

  export type BusinessServiceSumAggregateOutputType = {
    availabilityTarget: Decimal | null
  }

  export type BusinessServiceMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    businessOwner: string | null
    technicalOwner: string | null
    criticality: string | null
    availabilityTarget: Decimal | null
    performanceTarget: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessServiceMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    businessOwner: string | null
    technicalOwner: string | null
    criticality: string | null
    availabilityTarget: Decimal | null
    performanceTarget: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessServiceCountAggregateOutputType = {
    id: number
    name: number
    description: number
    businessOwner: number
    technicalOwner: number
    criticality: number
    availabilityTarget: number
    performanceTarget: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BusinessServiceAvgAggregateInputType = {
    availabilityTarget?: true
  }

  export type BusinessServiceSumAggregateInputType = {
    availabilityTarget?: true
  }

  export type BusinessServiceMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    businessOwner?: true
    technicalOwner?: true
    criticality?: true
    availabilityTarget?: true
    performanceTarget?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessServiceMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    businessOwner?: true
    technicalOwner?: true
    criticality?: true
    availabilityTarget?: true
    performanceTarget?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessServiceCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    businessOwner?: true
    technicalOwner?: true
    criticality?: true
    availabilityTarget?: true
    performanceTarget?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BusinessServiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessService to aggregate.
     */
    where?: BusinessServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessServices to fetch.
     */
    orderBy?: BusinessServiceOrderByWithRelationInput | BusinessServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BusinessServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessServices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BusinessServices
    **/
    _count?: true | BusinessServiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BusinessServiceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BusinessServiceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BusinessServiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BusinessServiceMaxAggregateInputType
  }

  export type GetBusinessServiceAggregateType<T extends BusinessServiceAggregateArgs> = {
        [P in keyof T & keyof AggregateBusinessService]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusinessService[P]>
      : GetScalarType<T[P], AggregateBusinessService[P]>
  }




  export type BusinessServiceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessServiceWhereInput
    orderBy?: BusinessServiceOrderByWithAggregationInput | BusinessServiceOrderByWithAggregationInput[]
    by: BusinessServiceScalarFieldEnum[] | BusinessServiceScalarFieldEnum
    having?: BusinessServiceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BusinessServiceCountAggregateInputType | true
    _avg?: BusinessServiceAvgAggregateInputType
    _sum?: BusinessServiceSumAggregateInputType
    _min?: BusinessServiceMinAggregateInputType
    _max?: BusinessServiceMaxAggregateInputType
  }

  export type BusinessServiceGroupByOutputType = {
    id: string
    name: string
    description: string | null
    businessOwner: string | null
    technicalOwner: string | null
    criticality: string | null
    availabilityTarget: Decimal | null
    performanceTarget: string | null
    createdAt: Date
    updatedAt: Date
    _count: BusinessServiceCountAggregateOutputType | null
    _avg: BusinessServiceAvgAggregateOutputType | null
    _sum: BusinessServiceSumAggregateOutputType | null
    _min: BusinessServiceMinAggregateOutputType | null
    _max: BusinessServiceMaxAggregateOutputType | null
  }

  type GetBusinessServiceGroupByPayload<T extends BusinessServiceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BusinessServiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BusinessServiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BusinessServiceGroupByOutputType[P]>
            : GetScalarType<T[P], BusinessServiceGroupByOutputType[P]>
        }
      >
    >


  export type BusinessServiceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    businessOwner?: boolean
    technicalOwner?: boolean
    criticality?: boolean
    availabilityTarget?: boolean
    performanceTarget?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    configurationItems?: boolean | BusinessService$configurationItemsArgs<ExtArgs>
    _count?: boolean | BusinessServiceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessService"]>

  export type BusinessServiceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    businessOwner?: boolean
    technicalOwner?: boolean
    criticality?: boolean
    availabilityTarget?: boolean
    performanceTarget?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["businessService"]>

  export type BusinessServiceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    businessOwner?: boolean
    technicalOwner?: boolean
    criticality?: boolean
    availabilityTarget?: boolean
    performanceTarget?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["businessService"]>

  export type BusinessServiceSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    businessOwner?: boolean
    technicalOwner?: boolean
    criticality?: boolean
    availabilityTarget?: boolean
    performanceTarget?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BusinessServiceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "businessOwner" | "technicalOwner" | "criticality" | "availabilityTarget" | "performanceTarget" | "createdAt" | "updatedAt", ExtArgs["result"]["businessService"]>
  export type BusinessServiceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItems?: boolean | BusinessService$configurationItemsArgs<ExtArgs>
    _count?: boolean | BusinessServiceCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BusinessServiceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type BusinessServiceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $BusinessServicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BusinessService"
    objects: {
      configurationItems: Prisma.$CiBusinessServicePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      businessOwner: string | null
      technicalOwner: string | null
      criticality: string | null
      availabilityTarget: Prisma.Decimal | null
      performanceTarget: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["businessService"]>
    composites: {}
  }

  type BusinessServiceGetPayload<S extends boolean | null | undefined | BusinessServiceDefaultArgs> = $Result.GetResult<Prisma.$BusinessServicePayload, S>

  type BusinessServiceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BusinessServiceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BusinessServiceCountAggregateInputType | true
    }

  export interface BusinessServiceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BusinessService'], meta: { name: 'BusinessService' } }
    /**
     * Find zero or one BusinessService that matches the filter.
     * @param {BusinessServiceFindUniqueArgs} args - Arguments to find a BusinessService
     * @example
     * // Get one BusinessService
     * const businessService = await prisma.businessService.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BusinessServiceFindUniqueArgs>(args: SelectSubset<T, BusinessServiceFindUniqueArgs<ExtArgs>>): Prisma__BusinessServiceClient<$Result.GetResult<Prisma.$BusinessServicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BusinessService that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BusinessServiceFindUniqueOrThrowArgs} args - Arguments to find a BusinessService
     * @example
     * // Get one BusinessService
     * const businessService = await prisma.businessService.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BusinessServiceFindUniqueOrThrowArgs>(args: SelectSubset<T, BusinessServiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BusinessServiceClient<$Result.GetResult<Prisma.$BusinessServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessService that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessServiceFindFirstArgs} args - Arguments to find a BusinessService
     * @example
     * // Get one BusinessService
     * const businessService = await prisma.businessService.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BusinessServiceFindFirstArgs>(args?: SelectSubset<T, BusinessServiceFindFirstArgs<ExtArgs>>): Prisma__BusinessServiceClient<$Result.GetResult<Prisma.$BusinessServicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BusinessService that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessServiceFindFirstOrThrowArgs} args - Arguments to find a BusinessService
     * @example
     * // Get one BusinessService
     * const businessService = await prisma.businessService.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BusinessServiceFindFirstOrThrowArgs>(args?: SelectSubset<T, BusinessServiceFindFirstOrThrowArgs<ExtArgs>>): Prisma__BusinessServiceClient<$Result.GetResult<Prisma.$BusinessServicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BusinessServices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessServiceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BusinessServices
     * const businessServices = await prisma.businessService.findMany()
     * 
     * // Get first 10 BusinessServices
     * const businessServices = await prisma.businessService.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const businessServiceWithIdOnly = await prisma.businessService.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BusinessServiceFindManyArgs>(args?: SelectSubset<T, BusinessServiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessServicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BusinessService.
     * @param {BusinessServiceCreateArgs} args - Arguments to create a BusinessService.
     * @example
     * // Create one BusinessService
     * const BusinessService = await prisma.businessService.create({
     *   data: {
     *     // ... data to create a BusinessService
     *   }
     * })
     * 
     */
    create<T extends BusinessServiceCreateArgs>(args: SelectSubset<T, BusinessServiceCreateArgs<ExtArgs>>): Prisma__BusinessServiceClient<$Result.GetResult<Prisma.$BusinessServicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BusinessServices.
     * @param {BusinessServiceCreateManyArgs} args - Arguments to create many BusinessServices.
     * @example
     * // Create many BusinessServices
     * const businessService = await prisma.businessService.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BusinessServiceCreateManyArgs>(args?: SelectSubset<T, BusinessServiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BusinessServices and returns the data saved in the database.
     * @param {BusinessServiceCreateManyAndReturnArgs} args - Arguments to create many BusinessServices.
     * @example
     * // Create many BusinessServices
     * const businessService = await prisma.businessService.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BusinessServices and only return the `id`
     * const businessServiceWithIdOnly = await prisma.businessService.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BusinessServiceCreateManyAndReturnArgs>(args?: SelectSubset<T, BusinessServiceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessServicePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BusinessService.
     * @param {BusinessServiceDeleteArgs} args - Arguments to delete one BusinessService.
     * @example
     * // Delete one BusinessService
     * const BusinessService = await prisma.businessService.delete({
     *   where: {
     *     // ... filter to delete one BusinessService
     *   }
     * })
     * 
     */
    delete<T extends BusinessServiceDeleteArgs>(args: SelectSubset<T, BusinessServiceDeleteArgs<ExtArgs>>): Prisma__BusinessServiceClient<$Result.GetResult<Prisma.$BusinessServicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BusinessService.
     * @param {BusinessServiceUpdateArgs} args - Arguments to update one BusinessService.
     * @example
     * // Update one BusinessService
     * const businessService = await prisma.businessService.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BusinessServiceUpdateArgs>(args: SelectSubset<T, BusinessServiceUpdateArgs<ExtArgs>>): Prisma__BusinessServiceClient<$Result.GetResult<Prisma.$BusinessServicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BusinessServices.
     * @param {BusinessServiceDeleteManyArgs} args - Arguments to filter BusinessServices to delete.
     * @example
     * // Delete a few BusinessServices
     * const { count } = await prisma.businessService.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BusinessServiceDeleteManyArgs>(args?: SelectSubset<T, BusinessServiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessServices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessServiceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BusinessServices
     * const businessService = await prisma.businessService.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BusinessServiceUpdateManyArgs>(args: SelectSubset<T, BusinessServiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessServices and returns the data updated in the database.
     * @param {BusinessServiceUpdateManyAndReturnArgs} args - Arguments to update many BusinessServices.
     * @example
     * // Update many BusinessServices
     * const businessService = await prisma.businessService.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BusinessServices and only return the `id`
     * const businessServiceWithIdOnly = await prisma.businessService.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BusinessServiceUpdateManyAndReturnArgs>(args: SelectSubset<T, BusinessServiceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessServicePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BusinessService.
     * @param {BusinessServiceUpsertArgs} args - Arguments to update or create a BusinessService.
     * @example
     * // Update or create a BusinessService
     * const businessService = await prisma.businessService.upsert({
     *   create: {
     *     // ... data to create a BusinessService
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BusinessService we want to update
     *   }
     * })
     */
    upsert<T extends BusinessServiceUpsertArgs>(args: SelectSubset<T, BusinessServiceUpsertArgs<ExtArgs>>): Prisma__BusinessServiceClient<$Result.GetResult<Prisma.$BusinessServicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BusinessServices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessServiceCountArgs} args - Arguments to filter BusinessServices to count.
     * @example
     * // Count the number of BusinessServices
     * const count = await prisma.businessService.count({
     *   where: {
     *     // ... the filter for the BusinessServices we want to count
     *   }
     * })
    **/
    count<T extends BusinessServiceCountArgs>(
      args?: Subset<T, BusinessServiceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BusinessServiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BusinessService.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessServiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BusinessServiceAggregateArgs>(args: Subset<T, BusinessServiceAggregateArgs>): Prisma.PrismaPromise<GetBusinessServiceAggregateType<T>>

    /**
     * Group by BusinessService.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessServiceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BusinessServiceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BusinessServiceGroupByArgs['orderBy'] }
        : { orderBy?: BusinessServiceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BusinessServiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusinessServiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BusinessService model
   */
  readonly fields: BusinessServiceFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for BusinessService.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BusinessServiceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    configurationItems<T extends BusinessService$configurationItemsArgs<ExtArgs> = {}>(args?: Subset<T, BusinessService$configurationItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiBusinessServicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BusinessService model
   */
  interface BusinessServiceFieldRefs {
    readonly id: FieldRef<"BusinessService", 'String'>
    readonly name: FieldRef<"BusinessService", 'String'>
    readonly description: FieldRef<"BusinessService", 'String'>
    readonly businessOwner: FieldRef<"BusinessService", 'String'>
    readonly technicalOwner: FieldRef<"BusinessService", 'String'>
    readonly criticality: FieldRef<"BusinessService", 'String'>
    readonly availabilityTarget: FieldRef<"BusinessService", 'Decimal'>
    readonly performanceTarget: FieldRef<"BusinessService", 'String'>
    readonly createdAt: FieldRef<"BusinessService", 'DateTime'>
    readonly updatedAt: FieldRef<"BusinessService", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BusinessService findUnique
   */
  export type BusinessServiceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessService
     */
    select?: BusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessService
     */
    omit?: BusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessServiceInclude<ExtArgs> | null
    /**
     * Filter, which BusinessService to fetch.
     */
    where: BusinessServiceWhereUniqueInput
  }

  /**
   * BusinessService findUniqueOrThrow
   */
  export type BusinessServiceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessService
     */
    select?: BusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessService
     */
    omit?: BusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessServiceInclude<ExtArgs> | null
    /**
     * Filter, which BusinessService to fetch.
     */
    where: BusinessServiceWhereUniqueInput
  }

  /**
   * BusinessService findFirst
   */
  export type BusinessServiceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessService
     */
    select?: BusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessService
     */
    omit?: BusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessServiceInclude<ExtArgs> | null
    /**
     * Filter, which BusinessService to fetch.
     */
    where?: BusinessServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessServices to fetch.
     */
    orderBy?: BusinessServiceOrderByWithRelationInput | BusinessServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessServices.
     */
    cursor?: BusinessServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessServices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessServices.
     */
    distinct?: BusinessServiceScalarFieldEnum | BusinessServiceScalarFieldEnum[]
  }

  /**
   * BusinessService findFirstOrThrow
   */
  export type BusinessServiceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessService
     */
    select?: BusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessService
     */
    omit?: BusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessServiceInclude<ExtArgs> | null
    /**
     * Filter, which BusinessService to fetch.
     */
    where?: BusinessServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessServices to fetch.
     */
    orderBy?: BusinessServiceOrderByWithRelationInput | BusinessServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessServices.
     */
    cursor?: BusinessServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessServices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessServices.
     */
    distinct?: BusinessServiceScalarFieldEnum | BusinessServiceScalarFieldEnum[]
  }

  /**
   * BusinessService findMany
   */
  export type BusinessServiceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessService
     */
    select?: BusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessService
     */
    omit?: BusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessServiceInclude<ExtArgs> | null
    /**
     * Filter, which BusinessServices to fetch.
     */
    where?: BusinessServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessServices to fetch.
     */
    orderBy?: BusinessServiceOrderByWithRelationInput | BusinessServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BusinessServices.
     */
    cursor?: BusinessServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessServices.
     */
    skip?: number
    distinct?: BusinessServiceScalarFieldEnum | BusinessServiceScalarFieldEnum[]
  }

  /**
   * BusinessService create
   */
  export type BusinessServiceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessService
     */
    select?: BusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessService
     */
    omit?: BusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessServiceInclude<ExtArgs> | null
    /**
     * The data needed to create a BusinessService.
     */
    data: XOR<BusinessServiceCreateInput, BusinessServiceUncheckedCreateInput>
  }

  /**
   * BusinessService createMany
   */
  export type BusinessServiceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BusinessServices.
     */
    data: BusinessServiceCreateManyInput | BusinessServiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BusinessService createManyAndReturn
   */
  export type BusinessServiceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessService
     */
    select?: BusinessServiceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessService
     */
    omit?: BusinessServiceOmit<ExtArgs> | null
    /**
     * The data used to create many BusinessServices.
     */
    data: BusinessServiceCreateManyInput | BusinessServiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BusinessService update
   */
  export type BusinessServiceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessService
     */
    select?: BusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessService
     */
    omit?: BusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessServiceInclude<ExtArgs> | null
    /**
     * The data needed to update a BusinessService.
     */
    data: XOR<BusinessServiceUpdateInput, BusinessServiceUncheckedUpdateInput>
    /**
     * Choose, which BusinessService to update.
     */
    where: BusinessServiceWhereUniqueInput
  }

  /**
   * BusinessService updateMany
   */
  export type BusinessServiceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BusinessServices.
     */
    data: XOR<BusinessServiceUpdateManyMutationInput, BusinessServiceUncheckedUpdateManyInput>
    /**
     * Filter which BusinessServices to update
     */
    where?: BusinessServiceWhereInput
    /**
     * Limit how many BusinessServices to update.
     */
    limit?: number
  }

  /**
   * BusinessService updateManyAndReturn
   */
  export type BusinessServiceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessService
     */
    select?: BusinessServiceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessService
     */
    omit?: BusinessServiceOmit<ExtArgs> | null
    /**
     * The data used to update BusinessServices.
     */
    data: XOR<BusinessServiceUpdateManyMutationInput, BusinessServiceUncheckedUpdateManyInput>
    /**
     * Filter which BusinessServices to update
     */
    where?: BusinessServiceWhereInput
    /**
     * Limit how many BusinessServices to update.
     */
    limit?: number
  }

  /**
   * BusinessService upsert
   */
  export type BusinessServiceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessService
     */
    select?: BusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessService
     */
    omit?: BusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessServiceInclude<ExtArgs> | null
    /**
     * The filter to search for the BusinessService to update in case it exists.
     */
    where: BusinessServiceWhereUniqueInput
    /**
     * In case the BusinessService found by the `where` argument doesn't exist, create a new BusinessService with this data.
     */
    create: XOR<BusinessServiceCreateInput, BusinessServiceUncheckedCreateInput>
    /**
     * In case the BusinessService was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BusinessServiceUpdateInput, BusinessServiceUncheckedUpdateInput>
  }

  /**
   * BusinessService delete
   */
  export type BusinessServiceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessService
     */
    select?: BusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessService
     */
    omit?: BusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessServiceInclude<ExtArgs> | null
    /**
     * Filter which BusinessService to delete.
     */
    where: BusinessServiceWhereUniqueInput
  }

  /**
   * BusinessService deleteMany
   */
  export type BusinessServiceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessServices to delete
     */
    where?: BusinessServiceWhereInput
    /**
     * Limit how many BusinessServices to delete.
     */
    limit?: number
  }

  /**
   * BusinessService.configurationItems
   */
  export type BusinessService$configurationItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiBusinessService
     */
    select?: CiBusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiBusinessService
     */
    omit?: CiBusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiBusinessServiceInclude<ExtArgs> | null
    where?: CiBusinessServiceWhereInput
    orderBy?: CiBusinessServiceOrderByWithRelationInput | CiBusinessServiceOrderByWithRelationInput[]
    cursor?: CiBusinessServiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CiBusinessServiceScalarFieldEnum | CiBusinessServiceScalarFieldEnum[]
  }

  /**
   * BusinessService without action
   */
  export type BusinessServiceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessService
     */
    select?: BusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BusinessService
     */
    omit?: BusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessServiceInclude<ExtArgs> | null
  }


  /**
   * Model CiBusinessService
   */

  export type AggregateCiBusinessService = {
    _count: CiBusinessServiceCountAggregateOutputType | null
    _min: CiBusinessServiceMinAggregateOutputType | null
    _max: CiBusinessServiceMaxAggregateOutputType | null
  }

  export type CiBusinessServiceMinAggregateOutputType = {
    ciId: string | null
    businessServiceId: string | null
    relationshipType: string | null
    criticality: string | null
    createdAt: Date | null
  }

  export type CiBusinessServiceMaxAggregateOutputType = {
    ciId: string | null
    businessServiceId: string | null
    relationshipType: string | null
    criticality: string | null
    createdAt: Date | null
  }

  export type CiBusinessServiceCountAggregateOutputType = {
    ciId: number
    businessServiceId: number
    relationshipType: number
    criticality: number
    createdAt: number
    _all: number
  }


  export type CiBusinessServiceMinAggregateInputType = {
    ciId?: true
    businessServiceId?: true
    relationshipType?: true
    criticality?: true
    createdAt?: true
  }

  export type CiBusinessServiceMaxAggregateInputType = {
    ciId?: true
    businessServiceId?: true
    relationshipType?: true
    criticality?: true
    createdAt?: true
  }

  export type CiBusinessServiceCountAggregateInputType = {
    ciId?: true
    businessServiceId?: true
    relationshipType?: true
    criticality?: true
    createdAt?: true
    _all?: true
  }

  export type CiBusinessServiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CiBusinessService to aggregate.
     */
    where?: CiBusinessServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiBusinessServices to fetch.
     */
    orderBy?: CiBusinessServiceOrderByWithRelationInput | CiBusinessServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CiBusinessServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiBusinessServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiBusinessServices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CiBusinessServices
    **/
    _count?: true | CiBusinessServiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CiBusinessServiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CiBusinessServiceMaxAggregateInputType
  }

  export type GetCiBusinessServiceAggregateType<T extends CiBusinessServiceAggregateArgs> = {
        [P in keyof T & keyof AggregateCiBusinessService]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCiBusinessService[P]>
      : GetScalarType<T[P], AggregateCiBusinessService[P]>
  }




  export type CiBusinessServiceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiBusinessServiceWhereInput
    orderBy?: CiBusinessServiceOrderByWithAggregationInput | CiBusinessServiceOrderByWithAggregationInput[]
    by: CiBusinessServiceScalarFieldEnum[] | CiBusinessServiceScalarFieldEnum
    having?: CiBusinessServiceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CiBusinessServiceCountAggregateInputType | true
    _min?: CiBusinessServiceMinAggregateInputType
    _max?: CiBusinessServiceMaxAggregateInputType
  }

  export type CiBusinessServiceGroupByOutputType = {
    ciId: string
    businessServiceId: string
    relationshipType: string
    criticality: string | null
    createdAt: Date
    _count: CiBusinessServiceCountAggregateOutputType | null
    _min: CiBusinessServiceMinAggregateOutputType | null
    _max: CiBusinessServiceMaxAggregateOutputType | null
  }

  type GetCiBusinessServiceGroupByPayload<T extends CiBusinessServiceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CiBusinessServiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CiBusinessServiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CiBusinessServiceGroupByOutputType[P]>
            : GetScalarType<T[P], CiBusinessServiceGroupByOutputType[P]>
        }
      >
    >


  export type CiBusinessServiceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    businessServiceId?: boolean
    relationshipType?: boolean
    criticality?: boolean
    createdAt?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    businessService?: boolean | BusinessServiceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciBusinessService"]>

  export type CiBusinessServiceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    businessServiceId?: boolean
    relationshipType?: boolean
    criticality?: boolean
    createdAt?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    businessService?: boolean | BusinessServiceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciBusinessService"]>

  export type CiBusinessServiceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    businessServiceId?: boolean
    relationshipType?: boolean
    criticality?: boolean
    createdAt?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    businessService?: boolean | BusinessServiceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciBusinessService"]>

  export type CiBusinessServiceSelectScalar = {
    ciId?: boolean
    businessServiceId?: boolean
    relationshipType?: boolean
    criticality?: boolean
    createdAt?: boolean
  }

  export type CiBusinessServiceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ciId" | "businessServiceId" | "relationshipType" | "criticality" | "createdAt", ExtArgs["result"]["ciBusinessService"]>
  export type CiBusinessServiceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    businessService?: boolean | BusinessServiceDefaultArgs<ExtArgs>
  }
  export type CiBusinessServiceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    businessService?: boolean | BusinessServiceDefaultArgs<ExtArgs>
  }
  export type CiBusinessServiceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    businessService?: boolean | BusinessServiceDefaultArgs<ExtArgs>
  }

  export type $CiBusinessServicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CiBusinessService"
    objects: {
      configurationItem: Prisma.$ConfigurationItemPayload<ExtArgs>
      businessService: Prisma.$BusinessServicePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      ciId: string
      businessServiceId: string
      relationshipType: string
      criticality: string | null
      createdAt: Date
    }, ExtArgs["result"]["ciBusinessService"]>
    composites: {}
  }

  type CiBusinessServiceGetPayload<S extends boolean | null | undefined | CiBusinessServiceDefaultArgs> = $Result.GetResult<Prisma.$CiBusinessServicePayload, S>

  type CiBusinessServiceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CiBusinessServiceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CiBusinessServiceCountAggregateInputType | true
    }

  export interface CiBusinessServiceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CiBusinessService'], meta: { name: 'CiBusinessService' } }
    /**
     * Find zero or one CiBusinessService that matches the filter.
     * @param {CiBusinessServiceFindUniqueArgs} args - Arguments to find a CiBusinessService
     * @example
     * // Get one CiBusinessService
     * const ciBusinessService = await prisma.ciBusinessService.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CiBusinessServiceFindUniqueArgs>(args: SelectSubset<T, CiBusinessServiceFindUniqueArgs<ExtArgs>>): Prisma__CiBusinessServiceClient<$Result.GetResult<Prisma.$CiBusinessServicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CiBusinessService that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CiBusinessServiceFindUniqueOrThrowArgs} args - Arguments to find a CiBusinessService
     * @example
     * // Get one CiBusinessService
     * const ciBusinessService = await prisma.ciBusinessService.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CiBusinessServiceFindUniqueOrThrowArgs>(args: SelectSubset<T, CiBusinessServiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CiBusinessServiceClient<$Result.GetResult<Prisma.$CiBusinessServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CiBusinessService that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiBusinessServiceFindFirstArgs} args - Arguments to find a CiBusinessService
     * @example
     * // Get one CiBusinessService
     * const ciBusinessService = await prisma.ciBusinessService.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CiBusinessServiceFindFirstArgs>(args?: SelectSubset<T, CiBusinessServiceFindFirstArgs<ExtArgs>>): Prisma__CiBusinessServiceClient<$Result.GetResult<Prisma.$CiBusinessServicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CiBusinessService that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiBusinessServiceFindFirstOrThrowArgs} args - Arguments to find a CiBusinessService
     * @example
     * // Get one CiBusinessService
     * const ciBusinessService = await prisma.ciBusinessService.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CiBusinessServiceFindFirstOrThrowArgs>(args?: SelectSubset<T, CiBusinessServiceFindFirstOrThrowArgs<ExtArgs>>): Prisma__CiBusinessServiceClient<$Result.GetResult<Prisma.$CiBusinessServicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CiBusinessServices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiBusinessServiceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CiBusinessServices
     * const ciBusinessServices = await prisma.ciBusinessService.findMany()
     * 
     * // Get first 10 CiBusinessServices
     * const ciBusinessServices = await prisma.ciBusinessService.findMany({ take: 10 })
     * 
     * // Only select the `ciId`
     * const ciBusinessServiceWithCiIdOnly = await prisma.ciBusinessService.findMany({ select: { ciId: true } })
     * 
     */
    findMany<T extends CiBusinessServiceFindManyArgs>(args?: SelectSubset<T, CiBusinessServiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiBusinessServicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CiBusinessService.
     * @param {CiBusinessServiceCreateArgs} args - Arguments to create a CiBusinessService.
     * @example
     * // Create one CiBusinessService
     * const CiBusinessService = await prisma.ciBusinessService.create({
     *   data: {
     *     // ... data to create a CiBusinessService
     *   }
     * })
     * 
     */
    create<T extends CiBusinessServiceCreateArgs>(args: SelectSubset<T, CiBusinessServiceCreateArgs<ExtArgs>>): Prisma__CiBusinessServiceClient<$Result.GetResult<Prisma.$CiBusinessServicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CiBusinessServices.
     * @param {CiBusinessServiceCreateManyArgs} args - Arguments to create many CiBusinessServices.
     * @example
     * // Create many CiBusinessServices
     * const ciBusinessService = await prisma.ciBusinessService.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CiBusinessServiceCreateManyArgs>(args?: SelectSubset<T, CiBusinessServiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CiBusinessServices and returns the data saved in the database.
     * @param {CiBusinessServiceCreateManyAndReturnArgs} args - Arguments to create many CiBusinessServices.
     * @example
     * // Create many CiBusinessServices
     * const ciBusinessService = await prisma.ciBusinessService.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CiBusinessServices and only return the `ciId`
     * const ciBusinessServiceWithCiIdOnly = await prisma.ciBusinessService.createManyAndReturn({
     *   select: { ciId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CiBusinessServiceCreateManyAndReturnArgs>(args?: SelectSubset<T, CiBusinessServiceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiBusinessServicePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CiBusinessService.
     * @param {CiBusinessServiceDeleteArgs} args - Arguments to delete one CiBusinessService.
     * @example
     * // Delete one CiBusinessService
     * const CiBusinessService = await prisma.ciBusinessService.delete({
     *   where: {
     *     // ... filter to delete one CiBusinessService
     *   }
     * })
     * 
     */
    delete<T extends CiBusinessServiceDeleteArgs>(args: SelectSubset<T, CiBusinessServiceDeleteArgs<ExtArgs>>): Prisma__CiBusinessServiceClient<$Result.GetResult<Prisma.$CiBusinessServicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CiBusinessService.
     * @param {CiBusinessServiceUpdateArgs} args - Arguments to update one CiBusinessService.
     * @example
     * // Update one CiBusinessService
     * const ciBusinessService = await prisma.ciBusinessService.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CiBusinessServiceUpdateArgs>(args: SelectSubset<T, CiBusinessServiceUpdateArgs<ExtArgs>>): Prisma__CiBusinessServiceClient<$Result.GetResult<Prisma.$CiBusinessServicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CiBusinessServices.
     * @param {CiBusinessServiceDeleteManyArgs} args - Arguments to filter CiBusinessServices to delete.
     * @example
     * // Delete a few CiBusinessServices
     * const { count } = await prisma.ciBusinessService.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CiBusinessServiceDeleteManyArgs>(args?: SelectSubset<T, CiBusinessServiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CiBusinessServices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiBusinessServiceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CiBusinessServices
     * const ciBusinessService = await prisma.ciBusinessService.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CiBusinessServiceUpdateManyArgs>(args: SelectSubset<T, CiBusinessServiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CiBusinessServices and returns the data updated in the database.
     * @param {CiBusinessServiceUpdateManyAndReturnArgs} args - Arguments to update many CiBusinessServices.
     * @example
     * // Update many CiBusinessServices
     * const ciBusinessService = await prisma.ciBusinessService.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CiBusinessServices and only return the `ciId`
     * const ciBusinessServiceWithCiIdOnly = await prisma.ciBusinessService.updateManyAndReturn({
     *   select: { ciId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CiBusinessServiceUpdateManyAndReturnArgs>(args: SelectSubset<T, CiBusinessServiceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiBusinessServicePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CiBusinessService.
     * @param {CiBusinessServiceUpsertArgs} args - Arguments to update or create a CiBusinessService.
     * @example
     * // Update or create a CiBusinessService
     * const ciBusinessService = await prisma.ciBusinessService.upsert({
     *   create: {
     *     // ... data to create a CiBusinessService
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CiBusinessService we want to update
     *   }
     * })
     */
    upsert<T extends CiBusinessServiceUpsertArgs>(args: SelectSubset<T, CiBusinessServiceUpsertArgs<ExtArgs>>): Prisma__CiBusinessServiceClient<$Result.GetResult<Prisma.$CiBusinessServicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CiBusinessServices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiBusinessServiceCountArgs} args - Arguments to filter CiBusinessServices to count.
     * @example
     * // Count the number of CiBusinessServices
     * const count = await prisma.ciBusinessService.count({
     *   where: {
     *     // ... the filter for the CiBusinessServices we want to count
     *   }
     * })
    **/
    count<T extends CiBusinessServiceCountArgs>(
      args?: Subset<T, CiBusinessServiceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CiBusinessServiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CiBusinessService.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiBusinessServiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CiBusinessServiceAggregateArgs>(args: Subset<T, CiBusinessServiceAggregateArgs>): Prisma.PrismaPromise<GetCiBusinessServiceAggregateType<T>>

    /**
     * Group by CiBusinessService.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiBusinessServiceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CiBusinessServiceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CiBusinessServiceGroupByArgs['orderBy'] }
        : { orderBy?: CiBusinessServiceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CiBusinessServiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCiBusinessServiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CiBusinessService model
   */
  readonly fields: CiBusinessServiceFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for CiBusinessService.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CiBusinessServiceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    configurationItem<T extends ConfigurationItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItemDefaultArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    businessService<T extends BusinessServiceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BusinessServiceDefaultArgs<ExtArgs>>): Prisma__BusinessServiceClient<$Result.GetResult<Prisma.$BusinessServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CiBusinessService model
   */
  interface CiBusinessServiceFieldRefs {
    readonly ciId: FieldRef<"CiBusinessService", 'String'>
    readonly businessServiceId: FieldRef<"CiBusinessService", 'String'>
    readonly relationshipType: FieldRef<"CiBusinessService", 'String'>
    readonly criticality: FieldRef<"CiBusinessService", 'String'>
    readonly createdAt: FieldRef<"CiBusinessService", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CiBusinessService findUnique
   */
  export type CiBusinessServiceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiBusinessService
     */
    select?: CiBusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiBusinessService
     */
    omit?: CiBusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiBusinessServiceInclude<ExtArgs> | null
    /**
     * Filter, which CiBusinessService to fetch.
     */
    where: CiBusinessServiceWhereUniqueInput
  }

  /**
   * CiBusinessService findUniqueOrThrow
   */
  export type CiBusinessServiceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiBusinessService
     */
    select?: CiBusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiBusinessService
     */
    omit?: CiBusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiBusinessServiceInclude<ExtArgs> | null
    /**
     * Filter, which CiBusinessService to fetch.
     */
    where: CiBusinessServiceWhereUniqueInput
  }

  /**
   * CiBusinessService findFirst
   */
  export type CiBusinessServiceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiBusinessService
     */
    select?: CiBusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiBusinessService
     */
    omit?: CiBusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiBusinessServiceInclude<ExtArgs> | null
    /**
     * Filter, which CiBusinessService to fetch.
     */
    where?: CiBusinessServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiBusinessServices to fetch.
     */
    orderBy?: CiBusinessServiceOrderByWithRelationInput | CiBusinessServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CiBusinessServices.
     */
    cursor?: CiBusinessServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiBusinessServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiBusinessServices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CiBusinessServices.
     */
    distinct?: CiBusinessServiceScalarFieldEnum | CiBusinessServiceScalarFieldEnum[]
  }

  /**
   * CiBusinessService findFirstOrThrow
   */
  export type CiBusinessServiceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiBusinessService
     */
    select?: CiBusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiBusinessService
     */
    omit?: CiBusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiBusinessServiceInclude<ExtArgs> | null
    /**
     * Filter, which CiBusinessService to fetch.
     */
    where?: CiBusinessServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiBusinessServices to fetch.
     */
    orderBy?: CiBusinessServiceOrderByWithRelationInput | CiBusinessServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CiBusinessServices.
     */
    cursor?: CiBusinessServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiBusinessServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiBusinessServices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CiBusinessServices.
     */
    distinct?: CiBusinessServiceScalarFieldEnum | CiBusinessServiceScalarFieldEnum[]
  }

  /**
   * CiBusinessService findMany
   */
  export type CiBusinessServiceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiBusinessService
     */
    select?: CiBusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiBusinessService
     */
    omit?: CiBusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiBusinessServiceInclude<ExtArgs> | null
    /**
     * Filter, which CiBusinessServices to fetch.
     */
    where?: CiBusinessServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiBusinessServices to fetch.
     */
    orderBy?: CiBusinessServiceOrderByWithRelationInput | CiBusinessServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CiBusinessServices.
     */
    cursor?: CiBusinessServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiBusinessServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiBusinessServices.
     */
    skip?: number
    distinct?: CiBusinessServiceScalarFieldEnum | CiBusinessServiceScalarFieldEnum[]
  }

  /**
   * CiBusinessService create
   */
  export type CiBusinessServiceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiBusinessService
     */
    select?: CiBusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiBusinessService
     */
    omit?: CiBusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiBusinessServiceInclude<ExtArgs> | null
    /**
     * The data needed to create a CiBusinessService.
     */
    data: XOR<CiBusinessServiceCreateInput, CiBusinessServiceUncheckedCreateInput>
  }

  /**
   * CiBusinessService createMany
   */
  export type CiBusinessServiceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CiBusinessServices.
     */
    data: CiBusinessServiceCreateManyInput | CiBusinessServiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CiBusinessService createManyAndReturn
   */
  export type CiBusinessServiceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiBusinessService
     */
    select?: CiBusinessServiceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CiBusinessService
     */
    omit?: CiBusinessServiceOmit<ExtArgs> | null
    /**
     * The data used to create many CiBusinessServices.
     */
    data: CiBusinessServiceCreateManyInput | CiBusinessServiceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiBusinessServiceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CiBusinessService update
   */
  export type CiBusinessServiceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiBusinessService
     */
    select?: CiBusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiBusinessService
     */
    omit?: CiBusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiBusinessServiceInclude<ExtArgs> | null
    /**
     * The data needed to update a CiBusinessService.
     */
    data: XOR<CiBusinessServiceUpdateInput, CiBusinessServiceUncheckedUpdateInput>
    /**
     * Choose, which CiBusinessService to update.
     */
    where: CiBusinessServiceWhereUniqueInput
  }

  /**
   * CiBusinessService updateMany
   */
  export type CiBusinessServiceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CiBusinessServices.
     */
    data: XOR<CiBusinessServiceUpdateManyMutationInput, CiBusinessServiceUncheckedUpdateManyInput>
    /**
     * Filter which CiBusinessServices to update
     */
    where?: CiBusinessServiceWhereInput
    /**
     * Limit how many CiBusinessServices to update.
     */
    limit?: number
  }

  /**
   * CiBusinessService updateManyAndReturn
   */
  export type CiBusinessServiceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiBusinessService
     */
    select?: CiBusinessServiceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CiBusinessService
     */
    omit?: CiBusinessServiceOmit<ExtArgs> | null
    /**
     * The data used to update CiBusinessServices.
     */
    data: XOR<CiBusinessServiceUpdateManyMutationInput, CiBusinessServiceUncheckedUpdateManyInput>
    /**
     * Filter which CiBusinessServices to update
     */
    where?: CiBusinessServiceWhereInput
    /**
     * Limit how many CiBusinessServices to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiBusinessServiceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CiBusinessService upsert
   */
  export type CiBusinessServiceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiBusinessService
     */
    select?: CiBusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiBusinessService
     */
    omit?: CiBusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiBusinessServiceInclude<ExtArgs> | null
    /**
     * The filter to search for the CiBusinessService to update in case it exists.
     */
    where: CiBusinessServiceWhereUniqueInput
    /**
     * In case the CiBusinessService found by the `where` argument doesn't exist, create a new CiBusinessService with this data.
     */
    create: XOR<CiBusinessServiceCreateInput, CiBusinessServiceUncheckedCreateInput>
    /**
     * In case the CiBusinessService was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CiBusinessServiceUpdateInput, CiBusinessServiceUncheckedUpdateInput>
  }

  /**
   * CiBusinessService delete
   */
  export type CiBusinessServiceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiBusinessService
     */
    select?: CiBusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiBusinessService
     */
    omit?: CiBusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiBusinessServiceInclude<ExtArgs> | null
    /**
     * Filter which CiBusinessService to delete.
     */
    where: CiBusinessServiceWhereUniqueInput
  }

  /**
   * CiBusinessService deleteMany
   */
  export type CiBusinessServiceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CiBusinessServices to delete
     */
    where?: CiBusinessServiceWhereInput
    /**
     * Limit how many CiBusinessServices to delete.
     */
    limit?: number
  }

  /**
   * CiBusinessService without action
   */
  export type CiBusinessServiceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiBusinessService
     */
    select?: CiBusinessServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiBusinessService
     */
    omit?: CiBusinessServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiBusinessServiceInclude<ExtArgs> | null
  }


  /**
   * Model CiIncident
   */

  export type AggregateCiIncident = {
    _count: CiIncidentCountAggregateOutputType | null
    _min: CiIncidentMinAggregateOutputType | null
    _max: CiIncidentMaxAggregateOutputType | null
  }

  export type CiIncidentMinAggregateOutputType = {
    ciId: string | null
    incidentId: string | null
    relationshipType: string | null
    createdAt: Date | null
  }

  export type CiIncidentMaxAggregateOutputType = {
    ciId: string | null
    incidentId: string | null
    relationshipType: string | null
    createdAt: Date | null
  }

  export type CiIncidentCountAggregateOutputType = {
    ciId: number
    incidentId: number
    relationshipType: number
    createdAt: number
    _all: number
  }


  export type CiIncidentMinAggregateInputType = {
    ciId?: true
    incidentId?: true
    relationshipType?: true
    createdAt?: true
  }

  export type CiIncidentMaxAggregateInputType = {
    ciId?: true
    incidentId?: true
    relationshipType?: true
    createdAt?: true
  }

  export type CiIncidentCountAggregateInputType = {
    ciId?: true
    incidentId?: true
    relationshipType?: true
    createdAt?: true
    _all?: true
  }

  export type CiIncidentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CiIncident to aggregate.
     */
    where?: CiIncidentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiIncidents to fetch.
     */
    orderBy?: CiIncidentOrderByWithRelationInput | CiIncidentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CiIncidentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiIncidents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiIncidents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CiIncidents
    **/
    _count?: true | CiIncidentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CiIncidentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CiIncidentMaxAggregateInputType
  }

  export type GetCiIncidentAggregateType<T extends CiIncidentAggregateArgs> = {
        [P in keyof T & keyof AggregateCiIncident]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCiIncident[P]>
      : GetScalarType<T[P], AggregateCiIncident[P]>
  }




  export type CiIncidentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiIncidentWhereInput
    orderBy?: CiIncidentOrderByWithAggregationInput | CiIncidentOrderByWithAggregationInput[]
    by: CiIncidentScalarFieldEnum[] | CiIncidentScalarFieldEnum
    having?: CiIncidentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CiIncidentCountAggregateInputType | true
    _min?: CiIncidentMinAggregateInputType
    _max?: CiIncidentMaxAggregateInputType
  }

  export type CiIncidentGroupByOutputType = {
    ciId: string
    incidentId: string
    relationshipType: string
    createdAt: Date
    _count: CiIncidentCountAggregateOutputType | null
    _min: CiIncidentMinAggregateOutputType | null
    _max: CiIncidentMaxAggregateOutputType | null
  }

  type GetCiIncidentGroupByPayload<T extends CiIncidentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CiIncidentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CiIncidentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CiIncidentGroupByOutputType[P]>
            : GetScalarType<T[P], CiIncidentGroupByOutputType[P]>
        }
      >
    >


  export type CiIncidentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    incidentId?: boolean
    relationshipType?: boolean
    createdAt?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciIncident"]>

  export type CiIncidentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    incidentId?: boolean
    relationshipType?: boolean
    createdAt?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciIncident"]>

  export type CiIncidentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    incidentId?: boolean
    relationshipType?: boolean
    createdAt?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciIncident"]>

  export type CiIncidentSelectScalar = {
    ciId?: boolean
    incidentId?: boolean
    relationshipType?: boolean
    createdAt?: boolean
  }

  export type CiIncidentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ciId" | "incidentId" | "relationshipType" | "createdAt", ExtArgs["result"]["ciIncident"]>
  export type CiIncidentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type CiIncidentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type CiIncidentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }

  export type $CiIncidentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CiIncident"
    objects: {
      configurationItem: Prisma.$ConfigurationItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      ciId: string
      incidentId: string
      relationshipType: string
      createdAt: Date
    }, ExtArgs["result"]["ciIncident"]>
    composites: {}
  }

  type CiIncidentGetPayload<S extends boolean | null | undefined | CiIncidentDefaultArgs> = $Result.GetResult<Prisma.$CiIncidentPayload, S>

  type CiIncidentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CiIncidentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CiIncidentCountAggregateInputType | true
    }

  export interface CiIncidentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CiIncident'], meta: { name: 'CiIncident' } }
    /**
     * Find zero or one CiIncident that matches the filter.
     * @param {CiIncidentFindUniqueArgs} args - Arguments to find a CiIncident
     * @example
     * // Get one CiIncident
     * const ciIncident = await prisma.ciIncident.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CiIncidentFindUniqueArgs>(args: SelectSubset<T, CiIncidentFindUniqueArgs<ExtArgs>>): Prisma__CiIncidentClient<$Result.GetResult<Prisma.$CiIncidentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CiIncident that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CiIncidentFindUniqueOrThrowArgs} args - Arguments to find a CiIncident
     * @example
     * // Get one CiIncident
     * const ciIncident = await prisma.ciIncident.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CiIncidentFindUniqueOrThrowArgs>(args: SelectSubset<T, CiIncidentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CiIncidentClient<$Result.GetResult<Prisma.$CiIncidentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CiIncident that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiIncidentFindFirstArgs} args - Arguments to find a CiIncident
     * @example
     * // Get one CiIncident
     * const ciIncident = await prisma.ciIncident.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CiIncidentFindFirstArgs>(args?: SelectSubset<T, CiIncidentFindFirstArgs<ExtArgs>>): Prisma__CiIncidentClient<$Result.GetResult<Prisma.$CiIncidentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CiIncident that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiIncidentFindFirstOrThrowArgs} args - Arguments to find a CiIncident
     * @example
     * // Get one CiIncident
     * const ciIncident = await prisma.ciIncident.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CiIncidentFindFirstOrThrowArgs>(args?: SelectSubset<T, CiIncidentFindFirstOrThrowArgs<ExtArgs>>): Prisma__CiIncidentClient<$Result.GetResult<Prisma.$CiIncidentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CiIncidents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiIncidentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CiIncidents
     * const ciIncidents = await prisma.ciIncident.findMany()
     * 
     * // Get first 10 CiIncidents
     * const ciIncidents = await prisma.ciIncident.findMany({ take: 10 })
     * 
     * // Only select the `ciId`
     * const ciIncidentWithCiIdOnly = await prisma.ciIncident.findMany({ select: { ciId: true } })
     * 
     */
    findMany<T extends CiIncidentFindManyArgs>(args?: SelectSubset<T, CiIncidentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiIncidentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CiIncident.
     * @param {CiIncidentCreateArgs} args - Arguments to create a CiIncident.
     * @example
     * // Create one CiIncident
     * const CiIncident = await prisma.ciIncident.create({
     *   data: {
     *     // ... data to create a CiIncident
     *   }
     * })
     * 
     */
    create<T extends CiIncidentCreateArgs>(args: SelectSubset<T, CiIncidentCreateArgs<ExtArgs>>): Prisma__CiIncidentClient<$Result.GetResult<Prisma.$CiIncidentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CiIncidents.
     * @param {CiIncidentCreateManyArgs} args - Arguments to create many CiIncidents.
     * @example
     * // Create many CiIncidents
     * const ciIncident = await prisma.ciIncident.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CiIncidentCreateManyArgs>(args?: SelectSubset<T, CiIncidentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CiIncidents and returns the data saved in the database.
     * @param {CiIncidentCreateManyAndReturnArgs} args - Arguments to create many CiIncidents.
     * @example
     * // Create many CiIncidents
     * const ciIncident = await prisma.ciIncident.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CiIncidents and only return the `ciId`
     * const ciIncidentWithCiIdOnly = await prisma.ciIncident.createManyAndReturn({
     *   select: { ciId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CiIncidentCreateManyAndReturnArgs>(args?: SelectSubset<T, CiIncidentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiIncidentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CiIncident.
     * @param {CiIncidentDeleteArgs} args - Arguments to delete one CiIncident.
     * @example
     * // Delete one CiIncident
     * const CiIncident = await prisma.ciIncident.delete({
     *   where: {
     *     // ... filter to delete one CiIncident
     *   }
     * })
     * 
     */
    delete<T extends CiIncidentDeleteArgs>(args: SelectSubset<T, CiIncidentDeleteArgs<ExtArgs>>): Prisma__CiIncidentClient<$Result.GetResult<Prisma.$CiIncidentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CiIncident.
     * @param {CiIncidentUpdateArgs} args - Arguments to update one CiIncident.
     * @example
     * // Update one CiIncident
     * const ciIncident = await prisma.ciIncident.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CiIncidentUpdateArgs>(args: SelectSubset<T, CiIncidentUpdateArgs<ExtArgs>>): Prisma__CiIncidentClient<$Result.GetResult<Prisma.$CiIncidentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CiIncidents.
     * @param {CiIncidentDeleteManyArgs} args - Arguments to filter CiIncidents to delete.
     * @example
     * // Delete a few CiIncidents
     * const { count } = await prisma.ciIncident.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CiIncidentDeleteManyArgs>(args?: SelectSubset<T, CiIncidentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CiIncidents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiIncidentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CiIncidents
     * const ciIncident = await prisma.ciIncident.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CiIncidentUpdateManyArgs>(args: SelectSubset<T, CiIncidentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CiIncidents and returns the data updated in the database.
     * @param {CiIncidentUpdateManyAndReturnArgs} args - Arguments to update many CiIncidents.
     * @example
     * // Update many CiIncidents
     * const ciIncident = await prisma.ciIncident.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CiIncidents and only return the `ciId`
     * const ciIncidentWithCiIdOnly = await prisma.ciIncident.updateManyAndReturn({
     *   select: { ciId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CiIncidentUpdateManyAndReturnArgs>(args: SelectSubset<T, CiIncidentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiIncidentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CiIncident.
     * @param {CiIncidentUpsertArgs} args - Arguments to update or create a CiIncident.
     * @example
     * // Update or create a CiIncident
     * const ciIncident = await prisma.ciIncident.upsert({
     *   create: {
     *     // ... data to create a CiIncident
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CiIncident we want to update
     *   }
     * })
     */
    upsert<T extends CiIncidentUpsertArgs>(args: SelectSubset<T, CiIncidentUpsertArgs<ExtArgs>>): Prisma__CiIncidentClient<$Result.GetResult<Prisma.$CiIncidentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CiIncidents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiIncidentCountArgs} args - Arguments to filter CiIncidents to count.
     * @example
     * // Count the number of CiIncidents
     * const count = await prisma.ciIncident.count({
     *   where: {
     *     // ... the filter for the CiIncidents we want to count
     *   }
     * })
    **/
    count<T extends CiIncidentCountArgs>(
      args?: Subset<T, CiIncidentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CiIncidentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CiIncident.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiIncidentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CiIncidentAggregateArgs>(args: Subset<T, CiIncidentAggregateArgs>): Prisma.PrismaPromise<GetCiIncidentAggregateType<T>>

    /**
     * Group by CiIncident.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiIncidentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CiIncidentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CiIncidentGroupByArgs['orderBy'] }
        : { orderBy?: CiIncidentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CiIncidentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCiIncidentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CiIncident model
   */
  readonly fields: CiIncidentFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for CiIncident.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CiIncidentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    configurationItem<T extends ConfigurationItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItemDefaultArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CiIncident model
   */
  interface CiIncidentFieldRefs {
    readonly ciId: FieldRef<"CiIncident", 'String'>
    readonly incidentId: FieldRef<"CiIncident", 'String'>
    readonly relationshipType: FieldRef<"CiIncident", 'String'>
    readonly createdAt: FieldRef<"CiIncident", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CiIncident findUnique
   */
  export type CiIncidentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiIncident
     */
    select?: CiIncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiIncident
     */
    omit?: CiIncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiIncidentInclude<ExtArgs> | null
    /**
     * Filter, which CiIncident to fetch.
     */
    where: CiIncidentWhereUniqueInput
  }

  /**
   * CiIncident findUniqueOrThrow
   */
  export type CiIncidentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiIncident
     */
    select?: CiIncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiIncident
     */
    omit?: CiIncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiIncidentInclude<ExtArgs> | null
    /**
     * Filter, which CiIncident to fetch.
     */
    where: CiIncidentWhereUniqueInput
  }

  /**
   * CiIncident findFirst
   */
  export type CiIncidentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiIncident
     */
    select?: CiIncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiIncident
     */
    omit?: CiIncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiIncidentInclude<ExtArgs> | null
    /**
     * Filter, which CiIncident to fetch.
     */
    where?: CiIncidentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiIncidents to fetch.
     */
    orderBy?: CiIncidentOrderByWithRelationInput | CiIncidentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CiIncidents.
     */
    cursor?: CiIncidentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiIncidents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiIncidents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CiIncidents.
     */
    distinct?: CiIncidentScalarFieldEnum | CiIncidentScalarFieldEnum[]
  }

  /**
   * CiIncident findFirstOrThrow
   */
  export type CiIncidentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiIncident
     */
    select?: CiIncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiIncident
     */
    omit?: CiIncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiIncidentInclude<ExtArgs> | null
    /**
     * Filter, which CiIncident to fetch.
     */
    where?: CiIncidentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiIncidents to fetch.
     */
    orderBy?: CiIncidentOrderByWithRelationInput | CiIncidentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CiIncidents.
     */
    cursor?: CiIncidentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiIncidents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiIncidents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CiIncidents.
     */
    distinct?: CiIncidentScalarFieldEnum | CiIncidentScalarFieldEnum[]
  }

  /**
   * CiIncident findMany
   */
  export type CiIncidentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiIncident
     */
    select?: CiIncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiIncident
     */
    omit?: CiIncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiIncidentInclude<ExtArgs> | null
    /**
     * Filter, which CiIncidents to fetch.
     */
    where?: CiIncidentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiIncidents to fetch.
     */
    orderBy?: CiIncidentOrderByWithRelationInput | CiIncidentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CiIncidents.
     */
    cursor?: CiIncidentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiIncidents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiIncidents.
     */
    skip?: number
    distinct?: CiIncidentScalarFieldEnum | CiIncidentScalarFieldEnum[]
  }

  /**
   * CiIncident create
   */
  export type CiIncidentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiIncident
     */
    select?: CiIncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiIncident
     */
    omit?: CiIncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiIncidentInclude<ExtArgs> | null
    /**
     * The data needed to create a CiIncident.
     */
    data: XOR<CiIncidentCreateInput, CiIncidentUncheckedCreateInput>
  }

  /**
   * CiIncident createMany
   */
  export type CiIncidentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CiIncidents.
     */
    data: CiIncidentCreateManyInput | CiIncidentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CiIncident createManyAndReturn
   */
  export type CiIncidentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiIncident
     */
    select?: CiIncidentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CiIncident
     */
    omit?: CiIncidentOmit<ExtArgs> | null
    /**
     * The data used to create many CiIncidents.
     */
    data: CiIncidentCreateManyInput | CiIncidentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiIncidentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CiIncident update
   */
  export type CiIncidentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiIncident
     */
    select?: CiIncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiIncident
     */
    omit?: CiIncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiIncidentInclude<ExtArgs> | null
    /**
     * The data needed to update a CiIncident.
     */
    data: XOR<CiIncidentUpdateInput, CiIncidentUncheckedUpdateInput>
    /**
     * Choose, which CiIncident to update.
     */
    where: CiIncidentWhereUniqueInput
  }

  /**
   * CiIncident updateMany
   */
  export type CiIncidentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CiIncidents.
     */
    data: XOR<CiIncidentUpdateManyMutationInput, CiIncidentUncheckedUpdateManyInput>
    /**
     * Filter which CiIncidents to update
     */
    where?: CiIncidentWhereInput
    /**
     * Limit how many CiIncidents to update.
     */
    limit?: number
  }

  /**
   * CiIncident updateManyAndReturn
   */
  export type CiIncidentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiIncident
     */
    select?: CiIncidentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CiIncident
     */
    omit?: CiIncidentOmit<ExtArgs> | null
    /**
     * The data used to update CiIncidents.
     */
    data: XOR<CiIncidentUpdateManyMutationInput, CiIncidentUncheckedUpdateManyInput>
    /**
     * Filter which CiIncidents to update
     */
    where?: CiIncidentWhereInput
    /**
     * Limit how many CiIncidents to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiIncidentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CiIncident upsert
   */
  export type CiIncidentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiIncident
     */
    select?: CiIncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiIncident
     */
    omit?: CiIncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiIncidentInclude<ExtArgs> | null
    /**
     * The filter to search for the CiIncident to update in case it exists.
     */
    where: CiIncidentWhereUniqueInput
    /**
     * In case the CiIncident found by the `where` argument doesn't exist, create a new CiIncident with this data.
     */
    create: XOR<CiIncidentCreateInput, CiIncidentUncheckedCreateInput>
    /**
     * In case the CiIncident was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CiIncidentUpdateInput, CiIncidentUncheckedUpdateInput>
  }

  /**
   * CiIncident delete
   */
  export type CiIncidentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiIncident
     */
    select?: CiIncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiIncident
     */
    omit?: CiIncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiIncidentInclude<ExtArgs> | null
    /**
     * Filter which CiIncident to delete.
     */
    where: CiIncidentWhereUniqueInput
  }

  /**
   * CiIncident deleteMany
   */
  export type CiIncidentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CiIncidents to delete
     */
    where?: CiIncidentWhereInput
    /**
     * Limit how many CiIncidents to delete.
     */
    limit?: number
  }

  /**
   * CiIncident without action
   */
  export type CiIncidentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiIncident
     */
    select?: CiIncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiIncident
     */
    omit?: CiIncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiIncidentInclude<ExtArgs> | null
  }


  /**
   * Model CiChange
   */

  export type AggregateCiChange = {
    _count: CiChangeCountAggregateOutputType | null
    _min: CiChangeMinAggregateOutputType | null
    _max: CiChangeMaxAggregateOutputType | null
  }

  export type CiChangeMinAggregateOutputType = {
    ciId: string | null
    changeId: string | null
    relationshipType: string | null
    createdAt: Date | null
  }

  export type CiChangeMaxAggregateOutputType = {
    ciId: string | null
    changeId: string | null
    relationshipType: string | null
    createdAt: Date | null
  }

  export type CiChangeCountAggregateOutputType = {
    ciId: number
    changeId: number
    relationshipType: number
    createdAt: number
    _all: number
  }


  export type CiChangeMinAggregateInputType = {
    ciId?: true
    changeId?: true
    relationshipType?: true
    createdAt?: true
  }

  export type CiChangeMaxAggregateInputType = {
    ciId?: true
    changeId?: true
    relationshipType?: true
    createdAt?: true
  }

  export type CiChangeCountAggregateInputType = {
    ciId?: true
    changeId?: true
    relationshipType?: true
    createdAt?: true
    _all?: true
  }

  export type CiChangeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CiChange to aggregate.
     */
    where?: CiChangeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiChanges to fetch.
     */
    orderBy?: CiChangeOrderByWithRelationInput | CiChangeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CiChangeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiChanges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiChanges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CiChanges
    **/
    _count?: true | CiChangeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CiChangeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CiChangeMaxAggregateInputType
  }

  export type GetCiChangeAggregateType<T extends CiChangeAggregateArgs> = {
        [P in keyof T & keyof AggregateCiChange]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCiChange[P]>
      : GetScalarType<T[P], AggregateCiChange[P]>
  }




  export type CiChangeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiChangeWhereInput
    orderBy?: CiChangeOrderByWithAggregationInput | CiChangeOrderByWithAggregationInput[]
    by: CiChangeScalarFieldEnum[] | CiChangeScalarFieldEnum
    having?: CiChangeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CiChangeCountAggregateInputType | true
    _min?: CiChangeMinAggregateInputType
    _max?: CiChangeMaxAggregateInputType
  }

  export type CiChangeGroupByOutputType = {
    ciId: string
    changeId: string
    relationshipType: string
    createdAt: Date
    _count: CiChangeCountAggregateOutputType | null
    _min: CiChangeMinAggregateOutputType | null
    _max: CiChangeMaxAggregateOutputType | null
  }

  type GetCiChangeGroupByPayload<T extends CiChangeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CiChangeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CiChangeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CiChangeGroupByOutputType[P]>
            : GetScalarType<T[P], CiChangeGroupByOutputType[P]>
        }
      >
    >


  export type CiChangeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    changeId?: boolean
    relationshipType?: boolean
    createdAt?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciChange"]>

  export type CiChangeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    changeId?: boolean
    relationshipType?: boolean
    createdAt?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciChange"]>

  export type CiChangeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ciId?: boolean
    changeId?: boolean
    relationshipType?: boolean
    createdAt?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ciChange"]>

  export type CiChangeSelectScalar = {
    ciId?: boolean
    changeId?: boolean
    relationshipType?: boolean
    createdAt?: boolean
  }

  export type CiChangeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ciId" | "changeId" | "relationshipType" | "createdAt", ExtArgs["result"]["ciChange"]>
  export type CiChangeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type CiChangeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type CiChangeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }

  export type $CiChangePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CiChange"
    objects: {
      configurationItem: Prisma.$ConfigurationItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      ciId: string
      changeId: string
      relationshipType: string
      createdAt: Date
    }, ExtArgs["result"]["ciChange"]>
    composites: {}
  }

  type CiChangeGetPayload<S extends boolean | null | undefined | CiChangeDefaultArgs> = $Result.GetResult<Prisma.$CiChangePayload, S>

  type CiChangeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CiChangeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CiChangeCountAggregateInputType | true
    }

  export interface CiChangeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CiChange'], meta: { name: 'CiChange' } }
    /**
     * Find zero or one CiChange that matches the filter.
     * @param {CiChangeFindUniqueArgs} args - Arguments to find a CiChange
     * @example
     * // Get one CiChange
     * const ciChange = await prisma.ciChange.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CiChangeFindUniqueArgs>(args: SelectSubset<T, CiChangeFindUniqueArgs<ExtArgs>>): Prisma__CiChangeClient<$Result.GetResult<Prisma.$CiChangePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CiChange that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CiChangeFindUniqueOrThrowArgs} args - Arguments to find a CiChange
     * @example
     * // Get one CiChange
     * const ciChange = await prisma.ciChange.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CiChangeFindUniqueOrThrowArgs>(args: SelectSubset<T, CiChangeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CiChangeClient<$Result.GetResult<Prisma.$CiChangePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CiChange that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiChangeFindFirstArgs} args - Arguments to find a CiChange
     * @example
     * // Get one CiChange
     * const ciChange = await prisma.ciChange.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CiChangeFindFirstArgs>(args?: SelectSubset<T, CiChangeFindFirstArgs<ExtArgs>>): Prisma__CiChangeClient<$Result.GetResult<Prisma.$CiChangePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CiChange that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiChangeFindFirstOrThrowArgs} args - Arguments to find a CiChange
     * @example
     * // Get one CiChange
     * const ciChange = await prisma.ciChange.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CiChangeFindFirstOrThrowArgs>(args?: SelectSubset<T, CiChangeFindFirstOrThrowArgs<ExtArgs>>): Prisma__CiChangeClient<$Result.GetResult<Prisma.$CiChangePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CiChanges that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiChangeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CiChanges
     * const ciChanges = await prisma.ciChange.findMany()
     * 
     * // Get first 10 CiChanges
     * const ciChanges = await prisma.ciChange.findMany({ take: 10 })
     * 
     * // Only select the `ciId`
     * const ciChangeWithCiIdOnly = await prisma.ciChange.findMany({ select: { ciId: true } })
     * 
     */
    findMany<T extends CiChangeFindManyArgs>(args?: SelectSubset<T, CiChangeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiChangePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CiChange.
     * @param {CiChangeCreateArgs} args - Arguments to create a CiChange.
     * @example
     * // Create one CiChange
     * const CiChange = await prisma.ciChange.create({
     *   data: {
     *     // ... data to create a CiChange
     *   }
     * })
     * 
     */
    create<T extends CiChangeCreateArgs>(args: SelectSubset<T, CiChangeCreateArgs<ExtArgs>>): Prisma__CiChangeClient<$Result.GetResult<Prisma.$CiChangePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CiChanges.
     * @param {CiChangeCreateManyArgs} args - Arguments to create many CiChanges.
     * @example
     * // Create many CiChanges
     * const ciChange = await prisma.ciChange.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CiChangeCreateManyArgs>(args?: SelectSubset<T, CiChangeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CiChanges and returns the data saved in the database.
     * @param {CiChangeCreateManyAndReturnArgs} args - Arguments to create many CiChanges.
     * @example
     * // Create many CiChanges
     * const ciChange = await prisma.ciChange.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CiChanges and only return the `ciId`
     * const ciChangeWithCiIdOnly = await prisma.ciChange.createManyAndReturn({
     *   select: { ciId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CiChangeCreateManyAndReturnArgs>(args?: SelectSubset<T, CiChangeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiChangePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CiChange.
     * @param {CiChangeDeleteArgs} args - Arguments to delete one CiChange.
     * @example
     * // Delete one CiChange
     * const CiChange = await prisma.ciChange.delete({
     *   where: {
     *     // ... filter to delete one CiChange
     *   }
     * })
     * 
     */
    delete<T extends CiChangeDeleteArgs>(args: SelectSubset<T, CiChangeDeleteArgs<ExtArgs>>): Prisma__CiChangeClient<$Result.GetResult<Prisma.$CiChangePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CiChange.
     * @param {CiChangeUpdateArgs} args - Arguments to update one CiChange.
     * @example
     * // Update one CiChange
     * const ciChange = await prisma.ciChange.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CiChangeUpdateArgs>(args: SelectSubset<T, CiChangeUpdateArgs<ExtArgs>>): Prisma__CiChangeClient<$Result.GetResult<Prisma.$CiChangePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CiChanges.
     * @param {CiChangeDeleteManyArgs} args - Arguments to filter CiChanges to delete.
     * @example
     * // Delete a few CiChanges
     * const { count } = await prisma.ciChange.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CiChangeDeleteManyArgs>(args?: SelectSubset<T, CiChangeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CiChanges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiChangeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CiChanges
     * const ciChange = await prisma.ciChange.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CiChangeUpdateManyArgs>(args: SelectSubset<T, CiChangeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CiChanges and returns the data updated in the database.
     * @param {CiChangeUpdateManyAndReturnArgs} args - Arguments to update many CiChanges.
     * @example
     * // Update many CiChanges
     * const ciChange = await prisma.ciChange.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CiChanges and only return the `ciId`
     * const ciChangeWithCiIdOnly = await prisma.ciChange.updateManyAndReturn({
     *   select: { ciId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CiChangeUpdateManyAndReturnArgs>(args: SelectSubset<T, CiChangeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiChangePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CiChange.
     * @param {CiChangeUpsertArgs} args - Arguments to update or create a CiChange.
     * @example
     * // Update or create a CiChange
     * const ciChange = await prisma.ciChange.upsert({
     *   create: {
     *     // ... data to create a CiChange
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CiChange we want to update
     *   }
     * })
     */
    upsert<T extends CiChangeUpsertArgs>(args: SelectSubset<T, CiChangeUpsertArgs<ExtArgs>>): Prisma__CiChangeClient<$Result.GetResult<Prisma.$CiChangePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CiChanges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiChangeCountArgs} args - Arguments to filter CiChanges to count.
     * @example
     * // Count the number of CiChanges
     * const count = await prisma.ciChange.count({
     *   where: {
     *     // ... the filter for the CiChanges we want to count
     *   }
     * })
    **/
    count<T extends CiChangeCountArgs>(
      args?: Subset<T, CiChangeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CiChangeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CiChange.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiChangeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CiChangeAggregateArgs>(args: Subset<T, CiChangeAggregateArgs>): Prisma.PrismaPromise<GetCiChangeAggregateType<T>>

    /**
     * Group by CiChange.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiChangeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CiChangeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CiChangeGroupByArgs['orderBy'] }
        : { orderBy?: CiChangeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CiChangeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCiChangeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CiChange model
   */
  readonly fields: CiChangeFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for CiChange.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CiChangeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    configurationItem<T extends ConfigurationItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItemDefaultArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CiChange model
   */
  interface CiChangeFieldRefs {
    readonly ciId: FieldRef<"CiChange", 'String'>
    readonly changeId: FieldRef<"CiChange", 'String'>
    readonly relationshipType: FieldRef<"CiChange", 'String'>
    readonly createdAt: FieldRef<"CiChange", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CiChange findUnique
   */
  export type CiChangeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiChange
     */
    select?: CiChangeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiChange
     */
    omit?: CiChangeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiChangeInclude<ExtArgs> | null
    /**
     * Filter, which CiChange to fetch.
     */
    where: CiChangeWhereUniqueInput
  }

  /**
   * CiChange findUniqueOrThrow
   */
  export type CiChangeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiChange
     */
    select?: CiChangeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiChange
     */
    omit?: CiChangeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiChangeInclude<ExtArgs> | null
    /**
     * Filter, which CiChange to fetch.
     */
    where: CiChangeWhereUniqueInput
  }

  /**
   * CiChange findFirst
   */
  export type CiChangeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiChange
     */
    select?: CiChangeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiChange
     */
    omit?: CiChangeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiChangeInclude<ExtArgs> | null
    /**
     * Filter, which CiChange to fetch.
     */
    where?: CiChangeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiChanges to fetch.
     */
    orderBy?: CiChangeOrderByWithRelationInput | CiChangeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CiChanges.
     */
    cursor?: CiChangeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiChanges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiChanges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CiChanges.
     */
    distinct?: CiChangeScalarFieldEnum | CiChangeScalarFieldEnum[]
  }

  /**
   * CiChange findFirstOrThrow
   */
  export type CiChangeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiChange
     */
    select?: CiChangeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiChange
     */
    omit?: CiChangeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiChangeInclude<ExtArgs> | null
    /**
     * Filter, which CiChange to fetch.
     */
    where?: CiChangeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiChanges to fetch.
     */
    orderBy?: CiChangeOrderByWithRelationInput | CiChangeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CiChanges.
     */
    cursor?: CiChangeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiChanges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiChanges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CiChanges.
     */
    distinct?: CiChangeScalarFieldEnum | CiChangeScalarFieldEnum[]
  }

  /**
   * CiChange findMany
   */
  export type CiChangeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiChange
     */
    select?: CiChangeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiChange
     */
    omit?: CiChangeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiChangeInclude<ExtArgs> | null
    /**
     * Filter, which CiChanges to fetch.
     */
    where?: CiChangeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiChanges to fetch.
     */
    orderBy?: CiChangeOrderByWithRelationInput | CiChangeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CiChanges.
     */
    cursor?: CiChangeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiChanges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiChanges.
     */
    skip?: number
    distinct?: CiChangeScalarFieldEnum | CiChangeScalarFieldEnum[]
  }

  /**
   * CiChange create
   */
  export type CiChangeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiChange
     */
    select?: CiChangeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiChange
     */
    omit?: CiChangeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiChangeInclude<ExtArgs> | null
    /**
     * The data needed to create a CiChange.
     */
    data: XOR<CiChangeCreateInput, CiChangeUncheckedCreateInput>
  }

  /**
   * CiChange createMany
   */
  export type CiChangeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CiChanges.
     */
    data: CiChangeCreateManyInput | CiChangeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CiChange createManyAndReturn
   */
  export type CiChangeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiChange
     */
    select?: CiChangeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CiChange
     */
    omit?: CiChangeOmit<ExtArgs> | null
    /**
     * The data used to create many CiChanges.
     */
    data: CiChangeCreateManyInput | CiChangeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiChangeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CiChange update
   */
  export type CiChangeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiChange
     */
    select?: CiChangeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiChange
     */
    omit?: CiChangeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiChangeInclude<ExtArgs> | null
    /**
     * The data needed to update a CiChange.
     */
    data: XOR<CiChangeUpdateInput, CiChangeUncheckedUpdateInput>
    /**
     * Choose, which CiChange to update.
     */
    where: CiChangeWhereUniqueInput
  }

  /**
   * CiChange updateMany
   */
  export type CiChangeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CiChanges.
     */
    data: XOR<CiChangeUpdateManyMutationInput, CiChangeUncheckedUpdateManyInput>
    /**
     * Filter which CiChanges to update
     */
    where?: CiChangeWhereInput
    /**
     * Limit how many CiChanges to update.
     */
    limit?: number
  }

  /**
   * CiChange updateManyAndReturn
   */
  export type CiChangeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiChange
     */
    select?: CiChangeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CiChange
     */
    omit?: CiChangeOmit<ExtArgs> | null
    /**
     * The data used to update CiChanges.
     */
    data: XOR<CiChangeUpdateManyMutationInput, CiChangeUncheckedUpdateManyInput>
    /**
     * Filter which CiChanges to update
     */
    where?: CiChangeWhereInput
    /**
     * Limit how many CiChanges to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiChangeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CiChange upsert
   */
  export type CiChangeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiChange
     */
    select?: CiChangeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiChange
     */
    omit?: CiChangeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiChangeInclude<ExtArgs> | null
    /**
     * The filter to search for the CiChange to update in case it exists.
     */
    where: CiChangeWhereUniqueInput
    /**
     * In case the CiChange found by the `where` argument doesn't exist, create a new CiChange with this data.
     */
    create: XOR<CiChangeCreateInput, CiChangeUncheckedCreateInput>
    /**
     * In case the CiChange was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CiChangeUpdateInput, CiChangeUncheckedUpdateInput>
  }

  /**
   * CiChange delete
   */
  export type CiChangeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiChange
     */
    select?: CiChangeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiChange
     */
    omit?: CiChangeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiChangeInclude<ExtArgs> | null
    /**
     * Filter which CiChange to delete.
     */
    where: CiChangeWhereUniqueInput
  }

  /**
   * CiChange deleteMany
   */
  export type CiChangeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CiChanges to delete
     */
    where?: CiChangeWhereInput
    /**
     * Limit how many CiChanges to delete.
     */
    limit?: number
  }

  /**
   * CiChange without action
   */
  export type CiChangeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiChange
     */
    select?: CiChangeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiChange
     */
    omit?: CiChangeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiChangeInclude<ExtArgs> | null
  }


  /**
   * Model DiscoverySchedule
   */

  export type AggregateDiscoverySchedule = {
    _count: DiscoveryScheduleCountAggregateOutputType | null
    _min: DiscoveryScheduleMinAggregateOutputType | null
    _max: DiscoveryScheduleMaxAggregateOutputType | null
  }

  export type DiscoveryScheduleMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    isActive: boolean | null
    cronExpression: string | null
    nextRunDate: Date | null
    lastRunDate: Date | null
    discoveryType: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type DiscoveryScheduleMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    isActive: boolean | null
    cronExpression: string | null
    nextRunDate: Date | null
    lastRunDate: Date | null
    discoveryType: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type DiscoveryScheduleCountAggregateOutputType = {
    id: number
    name: number
    description: number
    isActive: number
    cronExpression: number
    nextRunDate: number
    lastRunDate: number
    discoveryType: number
    scopeConfiguration: number
    credentialIds: number
    createdAt: number
    updatedAt: number
    createdBy: number
    _all: number
  }


  export type DiscoveryScheduleMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    isActive?: true
    cronExpression?: true
    nextRunDate?: true
    lastRunDate?: true
    discoveryType?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type DiscoveryScheduleMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    isActive?: true
    cronExpression?: true
    nextRunDate?: true
    lastRunDate?: true
    discoveryType?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type DiscoveryScheduleCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    isActive?: true
    cronExpression?: true
    nextRunDate?: true
    lastRunDate?: true
    discoveryType?: true
    scopeConfiguration?: true
    credentialIds?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    _all?: true
  }

  export type DiscoveryScheduleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DiscoverySchedule to aggregate.
     */
    where?: DiscoveryScheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverySchedules to fetch.
     */
    orderBy?: DiscoveryScheduleOrderByWithRelationInput | DiscoveryScheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DiscoveryScheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverySchedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverySchedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DiscoverySchedules
    **/
    _count?: true | DiscoveryScheduleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiscoveryScheduleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiscoveryScheduleMaxAggregateInputType
  }

  export type GetDiscoveryScheduleAggregateType<T extends DiscoveryScheduleAggregateArgs> = {
        [P in keyof T & keyof AggregateDiscoverySchedule]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiscoverySchedule[P]>
      : GetScalarType<T[P], AggregateDiscoverySchedule[P]>
  }




  export type DiscoveryScheduleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscoveryScheduleWhereInput
    orderBy?: DiscoveryScheduleOrderByWithAggregationInput | DiscoveryScheduleOrderByWithAggregationInput[]
    by: DiscoveryScheduleScalarFieldEnum[] | DiscoveryScheduleScalarFieldEnum
    having?: DiscoveryScheduleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiscoveryScheduleCountAggregateInputType | true
    _min?: DiscoveryScheduleMinAggregateInputType
    _max?: DiscoveryScheduleMaxAggregateInputType
  }

  export type DiscoveryScheduleGroupByOutputType = {
    id: string
    name: string
    description: string | null
    isActive: boolean
    cronExpression: string
    nextRunDate: Date | null
    lastRunDate: Date | null
    discoveryType: string
    scopeConfiguration: JsonValue
    credentialIds: string[]
    createdAt: Date
    updatedAt: Date
    createdBy: string | null
    _count: DiscoveryScheduleCountAggregateOutputType | null
    _min: DiscoveryScheduleMinAggregateOutputType | null
    _max: DiscoveryScheduleMaxAggregateOutputType | null
  }

  type GetDiscoveryScheduleGroupByPayload<T extends DiscoveryScheduleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DiscoveryScheduleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DiscoveryScheduleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DiscoveryScheduleGroupByOutputType[P]>
            : GetScalarType<T[P], DiscoveryScheduleGroupByOutputType[P]>
        }
      >
    >


  export type DiscoveryScheduleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    isActive?: boolean
    cronExpression?: boolean
    nextRunDate?: boolean
    lastRunDate?: boolean
    discoveryType?: boolean
    scopeConfiguration?: boolean
    credentialIds?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }, ExtArgs["result"]["discoverySchedule"]>

  export type DiscoveryScheduleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    isActive?: boolean
    cronExpression?: boolean
    nextRunDate?: boolean
    lastRunDate?: boolean
    discoveryType?: boolean
    scopeConfiguration?: boolean
    credentialIds?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }, ExtArgs["result"]["discoverySchedule"]>

  export type DiscoveryScheduleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    isActive?: boolean
    cronExpression?: boolean
    nextRunDate?: boolean
    lastRunDate?: boolean
    discoveryType?: boolean
    scopeConfiguration?: boolean
    credentialIds?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }, ExtArgs["result"]["discoverySchedule"]>

  export type DiscoveryScheduleSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    isActive?: boolean
    cronExpression?: boolean
    nextRunDate?: boolean
    lastRunDate?: boolean
    discoveryType?: boolean
    scopeConfiguration?: boolean
    credentialIds?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }

  export type DiscoveryScheduleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "isActive" | "cronExpression" | "nextRunDate" | "lastRunDate" | "discoveryType" | "scopeConfiguration" | "credentialIds" | "createdAt" | "updatedAt" | "createdBy", ExtArgs["result"]["discoverySchedule"]>

  export type $DiscoverySchedulePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DiscoverySchedule"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      isActive: boolean
      cronExpression: string
      nextRunDate: Date | null
      lastRunDate: Date | null
      discoveryType: string
      scopeConfiguration: Prisma.JsonValue
      credentialIds: string[]
      createdAt: Date
      updatedAt: Date
      createdBy: string | null
    }, ExtArgs["result"]["discoverySchedule"]>
    composites: {}
  }

  type DiscoveryScheduleGetPayload<S extends boolean | null | undefined | DiscoveryScheduleDefaultArgs> = $Result.GetResult<Prisma.$DiscoverySchedulePayload, S>

  type DiscoveryScheduleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DiscoveryScheduleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DiscoveryScheduleCountAggregateInputType | true
    }

  export interface DiscoveryScheduleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DiscoverySchedule'], meta: { name: 'DiscoverySchedule' } }
    /**
     * Find zero or one DiscoverySchedule that matches the filter.
     * @param {DiscoveryScheduleFindUniqueArgs} args - Arguments to find a DiscoverySchedule
     * @example
     * // Get one DiscoverySchedule
     * const discoverySchedule = await prisma.discoverySchedule.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DiscoveryScheduleFindUniqueArgs>(args: SelectSubset<T, DiscoveryScheduleFindUniqueArgs<ExtArgs>>): Prisma__DiscoveryScheduleClient<$Result.GetResult<Prisma.$DiscoverySchedulePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DiscoverySchedule that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DiscoveryScheduleFindUniqueOrThrowArgs} args - Arguments to find a DiscoverySchedule
     * @example
     * // Get one DiscoverySchedule
     * const discoverySchedule = await prisma.discoverySchedule.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DiscoveryScheduleFindUniqueOrThrowArgs>(args: SelectSubset<T, DiscoveryScheduleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DiscoveryScheduleClient<$Result.GetResult<Prisma.$DiscoverySchedulePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DiscoverySchedule that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveryScheduleFindFirstArgs} args - Arguments to find a DiscoverySchedule
     * @example
     * // Get one DiscoverySchedule
     * const discoverySchedule = await prisma.discoverySchedule.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DiscoveryScheduleFindFirstArgs>(args?: SelectSubset<T, DiscoveryScheduleFindFirstArgs<ExtArgs>>): Prisma__DiscoveryScheduleClient<$Result.GetResult<Prisma.$DiscoverySchedulePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DiscoverySchedule that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveryScheduleFindFirstOrThrowArgs} args - Arguments to find a DiscoverySchedule
     * @example
     * // Get one DiscoverySchedule
     * const discoverySchedule = await prisma.discoverySchedule.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DiscoveryScheduleFindFirstOrThrowArgs>(args?: SelectSubset<T, DiscoveryScheduleFindFirstOrThrowArgs<ExtArgs>>): Prisma__DiscoveryScheduleClient<$Result.GetResult<Prisma.$DiscoverySchedulePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DiscoverySchedules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveryScheduleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DiscoverySchedules
     * const discoverySchedules = await prisma.discoverySchedule.findMany()
     * 
     * // Get first 10 DiscoverySchedules
     * const discoverySchedules = await prisma.discoverySchedule.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const discoveryScheduleWithIdOnly = await prisma.discoverySchedule.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DiscoveryScheduleFindManyArgs>(args?: SelectSubset<T, DiscoveryScheduleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscoverySchedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DiscoverySchedule.
     * @param {DiscoveryScheduleCreateArgs} args - Arguments to create a DiscoverySchedule.
     * @example
     * // Create one DiscoverySchedule
     * const DiscoverySchedule = await prisma.discoverySchedule.create({
     *   data: {
     *     // ... data to create a DiscoverySchedule
     *   }
     * })
     * 
     */
    create<T extends DiscoveryScheduleCreateArgs>(args: SelectSubset<T, DiscoveryScheduleCreateArgs<ExtArgs>>): Prisma__DiscoveryScheduleClient<$Result.GetResult<Prisma.$DiscoverySchedulePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DiscoverySchedules.
     * @param {DiscoveryScheduleCreateManyArgs} args - Arguments to create many DiscoverySchedules.
     * @example
     * // Create many DiscoverySchedules
     * const discoverySchedule = await prisma.discoverySchedule.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DiscoveryScheduleCreateManyArgs>(args?: SelectSubset<T, DiscoveryScheduleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DiscoverySchedules and returns the data saved in the database.
     * @param {DiscoveryScheduleCreateManyAndReturnArgs} args - Arguments to create many DiscoverySchedules.
     * @example
     * // Create many DiscoverySchedules
     * const discoverySchedule = await prisma.discoverySchedule.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DiscoverySchedules and only return the `id`
     * const discoveryScheduleWithIdOnly = await prisma.discoverySchedule.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DiscoveryScheduleCreateManyAndReturnArgs>(args?: SelectSubset<T, DiscoveryScheduleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscoverySchedulePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DiscoverySchedule.
     * @param {DiscoveryScheduleDeleteArgs} args - Arguments to delete one DiscoverySchedule.
     * @example
     * // Delete one DiscoverySchedule
     * const DiscoverySchedule = await prisma.discoverySchedule.delete({
     *   where: {
     *     // ... filter to delete one DiscoverySchedule
     *   }
     * })
     * 
     */
    delete<T extends DiscoveryScheduleDeleteArgs>(args: SelectSubset<T, DiscoveryScheduleDeleteArgs<ExtArgs>>): Prisma__DiscoveryScheduleClient<$Result.GetResult<Prisma.$DiscoverySchedulePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DiscoverySchedule.
     * @param {DiscoveryScheduleUpdateArgs} args - Arguments to update one DiscoverySchedule.
     * @example
     * // Update one DiscoverySchedule
     * const discoverySchedule = await prisma.discoverySchedule.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DiscoveryScheduleUpdateArgs>(args: SelectSubset<T, DiscoveryScheduleUpdateArgs<ExtArgs>>): Prisma__DiscoveryScheduleClient<$Result.GetResult<Prisma.$DiscoverySchedulePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DiscoverySchedules.
     * @param {DiscoveryScheduleDeleteManyArgs} args - Arguments to filter DiscoverySchedules to delete.
     * @example
     * // Delete a few DiscoverySchedules
     * const { count } = await prisma.discoverySchedule.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DiscoveryScheduleDeleteManyArgs>(args?: SelectSubset<T, DiscoveryScheduleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiscoverySchedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveryScheduleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DiscoverySchedules
     * const discoverySchedule = await prisma.discoverySchedule.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DiscoveryScheduleUpdateManyArgs>(args: SelectSubset<T, DiscoveryScheduleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiscoverySchedules and returns the data updated in the database.
     * @param {DiscoveryScheduleUpdateManyAndReturnArgs} args - Arguments to update many DiscoverySchedules.
     * @example
     * // Update many DiscoverySchedules
     * const discoverySchedule = await prisma.discoverySchedule.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DiscoverySchedules and only return the `id`
     * const discoveryScheduleWithIdOnly = await prisma.discoverySchedule.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DiscoveryScheduleUpdateManyAndReturnArgs>(args: SelectSubset<T, DiscoveryScheduleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscoverySchedulePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DiscoverySchedule.
     * @param {DiscoveryScheduleUpsertArgs} args - Arguments to update or create a DiscoverySchedule.
     * @example
     * // Update or create a DiscoverySchedule
     * const discoverySchedule = await prisma.discoverySchedule.upsert({
     *   create: {
     *     // ... data to create a DiscoverySchedule
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DiscoverySchedule we want to update
     *   }
     * })
     */
    upsert<T extends DiscoveryScheduleUpsertArgs>(args: SelectSubset<T, DiscoveryScheduleUpsertArgs<ExtArgs>>): Prisma__DiscoveryScheduleClient<$Result.GetResult<Prisma.$DiscoverySchedulePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DiscoverySchedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveryScheduleCountArgs} args - Arguments to filter DiscoverySchedules to count.
     * @example
     * // Count the number of DiscoverySchedules
     * const count = await prisma.discoverySchedule.count({
     *   where: {
     *     // ... the filter for the DiscoverySchedules we want to count
     *   }
     * })
    **/
    count<T extends DiscoveryScheduleCountArgs>(
      args?: Subset<T, DiscoveryScheduleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiscoveryScheduleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DiscoverySchedule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveryScheduleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiscoveryScheduleAggregateArgs>(args: Subset<T, DiscoveryScheduleAggregateArgs>): Prisma.PrismaPromise<GetDiscoveryScheduleAggregateType<T>>

    /**
     * Group by DiscoverySchedule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveryScheduleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DiscoveryScheduleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DiscoveryScheduleGroupByArgs['orderBy'] }
        : { orderBy?: DiscoveryScheduleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DiscoveryScheduleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscoveryScheduleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DiscoverySchedule model
   */
  readonly fields: DiscoveryScheduleFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for DiscoverySchedule.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DiscoveryScheduleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DiscoverySchedule model
   */
  interface DiscoveryScheduleFieldRefs {
    readonly id: FieldRef<"DiscoverySchedule", 'String'>
    readonly name: FieldRef<"DiscoverySchedule", 'String'>
    readonly description: FieldRef<"DiscoverySchedule", 'String'>
    readonly isActive: FieldRef<"DiscoverySchedule", 'Boolean'>
    readonly cronExpression: FieldRef<"DiscoverySchedule", 'String'>
    readonly nextRunDate: FieldRef<"DiscoverySchedule", 'DateTime'>
    readonly lastRunDate: FieldRef<"DiscoverySchedule", 'DateTime'>
    readonly discoveryType: FieldRef<"DiscoverySchedule", 'String'>
    readonly scopeConfiguration: FieldRef<"DiscoverySchedule", 'Json'>
    readonly credentialIds: FieldRef<"DiscoverySchedule", 'String[]'>
    readonly createdAt: FieldRef<"DiscoverySchedule", 'DateTime'>
    readonly updatedAt: FieldRef<"DiscoverySchedule", 'DateTime'>
    readonly createdBy: FieldRef<"DiscoverySchedule", 'String'>
  }
    

  // Custom InputTypes
  /**
   * DiscoverySchedule findUnique
   */
  export type DiscoveryScheduleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoverySchedule
     */
    select?: DiscoveryScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoverySchedule
     */
    omit?: DiscoveryScheduleOmit<ExtArgs> | null
    /**
     * Filter, which DiscoverySchedule to fetch.
     */
    where: DiscoveryScheduleWhereUniqueInput
  }

  /**
   * DiscoverySchedule findUniqueOrThrow
   */
  export type DiscoveryScheduleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoverySchedule
     */
    select?: DiscoveryScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoverySchedule
     */
    omit?: DiscoveryScheduleOmit<ExtArgs> | null
    /**
     * Filter, which DiscoverySchedule to fetch.
     */
    where: DiscoveryScheduleWhereUniqueInput
  }

  /**
   * DiscoverySchedule findFirst
   */
  export type DiscoveryScheduleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoverySchedule
     */
    select?: DiscoveryScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoverySchedule
     */
    omit?: DiscoveryScheduleOmit<ExtArgs> | null
    /**
     * Filter, which DiscoverySchedule to fetch.
     */
    where?: DiscoveryScheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverySchedules to fetch.
     */
    orderBy?: DiscoveryScheduleOrderByWithRelationInput | DiscoveryScheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiscoverySchedules.
     */
    cursor?: DiscoveryScheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverySchedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverySchedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiscoverySchedules.
     */
    distinct?: DiscoveryScheduleScalarFieldEnum | DiscoveryScheduleScalarFieldEnum[]
  }

  /**
   * DiscoverySchedule findFirstOrThrow
   */
  export type DiscoveryScheduleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoverySchedule
     */
    select?: DiscoveryScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoverySchedule
     */
    omit?: DiscoveryScheduleOmit<ExtArgs> | null
    /**
     * Filter, which DiscoverySchedule to fetch.
     */
    where?: DiscoveryScheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverySchedules to fetch.
     */
    orderBy?: DiscoveryScheduleOrderByWithRelationInput | DiscoveryScheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiscoverySchedules.
     */
    cursor?: DiscoveryScheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverySchedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverySchedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiscoverySchedules.
     */
    distinct?: DiscoveryScheduleScalarFieldEnum | DiscoveryScheduleScalarFieldEnum[]
  }

  /**
   * DiscoverySchedule findMany
   */
  export type DiscoveryScheduleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoverySchedule
     */
    select?: DiscoveryScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoverySchedule
     */
    omit?: DiscoveryScheduleOmit<ExtArgs> | null
    /**
     * Filter, which DiscoverySchedules to fetch.
     */
    where?: DiscoveryScheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoverySchedules to fetch.
     */
    orderBy?: DiscoveryScheduleOrderByWithRelationInput | DiscoveryScheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DiscoverySchedules.
     */
    cursor?: DiscoveryScheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoverySchedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoverySchedules.
     */
    skip?: number
    distinct?: DiscoveryScheduleScalarFieldEnum | DiscoveryScheduleScalarFieldEnum[]
  }

  /**
   * DiscoverySchedule create
   */
  export type DiscoveryScheduleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoverySchedule
     */
    select?: DiscoveryScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoverySchedule
     */
    omit?: DiscoveryScheduleOmit<ExtArgs> | null
    /**
     * The data needed to create a DiscoverySchedule.
     */
    data: XOR<DiscoveryScheduleCreateInput, DiscoveryScheduleUncheckedCreateInput>
  }

  /**
   * DiscoverySchedule createMany
   */
  export type DiscoveryScheduleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DiscoverySchedules.
     */
    data: DiscoveryScheduleCreateManyInput | DiscoveryScheduleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DiscoverySchedule createManyAndReturn
   */
  export type DiscoveryScheduleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoverySchedule
     */
    select?: DiscoveryScheduleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoverySchedule
     */
    omit?: DiscoveryScheduleOmit<ExtArgs> | null
    /**
     * The data used to create many DiscoverySchedules.
     */
    data: DiscoveryScheduleCreateManyInput | DiscoveryScheduleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DiscoverySchedule update
   */
  export type DiscoveryScheduleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoverySchedule
     */
    select?: DiscoveryScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoverySchedule
     */
    omit?: DiscoveryScheduleOmit<ExtArgs> | null
    /**
     * The data needed to update a DiscoverySchedule.
     */
    data: XOR<DiscoveryScheduleUpdateInput, DiscoveryScheduleUncheckedUpdateInput>
    /**
     * Choose, which DiscoverySchedule to update.
     */
    where: DiscoveryScheduleWhereUniqueInput
  }

  /**
   * DiscoverySchedule updateMany
   */
  export type DiscoveryScheduleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DiscoverySchedules.
     */
    data: XOR<DiscoveryScheduleUpdateManyMutationInput, DiscoveryScheduleUncheckedUpdateManyInput>
    /**
     * Filter which DiscoverySchedules to update
     */
    where?: DiscoveryScheduleWhereInput
    /**
     * Limit how many DiscoverySchedules to update.
     */
    limit?: number
  }

  /**
   * DiscoverySchedule updateManyAndReturn
   */
  export type DiscoveryScheduleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoverySchedule
     */
    select?: DiscoveryScheduleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoverySchedule
     */
    omit?: DiscoveryScheduleOmit<ExtArgs> | null
    /**
     * The data used to update DiscoverySchedules.
     */
    data: XOR<DiscoveryScheduleUpdateManyMutationInput, DiscoveryScheduleUncheckedUpdateManyInput>
    /**
     * Filter which DiscoverySchedules to update
     */
    where?: DiscoveryScheduleWhereInput
    /**
     * Limit how many DiscoverySchedules to update.
     */
    limit?: number
  }

  /**
   * DiscoverySchedule upsert
   */
  export type DiscoveryScheduleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoverySchedule
     */
    select?: DiscoveryScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoverySchedule
     */
    omit?: DiscoveryScheduleOmit<ExtArgs> | null
    /**
     * The filter to search for the DiscoverySchedule to update in case it exists.
     */
    where: DiscoveryScheduleWhereUniqueInput
    /**
     * In case the DiscoverySchedule found by the `where` argument doesn't exist, create a new DiscoverySchedule with this data.
     */
    create: XOR<DiscoveryScheduleCreateInput, DiscoveryScheduleUncheckedCreateInput>
    /**
     * In case the DiscoverySchedule was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DiscoveryScheduleUpdateInput, DiscoveryScheduleUncheckedUpdateInput>
  }

  /**
   * DiscoverySchedule delete
   */
  export type DiscoveryScheduleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoverySchedule
     */
    select?: DiscoveryScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoverySchedule
     */
    omit?: DiscoveryScheduleOmit<ExtArgs> | null
    /**
     * Filter which DiscoverySchedule to delete.
     */
    where: DiscoveryScheduleWhereUniqueInput
  }

  /**
   * DiscoverySchedule deleteMany
   */
  export type DiscoveryScheduleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DiscoverySchedules to delete
     */
    where?: DiscoveryScheduleWhereInput
    /**
     * Limit how many DiscoverySchedules to delete.
     */
    limit?: number
  }

  /**
   * DiscoverySchedule without action
   */
  export type DiscoveryScheduleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoverySchedule
     */
    select?: DiscoveryScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoverySchedule
     */
    omit?: DiscoveryScheduleOmit<ExtArgs> | null
  }


  /**
   * Model DiscoveryRun
   */

  export type AggregateDiscoveryRun = {
    _count: DiscoveryRunCountAggregateOutputType | null
    _avg: DiscoveryRunAvgAggregateOutputType | null
    _sum: DiscoveryRunSumAggregateOutputType | null
    _min: DiscoveryRunMinAggregateOutputType | null
    _max: DiscoveryRunMaxAggregateOutputType | null
  }

  export type DiscoveryRunAvgAggregateOutputType = {
    itemsDiscovered: number | null
    itemsUpdated: number | null
    itemsCreated: number | null
  }

  export type DiscoveryRunSumAggregateOutputType = {
    itemsDiscovered: number | null
    itemsUpdated: number | null
    itemsCreated: number | null
  }

  export type DiscoveryRunMinAggregateOutputType = {
    id: string | null
    scheduleId: string | null
    status: string | null
    startTime: Date | null
    endTime: Date | null
    itemsDiscovered: number | null
    itemsUpdated: number | null
    itemsCreated: number | null
  }

  export type DiscoveryRunMaxAggregateOutputType = {
    id: string | null
    scheduleId: string | null
    status: string | null
    startTime: Date | null
    endTime: Date | null
    itemsDiscovered: number | null
    itemsUpdated: number | null
    itemsCreated: number | null
  }

  export type DiscoveryRunCountAggregateOutputType = {
    id: number
    scheduleId: number
    status: number
    startTime: number
    endTime: number
    itemsDiscovered: number
    itemsUpdated: number
    itemsCreated: number
    errors: number
    _all: number
  }


  export type DiscoveryRunAvgAggregateInputType = {
    itemsDiscovered?: true
    itemsUpdated?: true
    itemsCreated?: true
  }

  export type DiscoveryRunSumAggregateInputType = {
    itemsDiscovered?: true
    itemsUpdated?: true
    itemsCreated?: true
  }

  export type DiscoveryRunMinAggregateInputType = {
    id?: true
    scheduleId?: true
    status?: true
    startTime?: true
    endTime?: true
    itemsDiscovered?: true
    itemsUpdated?: true
    itemsCreated?: true
  }

  export type DiscoveryRunMaxAggregateInputType = {
    id?: true
    scheduleId?: true
    status?: true
    startTime?: true
    endTime?: true
    itemsDiscovered?: true
    itemsUpdated?: true
    itemsCreated?: true
  }

  export type DiscoveryRunCountAggregateInputType = {
    id?: true
    scheduleId?: true
    status?: true
    startTime?: true
    endTime?: true
    itemsDiscovered?: true
    itemsUpdated?: true
    itemsCreated?: true
    errors?: true
    _all?: true
  }

  export type DiscoveryRunAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DiscoveryRun to aggregate.
     */
    where?: DiscoveryRunWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoveryRuns to fetch.
     */
    orderBy?: DiscoveryRunOrderByWithRelationInput | DiscoveryRunOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DiscoveryRunWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoveryRuns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoveryRuns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DiscoveryRuns
    **/
    _count?: true | DiscoveryRunCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DiscoveryRunAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DiscoveryRunSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiscoveryRunMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiscoveryRunMaxAggregateInputType
  }

  export type GetDiscoveryRunAggregateType<T extends DiscoveryRunAggregateArgs> = {
        [P in keyof T & keyof AggregateDiscoveryRun]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiscoveryRun[P]>
      : GetScalarType<T[P], AggregateDiscoveryRun[P]>
  }




  export type DiscoveryRunGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscoveryRunWhereInput
    orderBy?: DiscoveryRunOrderByWithAggregationInput | DiscoveryRunOrderByWithAggregationInput[]
    by: DiscoveryRunScalarFieldEnum[] | DiscoveryRunScalarFieldEnum
    having?: DiscoveryRunScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiscoveryRunCountAggregateInputType | true
    _avg?: DiscoveryRunAvgAggregateInputType
    _sum?: DiscoveryRunSumAggregateInputType
    _min?: DiscoveryRunMinAggregateInputType
    _max?: DiscoveryRunMaxAggregateInputType
  }

  export type DiscoveryRunGroupByOutputType = {
    id: string
    scheduleId: string | null
    status: string
    startTime: Date
    endTime: Date | null
    itemsDiscovered: number
    itemsUpdated: number
    itemsCreated: number
    errors: JsonValue | null
    _count: DiscoveryRunCountAggregateOutputType | null
    _avg: DiscoveryRunAvgAggregateOutputType | null
    _sum: DiscoveryRunSumAggregateOutputType | null
    _min: DiscoveryRunMinAggregateOutputType | null
    _max: DiscoveryRunMaxAggregateOutputType | null
  }

  type GetDiscoveryRunGroupByPayload<T extends DiscoveryRunGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DiscoveryRunGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DiscoveryRunGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DiscoveryRunGroupByOutputType[P]>
            : GetScalarType<T[P], DiscoveryRunGroupByOutputType[P]>
        }
      >
    >


  export type DiscoveryRunSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    scheduleId?: boolean
    status?: boolean
    startTime?: boolean
    endTime?: boolean
    itemsDiscovered?: boolean
    itemsUpdated?: boolean
    itemsCreated?: boolean
    errors?: boolean
    discoveredItems?: boolean | DiscoveryRun$discoveredItemsArgs<ExtArgs>
    _count?: boolean | DiscoveryRunCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discoveryRun"]>

  export type DiscoveryRunSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    scheduleId?: boolean
    status?: boolean
    startTime?: boolean
    endTime?: boolean
    itemsDiscovered?: boolean
    itemsUpdated?: boolean
    itemsCreated?: boolean
    errors?: boolean
  }, ExtArgs["result"]["discoveryRun"]>

  export type DiscoveryRunSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    scheduleId?: boolean
    status?: boolean
    startTime?: boolean
    endTime?: boolean
    itemsDiscovered?: boolean
    itemsUpdated?: boolean
    itemsCreated?: boolean
    errors?: boolean
  }, ExtArgs["result"]["discoveryRun"]>

  export type DiscoveryRunSelectScalar = {
    id?: boolean
    scheduleId?: boolean
    status?: boolean
    startTime?: boolean
    endTime?: boolean
    itemsDiscovered?: boolean
    itemsUpdated?: boolean
    itemsCreated?: boolean
    errors?: boolean
  }

  export type DiscoveryRunOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "scheduleId" | "status" | "startTime" | "endTime" | "itemsDiscovered" | "itemsUpdated" | "itemsCreated" | "errors", ExtArgs["result"]["discoveryRun"]>
  export type DiscoveryRunInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    discoveredItems?: boolean | DiscoveryRun$discoveredItemsArgs<ExtArgs>
    _count?: boolean | DiscoveryRunCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DiscoveryRunIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type DiscoveryRunIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $DiscoveryRunPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DiscoveryRun"
    objects: {
      discoveredItems: Prisma.$DiscoveredItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      scheduleId: string | null
      status: string
      startTime: Date
      endTime: Date | null
      itemsDiscovered: number
      itemsUpdated: number
      itemsCreated: number
      errors: Prisma.JsonValue | null
    }, ExtArgs["result"]["discoveryRun"]>
    composites: {}
  }

  type DiscoveryRunGetPayload<S extends boolean | null | undefined | DiscoveryRunDefaultArgs> = $Result.GetResult<Prisma.$DiscoveryRunPayload, S>

  type DiscoveryRunCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DiscoveryRunFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DiscoveryRunCountAggregateInputType | true
    }

  export interface DiscoveryRunDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DiscoveryRun'], meta: { name: 'DiscoveryRun' } }
    /**
     * Find zero or one DiscoveryRun that matches the filter.
     * @param {DiscoveryRunFindUniqueArgs} args - Arguments to find a DiscoveryRun
     * @example
     * // Get one DiscoveryRun
     * const discoveryRun = await prisma.discoveryRun.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DiscoveryRunFindUniqueArgs>(args: SelectSubset<T, DiscoveryRunFindUniqueArgs<ExtArgs>>): Prisma__DiscoveryRunClient<$Result.GetResult<Prisma.$DiscoveryRunPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DiscoveryRun that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DiscoveryRunFindUniqueOrThrowArgs} args - Arguments to find a DiscoveryRun
     * @example
     * // Get one DiscoveryRun
     * const discoveryRun = await prisma.discoveryRun.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DiscoveryRunFindUniqueOrThrowArgs>(args: SelectSubset<T, DiscoveryRunFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DiscoveryRunClient<$Result.GetResult<Prisma.$DiscoveryRunPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DiscoveryRun that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveryRunFindFirstArgs} args - Arguments to find a DiscoveryRun
     * @example
     * // Get one DiscoveryRun
     * const discoveryRun = await prisma.discoveryRun.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DiscoveryRunFindFirstArgs>(args?: SelectSubset<T, DiscoveryRunFindFirstArgs<ExtArgs>>): Prisma__DiscoveryRunClient<$Result.GetResult<Prisma.$DiscoveryRunPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DiscoveryRun that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveryRunFindFirstOrThrowArgs} args - Arguments to find a DiscoveryRun
     * @example
     * // Get one DiscoveryRun
     * const discoveryRun = await prisma.discoveryRun.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DiscoveryRunFindFirstOrThrowArgs>(args?: SelectSubset<T, DiscoveryRunFindFirstOrThrowArgs<ExtArgs>>): Prisma__DiscoveryRunClient<$Result.GetResult<Prisma.$DiscoveryRunPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DiscoveryRuns that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveryRunFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DiscoveryRuns
     * const discoveryRuns = await prisma.discoveryRun.findMany()
     * 
     * // Get first 10 DiscoveryRuns
     * const discoveryRuns = await prisma.discoveryRun.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const discoveryRunWithIdOnly = await prisma.discoveryRun.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DiscoveryRunFindManyArgs>(args?: SelectSubset<T, DiscoveryRunFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscoveryRunPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DiscoveryRun.
     * @param {DiscoveryRunCreateArgs} args - Arguments to create a DiscoveryRun.
     * @example
     * // Create one DiscoveryRun
     * const DiscoveryRun = await prisma.discoveryRun.create({
     *   data: {
     *     // ... data to create a DiscoveryRun
     *   }
     * })
     * 
     */
    create<T extends DiscoveryRunCreateArgs>(args: SelectSubset<T, DiscoveryRunCreateArgs<ExtArgs>>): Prisma__DiscoveryRunClient<$Result.GetResult<Prisma.$DiscoveryRunPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DiscoveryRuns.
     * @param {DiscoveryRunCreateManyArgs} args - Arguments to create many DiscoveryRuns.
     * @example
     * // Create many DiscoveryRuns
     * const discoveryRun = await prisma.discoveryRun.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DiscoveryRunCreateManyArgs>(args?: SelectSubset<T, DiscoveryRunCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DiscoveryRuns and returns the data saved in the database.
     * @param {DiscoveryRunCreateManyAndReturnArgs} args - Arguments to create many DiscoveryRuns.
     * @example
     * // Create many DiscoveryRuns
     * const discoveryRun = await prisma.discoveryRun.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DiscoveryRuns and only return the `id`
     * const discoveryRunWithIdOnly = await prisma.discoveryRun.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DiscoveryRunCreateManyAndReturnArgs>(args?: SelectSubset<T, DiscoveryRunCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscoveryRunPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DiscoveryRun.
     * @param {DiscoveryRunDeleteArgs} args - Arguments to delete one DiscoveryRun.
     * @example
     * // Delete one DiscoveryRun
     * const DiscoveryRun = await prisma.discoveryRun.delete({
     *   where: {
     *     // ... filter to delete one DiscoveryRun
     *   }
     * })
     * 
     */
    delete<T extends DiscoveryRunDeleteArgs>(args: SelectSubset<T, DiscoveryRunDeleteArgs<ExtArgs>>): Prisma__DiscoveryRunClient<$Result.GetResult<Prisma.$DiscoveryRunPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DiscoveryRun.
     * @param {DiscoveryRunUpdateArgs} args - Arguments to update one DiscoveryRun.
     * @example
     * // Update one DiscoveryRun
     * const discoveryRun = await prisma.discoveryRun.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DiscoveryRunUpdateArgs>(args: SelectSubset<T, DiscoveryRunUpdateArgs<ExtArgs>>): Prisma__DiscoveryRunClient<$Result.GetResult<Prisma.$DiscoveryRunPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DiscoveryRuns.
     * @param {DiscoveryRunDeleteManyArgs} args - Arguments to filter DiscoveryRuns to delete.
     * @example
     * // Delete a few DiscoveryRuns
     * const { count } = await prisma.discoveryRun.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DiscoveryRunDeleteManyArgs>(args?: SelectSubset<T, DiscoveryRunDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiscoveryRuns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveryRunUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DiscoveryRuns
     * const discoveryRun = await prisma.discoveryRun.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DiscoveryRunUpdateManyArgs>(args: SelectSubset<T, DiscoveryRunUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiscoveryRuns and returns the data updated in the database.
     * @param {DiscoveryRunUpdateManyAndReturnArgs} args - Arguments to update many DiscoveryRuns.
     * @example
     * // Update many DiscoveryRuns
     * const discoveryRun = await prisma.discoveryRun.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DiscoveryRuns and only return the `id`
     * const discoveryRunWithIdOnly = await prisma.discoveryRun.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DiscoveryRunUpdateManyAndReturnArgs>(args: SelectSubset<T, DiscoveryRunUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscoveryRunPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DiscoveryRun.
     * @param {DiscoveryRunUpsertArgs} args - Arguments to update or create a DiscoveryRun.
     * @example
     * // Update or create a DiscoveryRun
     * const discoveryRun = await prisma.discoveryRun.upsert({
     *   create: {
     *     // ... data to create a DiscoveryRun
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DiscoveryRun we want to update
     *   }
     * })
     */
    upsert<T extends DiscoveryRunUpsertArgs>(args: SelectSubset<T, DiscoveryRunUpsertArgs<ExtArgs>>): Prisma__DiscoveryRunClient<$Result.GetResult<Prisma.$DiscoveryRunPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DiscoveryRuns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveryRunCountArgs} args - Arguments to filter DiscoveryRuns to count.
     * @example
     * // Count the number of DiscoveryRuns
     * const count = await prisma.discoveryRun.count({
     *   where: {
     *     // ... the filter for the DiscoveryRuns we want to count
     *   }
     * })
    **/
    count<T extends DiscoveryRunCountArgs>(
      args?: Subset<T, DiscoveryRunCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiscoveryRunCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DiscoveryRun.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveryRunAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiscoveryRunAggregateArgs>(args: Subset<T, DiscoveryRunAggregateArgs>): Prisma.PrismaPromise<GetDiscoveryRunAggregateType<T>>

    /**
     * Group by DiscoveryRun.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveryRunGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DiscoveryRunGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DiscoveryRunGroupByArgs['orderBy'] }
        : { orderBy?: DiscoveryRunGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DiscoveryRunGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscoveryRunGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DiscoveryRun model
   */
  readonly fields: DiscoveryRunFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for DiscoveryRun.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DiscoveryRunClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    discoveredItems<T extends DiscoveryRun$discoveredItemsArgs<ExtArgs> = {}>(args?: Subset<T, DiscoveryRun$discoveredItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscoveredItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DiscoveryRun model
   */
  interface DiscoveryRunFieldRefs {
    readonly id: FieldRef<"DiscoveryRun", 'String'>
    readonly scheduleId: FieldRef<"DiscoveryRun", 'String'>
    readonly status: FieldRef<"DiscoveryRun", 'String'>
    readonly startTime: FieldRef<"DiscoveryRun", 'DateTime'>
    readonly endTime: FieldRef<"DiscoveryRun", 'DateTime'>
    readonly itemsDiscovered: FieldRef<"DiscoveryRun", 'Int'>
    readonly itemsUpdated: FieldRef<"DiscoveryRun", 'Int'>
    readonly itemsCreated: FieldRef<"DiscoveryRun", 'Int'>
    readonly errors: FieldRef<"DiscoveryRun", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * DiscoveryRun findUnique
   */
  export type DiscoveryRunFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveryRun
     */
    select?: DiscoveryRunSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveryRun
     */
    omit?: DiscoveryRunOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveryRunInclude<ExtArgs> | null
    /**
     * Filter, which DiscoveryRun to fetch.
     */
    where: DiscoveryRunWhereUniqueInput
  }

  /**
   * DiscoveryRun findUniqueOrThrow
   */
  export type DiscoveryRunFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveryRun
     */
    select?: DiscoveryRunSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveryRun
     */
    omit?: DiscoveryRunOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveryRunInclude<ExtArgs> | null
    /**
     * Filter, which DiscoveryRun to fetch.
     */
    where: DiscoveryRunWhereUniqueInput
  }

  /**
   * DiscoveryRun findFirst
   */
  export type DiscoveryRunFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveryRun
     */
    select?: DiscoveryRunSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveryRun
     */
    omit?: DiscoveryRunOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveryRunInclude<ExtArgs> | null
    /**
     * Filter, which DiscoveryRun to fetch.
     */
    where?: DiscoveryRunWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoveryRuns to fetch.
     */
    orderBy?: DiscoveryRunOrderByWithRelationInput | DiscoveryRunOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiscoveryRuns.
     */
    cursor?: DiscoveryRunWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoveryRuns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoveryRuns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiscoveryRuns.
     */
    distinct?: DiscoveryRunScalarFieldEnum | DiscoveryRunScalarFieldEnum[]
  }

  /**
   * DiscoveryRun findFirstOrThrow
   */
  export type DiscoveryRunFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveryRun
     */
    select?: DiscoveryRunSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveryRun
     */
    omit?: DiscoveryRunOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveryRunInclude<ExtArgs> | null
    /**
     * Filter, which DiscoveryRun to fetch.
     */
    where?: DiscoveryRunWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoveryRuns to fetch.
     */
    orderBy?: DiscoveryRunOrderByWithRelationInput | DiscoveryRunOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiscoveryRuns.
     */
    cursor?: DiscoveryRunWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoveryRuns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoveryRuns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiscoveryRuns.
     */
    distinct?: DiscoveryRunScalarFieldEnum | DiscoveryRunScalarFieldEnum[]
  }

  /**
   * DiscoveryRun findMany
   */
  export type DiscoveryRunFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveryRun
     */
    select?: DiscoveryRunSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveryRun
     */
    omit?: DiscoveryRunOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveryRunInclude<ExtArgs> | null
    /**
     * Filter, which DiscoveryRuns to fetch.
     */
    where?: DiscoveryRunWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoveryRuns to fetch.
     */
    orderBy?: DiscoveryRunOrderByWithRelationInput | DiscoveryRunOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DiscoveryRuns.
     */
    cursor?: DiscoveryRunWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoveryRuns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoveryRuns.
     */
    skip?: number
    distinct?: DiscoveryRunScalarFieldEnum | DiscoveryRunScalarFieldEnum[]
  }

  /**
   * DiscoveryRun create
   */
  export type DiscoveryRunCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveryRun
     */
    select?: DiscoveryRunSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveryRun
     */
    omit?: DiscoveryRunOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveryRunInclude<ExtArgs> | null
    /**
     * The data needed to create a DiscoveryRun.
     */
    data: XOR<DiscoveryRunCreateInput, DiscoveryRunUncheckedCreateInput>
  }

  /**
   * DiscoveryRun createMany
   */
  export type DiscoveryRunCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DiscoveryRuns.
     */
    data: DiscoveryRunCreateManyInput | DiscoveryRunCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DiscoveryRun createManyAndReturn
   */
  export type DiscoveryRunCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveryRun
     */
    select?: DiscoveryRunSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveryRun
     */
    omit?: DiscoveryRunOmit<ExtArgs> | null
    /**
     * The data used to create many DiscoveryRuns.
     */
    data: DiscoveryRunCreateManyInput | DiscoveryRunCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DiscoveryRun update
   */
  export type DiscoveryRunUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveryRun
     */
    select?: DiscoveryRunSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveryRun
     */
    omit?: DiscoveryRunOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveryRunInclude<ExtArgs> | null
    /**
     * The data needed to update a DiscoveryRun.
     */
    data: XOR<DiscoveryRunUpdateInput, DiscoveryRunUncheckedUpdateInput>
    /**
     * Choose, which DiscoveryRun to update.
     */
    where: DiscoveryRunWhereUniqueInput
  }

  /**
   * DiscoveryRun updateMany
   */
  export type DiscoveryRunUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DiscoveryRuns.
     */
    data: XOR<DiscoveryRunUpdateManyMutationInput, DiscoveryRunUncheckedUpdateManyInput>
    /**
     * Filter which DiscoveryRuns to update
     */
    where?: DiscoveryRunWhereInput
    /**
     * Limit how many DiscoveryRuns to update.
     */
    limit?: number
  }

  /**
   * DiscoveryRun updateManyAndReturn
   */
  export type DiscoveryRunUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveryRun
     */
    select?: DiscoveryRunSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveryRun
     */
    omit?: DiscoveryRunOmit<ExtArgs> | null
    /**
     * The data used to update DiscoveryRuns.
     */
    data: XOR<DiscoveryRunUpdateManyMutationInput, DiscoveryRunUncheckedUpdateManyInput>
    /**
     * Filter which DiscoveryRuns to update
     */
    where?: DiscoveryRunWhereInput
    /**
     * Limit how many DiscoveryRuns to update.
     */
    limit?: number
  }

  /**
   * DiscoveryRun upsert
   */
  export type DiscoveryRunUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveryRun
     */
    select?: DiscoveryRunSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveryRun
     */
    omit?: DiscoveryRunOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveryRunInclude<ExtArgs> | null
    /**
     * The filter to search for the DiscoveryRun to update in case it exists.
     */
    where: DiscoveryRunWhereUniqueInput
    /**
     * In case the DiscoveryRun found by the `where` argument doesn't exist, create a new DiscoveryRun with this data.
     */
    create: XOR<DiscoveryRunCreateInput, DiscoveryRunUncheckedCreateInput>
    /**
     * In case the DiscoveryRun was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DiscoveryRunUpdateInput, DiscoveryRunUncheckedUpdateInput>
  }

  /**
   * DiscoveryRun delete
   */
  export type DiscoveryRunDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveryRun
     */
    select?: DiscoveryRunSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveryRun
     */
    omit?: DiscoveryRunOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveryRunInclude<ExtArgs> | null
    /**
     * Filter which DiscoveryRun to delete.
     */
    where: DiscoveryRunWhereUniqueInput
  }

  /**
   * DiscoveryRun deleteMany
   */
  export type DiscoveryRunDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DiscoveryRuns to delete
     */
    where?: DiscoveryRunWhereInput
    /**
     * Limit how many DiscoveryRuns to delete.
     */
    limit?: number
  }

  /**
   * DiscoveryRun.discoveredItems
   */
  export type DiscoveryRun$discoveredItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveredItem
     */
    select?: DiscoveredItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveredItem
     */
    omit?: DiscoveredItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveredItemInclude<ExtArgs> | null
    where?: DiscoveredItemWhereInput
    orderBy?: DiscoveredItemOrderByWithRelationInput | DiscoveredItemOrderByWithRelationInput[]
    cursor?: DiscoveredItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DiscoveredItemScalarFieldEnum | DiscoveredItemScalarFieldEnum[]
  }

  /**
   * DiscoveryRun without action
   */
  export type DiscoveryRunDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveryRun
     */
    select?: DiscoveryRunSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveryRun
     */
    omit?: DiscoveryRunOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveryRunInclude<ExtArgs> | null
  }


  /**
   * Model DiscoveredItem
   */

  export type AggregateDiscoveredItem = {
    _count: DiscoveredItemCountAggregateOutputType | null
    _min: DiscoveredItemMinAggregateOutputType | null
    _max: DiscoveredItemMaxAggregateOutputType | null
  }

  export type DiscoveredItemMinAggregateOutputType = {
    id: string | null
    runId: string | null
    ciId: string | null
    fingerprint: string | null
    status: string | null
    processingNotes: string | null
    discoveredAt: Date | null
    processedAt: Date | null
  }

  export type DiscoveredItemMaxAggregateOutputType = {
    id: string | null
    runId: string | null
    ciId: string | null
    fingerprint: string | null
    status: string | null
    processingNotes: string | null
    discoveredAt: Date | null
    processedAt: Date | null
  }

  export type DiscoveredItemCountAggregateOutputType = {
    id: number
    runId: number
    ciId: number
    discoveredData: number
    fingerprint: number
    status: number
    processingNotes: number
    discoveredAt: number
    processedAt: number
    _all: number
  }


  export type DiscoveredItemMinAggregateInputType = {
    id?: true
    runId?: true
    ciId?: true
    fingerprint?: true
    status?: true
    processingNotes?: true
    discoveredAt?: true
    processedAt?: true
  }

  export type DiscoveredItemMaxAggregateInputType = {
    id?: true
    runId?: true
    ciId?: true
    fingerprint?: true
    status?: true
    processingNotes?: true
    discoveredAt?: true
    processedAt?: true
  }

  export type DiscoveredItemCountAggregateInputType = {
    id?: true
    runId?: true
    ciId?: true
    discoveredData?: true
    fingerprint?: true
    status?: true
    processingNotes?: true
    discoveredAt?: true
    processedAt?: true
    _all?: true
  }

  export type DiscoveredItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DiscoveredItem to aggregate.
     */
    where?: DiscoveredItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoveredItems to fetch.
     */
    orderBy?: DiscoveredItemOrderByWithRelationInput | DiscoveredItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DiscoveredItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoveredItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoveredItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DiscoveredItems
    **/
    _count?: true | DiscoveredItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiscoveredItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiscoveredItemMaxAggregateInputType
  }

  export type GetDiscoveredItemAggregateType<T extends DiscoveredItemAggregateArgs> = {
        [P in keyof T & keyof AggregateDiscoveredItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiscoveredItem[P]>
      : GetScalarType<T[P], AggregateDiscoveredItem[P]>
  }




  export type DiscoveredItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiscoveredItemWhereInput
    orderBy?: DiscoveredItemOrderByWithAggregationInput | DiscoveredItemOrderByWithAggregationInput[]
    by: DiscoveredItemScalarFieldEnum[] | DiscoveredItemScalarFieldEnum
    having?: DiscoveredItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiscoveredItemCountAggregateInputType | true
    _min?: DiscoveredItemMinAggregateInputType
    _max?: DiscoveredItemMaxAggregateInputType
  }

  export type DiscoveredItemGroupByOutputType = {
    id: string
    runId: string
    ciId: string | null
    discoveredData: JsonValue
    fingerprint: string
    status: string
    processingNotes: string | null
    discoveredAt: Date
    processedAt: Date | null
    _count: DiscoveredItemCountAggregateOutputType | null
    _min: DiscoveredItemMinAggregateOutputType | null
    _max: DiscoveredItemMaxAggregateOutputType | null
  }

  type GetDiscoveredItemGroupByPayload<T extends DiscoveredItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DiscoveredItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DiscoveredItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DiscoveredItemGroupByOutputType[P]>
            : GetScalarType<T[P], DiscoveredItemGroupByOutputType[P]>
        }
      >
    >


  export type DiscoveredItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    runId?: boolean
    ciId?: boolean
    discoveredData?: boolean
    fingerprint?: boolean
    status?: boolean
    processingNotes?: boolean
    discoveredAt?: boolean
    processedAt?: boolean
    discoveryRun?: boolean | DiscoveryRunDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discoveredItem"]>

  export type DiscoveredItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    runId?: boolean
    ciId?: boolean
    discoveredData?: boolean
    fingerprint?: boolean
    status?: boolean
    processingNotes?: boolean
    discoveredAt?: boolean
    processedAt?: boolean
    discoveryRun?: boolean | DiscoveryRunDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discoveredItem"]>

  export type DiscoveredItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    runId?: boolean
    ciId?: boolean
    discoveredData?: boolean
    fingerprint?: boolean
    status?: boolean
    processingNotes?: boolean
    discoveredAt?: boolean
    processedAt?: boolean
    discoveryRun?: boolean | DiscoveryRunDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discoveredItem"]>

  export type DiscoveredItemSelectScalar = {
    id?: boolean
    runId?: boolean
    ciId?: boolean
    discoveredData?: boolean
    fingerprint?: boolean
    status?: boolean
    processingNotes?: boolean
    discoveredAt?: boolean
    processedAt?: boolean
  }

  export type DiscoveredItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "runId" | "ciId" | "discoveredData" | "fingerprint" | "status" | "processingNotes" | "discoveredAt" | "processedAt", ExtArgs["result"]["discoveredItem"]>
  export type DiscoveredItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    discoveryRun?: boolean | DiscoveryRunDefaultArgs<ExtArgs>
  }
  export type DiscoveredItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    discoveryRun?: boolean | DiscoveryRunDefaultArgs<ExtArgs>
  }
  export type DiscoveredItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    discoveryRun?: boolean | DiscoveryRunDefaultArgs<ExtArgs>
  }

  export type $DiscoveredItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DiscoveredItem"
    objects: {
      discoveryRun: Prisma.$DiscoveryRunPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      runId: string
      ciId: string | null
      discoveredData: Prisma.JsonValue
      fingerprint: string
      status: string
      processingNotes: string | null
      discoveredAt: Date
      processedAt: Date | null
    }, ExtArgs["result"]["discoveredItem"]>
    composites: {}
  }

  type DiscoveredItemGetPayload<S extends boolean | null | undefined | DiscoveredItemDefaultArgs> = $Result.GetResult<Prisma.$DiscoveredItemPayload, S>

  type DiscoveredItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DiscoveredItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DiscoveredItemCountAggregateInputType | true
    }

  export interface DiscoveredItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DiscoveredItem'], meta: { name: 'DiscoveredItem' } }
    /**
     * Find zero or one DiscoveredItem that matches the filter.
     * @param {DiscoveredItemFindUniqueArgs} args - Arguments to find a DiscoveredItem
     * @example
     * // Get one DiscoveredItem
     * const discoveredItem = await prisma.discoveredItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DiscoveredItemFindUniqueArgs>(args: SelectSubset<T, DiscoveredItemFindUniqueArgs<ExtArgs>>): Prisma__DiscoveredItemClient<$Result.GetResult<Prisma.$DiscoveredItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DiscoveredItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DiscoveredItemFindUniqueOrThrowArgs} args - Arguments to find a DiscoveredItem
     * @example
     * // Get one DiscoveredItem
     * const discoveredItem = await prisma.discoveredItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DiscoveredItemFindUniqueOrThrowArgs>(args: SelectSubset<T, DiscoveredItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DiscoveredItemClient<$Result.GetResult<Prisma.$DiscoveredItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DiscoveredItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveredItemFindFirstArgs} args - Arguments to find a DiscoveredItem
     * @example
     * // Get one DiscoveredItem
     * const discoveredItem = await prisma.discoveredItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DiscoveredItemFindFirstArgs>(args?: SelectSubset<T, DiscoveredItemFindFirstArgs<ExtArgs>>): Prisma__DiscoveredItemClient<$Result.GetResult<Prisma.$DiscoveredItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DiscoveredItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveredItemFindFirstOrThrowArgs} args - Arguments to find a DiscoveredItem
     * @example
     * // Get one DiscoveredItem
     * const discoveredItem = await prisma.discoveredItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DiscoveredItemFindFirstOrThrowArgs>(args?: SelectSubset<T, DiscoveredItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__DiscoveredItemClient<$Result.GetResult<Prisma.$DiscoveredItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DiscoveredItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveredItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DiscoveredItems
     * const discoveredItems = await prisma.discoveredItem.findMany()
     * 
     * // Get first 10 DiscoveredItems
     * const discoveredItems = await prisma.discoveredItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const discoveredItemWithIdOnly = await prisma.discoveredItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DiscoveredItemFindManyArgs>(args?: SelectSubset<T, DiscoveredItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscoveredItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DiscoveredItem.
     * @param {DiscoveredItemCreateArgs} args - Arguments to create a DiscoveredItem.
     * @example
     * // Create one DiscoveredItem
     * const DiscoveredItem = await prisma.discoveredItem.create({
     *   data: {
     *     // ... data to create a DiscoveredItem
     *   }
     * })
     * 
     */
    create<T extends DiscoveredItemCreateArgs>(args: SelectSubset<T, DiscoveredItemCreateArgs<ExtArgs>>): Prisma__DiscoveredItemClient<$Result.GetResult<Prisma.$DiscoveredItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DiscoveredItems.
     * @param {DiscoveredItemCreateManyArgs} args - Arguments to create many DiscoveredItems.
     * @example
     * // Create many DiscoveredItems
     * const discoveredItem = await prisma.discoveredItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DiscoveredItemCreateManyArgs>(args?: SelectSubset<T, DiscoveredItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DiscoveredItems and returns the data saved in the database.
     * @param {DiscoveredItemCreateManyAndReturnArgs} args - Arguments to create many DiscoveredItems.
     * @example
     * // Create many DiscoveredItems
     * const discoveredItem = await prisma.discoveredItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DiscoveredItems and only return the `id`
     * const discoveredItemWithIdOnly = await prisma.discoveredItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DiscoveredItemCreateManyAndReturnArgs>(args?: SelectSubset<T, DiscoveredItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscoveredItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DiscoveredItem.
     * @param {DiscoveredItemDeleteArgs} args - Arguments to delete one DiscoveredItem.
     * @example
     * // Delete one DiscoveredItem
     * const DiscoveredItem = await prisma.discoveredItem.delete({
     *   where: {
     *     // ... filter to delete one DiscoveredItem
     *   }
     * })
     * 
     */
    delete<T extends DiscoveredItemDeleteArgs>(args: SelectSubset<T, DiscoveredItemDeleteArgs<ExtArgs>>): Prisma__DiscoveredItemClient<$Result.GetResult<Prisma.$DiscoveredItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DiscoveredItem.
     * @param {DiscoveredItemUpdateArgs} args - Arguments to update one DiscoveredItem.
     * @example
     * // Update one DiscoveredItem
     * const discoveredItem = await prisma.discoveredItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DiscoveredItemUpdateArgs>(args: SelectSubset<T, DiscoveredItemUpdateArgs<ExtArgs>>): Prisma__DiscoveredItemClient<$Result.GetResult<Prisma.$DiscoveredItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DiscoveredItems.
     * @param {DiscoveredItemDeleteManyArgs} args - Arguments to filter DiscoveredItems to delete.
     * @example
     * // Delete a few DiscoveredItems
     * const { count } = await prisma.discoveredItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DiscoveredItemDeleteManyArgs>(args?: SelectSubset<T, DiscoveredItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiscoveredItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveredItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DiscoveredItems
     * const discoveredItem = await prisma.discoveredItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DiscoveredItemUpdateManyArgs>(args: SelectSubset<T, DiscoveredItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiscoveredItems and returns the data updated in the database.
     * @param {DiscoveredItemUpdateManyAndReturnArgs} args - Arguments to update many DiscoveredItems.
     * @example
     * // Update many DiscoveredItems
     * const discoveredItem = await prisma.discoveredItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DiscoveredItems and only return the `id`
     * const discoveredItemWithIdOnly = await prisma.discoveredItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DiscoveredItemUpdateManyAndReturnArgs>(args: SelectSubset<T, DiscoveredItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiscoveredItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DiscoveredItem.
     * @param {DiscoveredItemUpsertArgs} args - Arguments to update or create a DiscoveredItem.
     * @example
     * // Update or create a DiscoveredItem
     * const discoveredItem = await prisma.discoveredItem.upsert({
     *   create: {
     *     // ... data to create a DiscoveredItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DiscoveredItem we want to update
     *   }
     * })
     */
    upsert<T extends DiscoveredItemUpsertArgs>(args: SelectSubset<T, DiscoveredItemUpsertArgs<ExtArgs>>): Prisma__DiscoveredItemClient<$Result.GetResult<Prisma.$DiscoveredItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DiscoveredItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveredItemCountArgs} args - Arguments to filter DiscoveredItems to count.
     * @example
     * // Count the number of DiscoveredItems
     * const count = await prisma.discoveredItem.count({
     *   where: {
     *     // ... the filter for the DiscoveredItems we want to count
     *   }
     * })
    **/
    count<T extends DiscoveredItemCountArgs>(
      args?: Subset<T, DiscoveredItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiscoveredItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DiscoveredItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveredItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiscoveredItemAggregateArgs>(args: Subset<T, DiscoveredItemAggregateArgs>): Prisma.PrismaPromise<GetDiscoveredItemAggregateType<T>>

    /**
     * Group by DiscoveredItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscoveredItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DiscoveredItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DiscoveredItemGroupByArgs['orderBy'] }
        : { orderBy?: DiscoveredItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DiscoveredItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscoveredItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DiscoveredItem model
   */
  readonly fields: DiscoveredItemFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for DiscoveredItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DiscoveredItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    discoveryRun<T extends DiscoveryRunDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DiscoveryRunDefaultArgs<ExtArgs>>): Prisma__DiscoveryRunClient<$Result.GetResult<Prisma.$DiscoveryRunPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DiscoveredItem model
   */
  interface DiscoveredItemFieldRefs {
    readonly id: FieldRef<"DiscoveredItem", 'String'>
    readonly runId: FieldRef<"DiscoveredItem", 'String'>
    readonly ciId: FieldRef<"DiscoveredItem", 'String'>
    readonly discoveredData: FieldRef<"DiscoveredItem", 'Json'>
    readonly fingerprint: FieldRef<"DiscoveredItem", 'String'>
    readonly status: FieldRef<"DiscoveredItem", 'String'>
    readonly processingNotes: FieldRef<"DiscoveredItem", 'String'>
    readonly discoveredAt: FieldRef<"DiscoveredItem", 'DateTime'>
    readonly processedAt: FieldRef<"DiscoveredItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DiscoveredItem findUnique
   */
  export type DiscoveredItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveredItem
     */
    select?: DiscoveredItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveredItem
     */
    omit?: DiscoveredItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveredItemInclude<ExtArgs> | null
    /**
     * Filter, which DiscoveredItem to fetch.
     */
    where: DiscoveredItemWhereUniqueInput
  }

  /**
   * DiscoveredItem findUniqueOrThrow
   */
  export type DiscoveredItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveredItem
     */
    select?: DiscoveredItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveredItem
     */
    omit?: DiscoveredItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveredItemInclude<ExtArgs> | null
    /**
     * Filter, which DiscoveredItem to fetch.
     */
    where: DiscoveredItemWhereUniqueInput
  }

  /**
   * DiscoveredItem findFirst
   */
  export type DiscoveredItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveredItem
     */
    select?: DiscoveredItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveredItem
     */
    omit?: DiscoveredItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveredItemInclude<ExtArgs> | null
    /**
     * Filter, which DiscoveredItem to fetch.
     */
    where?: DiscoveredItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoveredItems to fetch.
     */
    orderBy?: DiscoveredItemOrderByWithRelationInput | DiscoveredItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiscoveredItems.
     */
    cursor?: DiscoveredItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoveredItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoveredItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiscoveredItems.
     */
    distinct?: DiscoveredItemScalarFieldEnum | DiscoveredItemScalarFieldEnum[]
  }

  /**
   * DiscoveredItem findFirstOrThrow
   */
  export type DiscoveredItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveredItem
     */
    select?: DiscoveredItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveredItem
     */
    omit?: DiscoveredItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveredItemInclude<ExtArgs> | null
    /**
     * Filter, which DiscoveredItem to fetch.
     */
    where?: DiscoveredItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoveredItems to fetch.
     */
    orderBy?: DiscoveredItemOrderByWithRelationInput | DiscoveredItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiscoveredItems.
     */
    cursor?: DiscoveredItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoveredItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoveredItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiscoveredItems.
     */
    distinct?: DiscoveredItemScalarFieldEnum | DiscoveredItemScalarFieldEnum[]
  }

  /**
   * DiscoveredItem findMany
   */
  export type DiscoveredItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveredItem
     */
    select?: DiscoveredItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveredItem
     */
    omit?: DiscoveredItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveredItemInclude<ExtArgs> | null
    /**
     * Filter, which DiscoveredItems to fetch.
     */
    where?: DiscoveredItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiscoveredItems to fetch.
     */
    orderBy?: DiscoveredItemOrderByWithRelationInput | DiscoveredItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DiscoveredItems.
     */
    cursor?: DiscoveredItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiscoveredItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiscoveredItems.
     */
    skip?: number
    distinct?: DiscoveredItemScalarFieldEnum | DiscoveredItemScalarFieldEnum[]
  }

  /**
   * DiscoveredItem create
   */
  export type DiscoveredItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveredItem
     */
    select?: DiscoveredItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveredItem
     */
    omit?: DiscoveredItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveredItemInclude<ExtArgs> | null
    /**
     * The data needed to create a DiscoveredItem.
     */
    data: XOR<DiscoveredItemCreateInput, DiscoveredItemUncheckedCreateInput>
  }

  /**
   * DiscoveredItem createMany
   */
  export type DiscoveredItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DiscoveredItems.
     */
    data: DiscoveredItemCreateManyInput | DiscoveredItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DiscoveredItem createManyAndReturn
   */
  export type DiscoveredItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveredItem
     */
    select?: DiscoveredItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveredItem
     */
    omit?: DiscoveredItemOmit<ExtArgs> | null
    /**
     * The data used to create many DiscoveredItems.
     */
    data: DiscoveredItemCreateManyInput | DiscoveredItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveredItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DiscoveredItem update
   */
  export type DiscoveredItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveredItem
     */
    select?: DiscoveredItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveredItem
     */
    omit?: DiscoveredItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveredItemInclude<ExtArgs> | null
    /**
     * The data needed to update a DiscoveredItem.
     */
    data: XOR<DiscoveredItemUpdateInput, DiscoveredItemUncheckedUpdateInput>
    /**
     * Choose, which DiscoveredItem to update.
     */
    where: DiscoveredItemWhereUniqueInput
  }

  /**
   * DiscoveredItem updateMany
   */
  export type DiscoveredItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DiscoveredItems.
     */
    data: XOR<DiscoveredItemUpdateManyMutationInput, DiscoveredItemUncheckedUpdateManyInput>
    /**
     * Filter which DiscoveredItems to update
     */
    where?: DiscoveredItemWhereInput
    /**
     * Limit how many DiscoveredItems to update.
     */
    limit?: number
  }

  /**
   * DiscoveredItem updateManyAndReturn
   */
  export type DiscoveredItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveredItem
     */
    select?: DiscoveredItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveredItem
     */
    omit?: DiscoveredItemOmit<ExtArgs> | null
    /**
     * The data used to update DiscoveredItems.
     */
    data: XOR<DiscoveredItemUpdateManyMutationInput, DiscoveredItemUncheckedUpdateManyInput>
    /**
     * Filter which DiscoveredItems to update
     */
    where?: DiscoveredItemWhereInput
    /**
     * Limit how many DiscoveredItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveredItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * DiscoveredItem upsert
   */
  export type DiscoveredItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveredItem
     */
    select?: DiscoveredItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveredItem
     */
    omit?: DiscoveredItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveredItemInclude<ExtArgs> | null
    /**
     * The filter to search for the DiscoveredItem to update in case it exists.
     */
    where: DiscoveredItemWhereUniqueInput
    /**
     * In case the DiscoveredItem found by the `where` argument doesn't exist, create a new DiscoveredItem with this data.
     */
    create: XOR<DiscoveredItemCreateInput, DiscoveredItemUncheckedCreateInput>
    /**
     * In case the DiscoveredItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DiscoveredItemUpdateInput, DiscoveredItemUncheckedUpdateInput>
  }

  /**
   * DiscoveredItem delete
   */
  export type DiscoveredItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveredItem
     */
    select?: DiscoveredItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveredItem
     */
    omit?: DiscoveredItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveredItemInclude<ExtArgs> | null
    /**
     * Filter which DiscoveredItem to delete.
     */
    where: DiscoveredItemWhereUniqueInput
  }

  /**
   * DiscoveredItem deleteMany
   */
  export type DiscoveredItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DiscoveredItems to delete
     */
    where?: DiscoveredItemWhereInput
    /**
     * Limit how many DiscoveredItems to delete.
     */
    limit?: number
  }

  /**
   * DiscoveredItem without action
   */
  export type DiscoveredItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiscoveredItem
     */
    select?: DiscoveredItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiscoveredItem
     */
    omit?: DiscoveredItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiscoveredItemInclude<ExtArgs> | null
  }


  /**
   * Model CmdbHealth
   */

  export type AggregateCmdbHealth = {
    _count: CmdbHealthCountAggregateOutputType | null
    _avg: CmdbHealthAvgAggregateOutputType | null
    _sum: CmdbHealthSumAggregateOutputType | null
    _min: CmdbHealthMinAggregateOutputType | null
    _max: CmdbHealthMaxAggregateOutputType | null
  }

  export type CmdbHealthAvgAggregateOutputType = {
    totalCis: number | null
    activeCis: number | null
    staleCis: number | null
    orphanedCis: number | null
    totalRelationships: number | null
    discoveredRelationships: number | null
    manualRelationships: number | null
    discoveredCis: number | null
    manualCis: number | null
    completenessScore: Decimal | null
    accuracyScore: Decimal | null
  }

  export type CmdbHealthSumAggregateOutputType = {
    totalCis: number | null
    activeCis: number | null
    staleCis: number | null
    orphanedCis: number | null
    totalRelationships: number | null
    discoveredRelationships: number | null
    manualRelationships: number | null
    discoveredCis: number | null
    manualCis: number | null
    completenessScore: Decimal | null
    accuracyScore: Decimal | null
  }

  export type CmdbHealthMinAggregateOutputType = {
    id: string | null
    metricDate: Date | null
    totalCis: number | null
    activeCis: number | null
    staleCis: number | null
    orphanedCis: number | null
    totalRelationships: number | null
    discoveredRelationships: number | null
    manualRelationships: number | null
    discoveredCis: number | null
    manualCis: number | null
    completenessScore: Decimal | null
    accuracyScore: Decimal | null
    createdAt: Date | null
  }

  export type CmdbHealthMaxAggregateOutputType = {
    id: string | null
    metricDate: Date | null
    totalCis: number | null
    activeCis: number | null
    staleCis: number | null
    orphanedCis: number | null
    totalRelationships: number | null
    discoveredRelationships: number | null
    manualRelationships: number | null
    discoveredCis: number | null
    manualCis: number | null
    completenessScore: Decimal | null
    accuracyScore: Decimal | null
    createdAt: Date | null
  }

  export type CmdbHealthCountAggregateOutputType = {
    id: number
    metricDate: number
    totalCis: number
    activeCis: number
    staleCis: number
    orphanedCis: number
    totalRelationships: number
    discoveredRelationships: number
    manualRelationships: number
    discoveredCis: number
    manualCis: number
    completenessScore: number
    accuracyScore: number
    createdAt: number
    _all: number
  }


  export type CmdbHealthAvgAggregateInputType = {
    totalCis?: true
    activeCis?: true
    staleCis?: true
    orphanedCis?: true
    totalRelationships?: true
    discoveredRelationships?: true
    manualRelationships?: true
    discoveredCis?: true
    manualCis?: true
    completenessScore?: true
    accuracyScore?: true
  }

  export type CmdbHealthSumAggregateInputType = {
    totalCis?: true
    activeCis?: true
    staleCis?: true
    orphanedCis?: true
    totalRelationships?: true
    discoveredRelationships?: true
    manualRelationships?: true
    discoveredCis?: true
    manualCis?: true
    completenessScore?: true
    accuracyScore?: true
  }

  export type CmdbHealthMinAggregateInputType = {
    id?: true
    metricDate?: true
    totalCis?: true
    activeCis?: true
    staleCis?: true
    orphanedCis?: true
    totalRelationships?: true
    discoveredRelationships?: true
    manualRelationships?: true
    discoveredCis?: true
    manualCis?: true
    completenessScore?: true
    accuracyScore?: true
    createdAt?: true
  }

  export type CmdbHealthMaxAggregateInputType = {
    id?: true
    metricDate?: true
    totalCis?: true
    activeCis?: true
    staleCis?: true
    orphanedCis?: true
    totalRelationships?: true
    discoveredRelationships?: true
    manualRelationships?: true
    discoveredCis?: true
    manualCis?: true
    completenessScore?: true
    accuracyScore?: true
    createdAt?: true
  }

  export type CmdbHealthCountAggregateInputType = {
    id?: true
    metricDate?: true
    totalCis?: true
    activeCis?: true
    staleCis?: true
    orphanedCis?: true
    totalRelationships?: true
    discoveredRelationships?: true
    manualRelationships?: true
    discoveredCis?: true
    manualCis?: true
    completenessScore?: true
    accuracyScore?: true
    createdAt?: true
    _all?: true
  }

  export type CmdbHealthAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CmdbHealth to aggregate.
     */
    where?: CmdbHealthWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CmdbHealths to fetch.
     */
    orderBy?: CmdbHealthOrderByWithRelationInput | CmdbHealthOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CmdbHealthWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CmdbHealths from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CmdbHealths.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CmdbHealths
    **/
    _count?: true | CmdbHealthCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CmdbHealthAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CmdbHealthSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CmdbHealthMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CmdbHealthMaxAggregateInputType
  }

  export type GetCmdbHealthAggregateType<T extends CmdbHealthAggregateArgs> = {
        [P in keyof T & keyof AggregateCmdbHealth]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCmdbHealth[P]>
      : GetScalarType<T[P], AggregateCmdbHealth[P]>
  }




  export type CmdbHealthGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CmdbHealthWhereInput
    orderBy?: CmdbHealthOrderByWithAggregationInput | CmdbHealthOrderByWithAggregationInput[]
    by: CmdbHealthScalarFieldEnum[] | CmdbHealthScalarFieldEnum
    having?: CmdbHealthScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CmdbHealthCountAggregateInputType | true
    _avg?: CmdbHealthAvgAggregateInputType
    _sum?: CmdbHealthSumAggregateInputType
    _min?: CmdbHealthMinAggregateInputType
    _max?: CmdbHealthMaxAggregateInputType
  }

  export type CmdbHealthGroupByOutputType = {
    id: string
    metricDate: Date
    totalCis: number
    activeCis: number
    staleCis: number
    orphanedCis: number
    totalRelationships: number
    discoveredRelationships: number
    manualRelationships: number
    discoveredCis: number
    manualCis: number
    completenessScore: Decimal
    accuracyScore: Decimal
    createdAt: Date
    _count: CmdbHealthCountAggregateOutputType | null
    _avg: CmdbHealthAvgAggregateOutputType | null
    _sum: CmdbHealthSumAggregateOutputType | null
    _min: CmdbHealthMinAggregateOutputType | null
    _max: CmdbHealthMaxAggregateOutputType | null
  }

  type GetCmdbHealthGroupByPayload<T extends CmdbHealthGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CmdbHealthGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CmdbHealthGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CmdbHealthGroupByOutputType[P]>
            : GetScalarType<T[P], CmdbHealthGroupByOutputType[P]>
        }
      >
    >


  export type CmdbHealthSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    metricDate?: boolean
    totalCis?: boolean
    activeCis?: boolean
    staleCis?: boolean
    orphanedCis?: boolean
    totalRelationships?: boolean
    discoveredRelationships?: boolean
    manualRelationships?: boolean
    discoveredCis?: boolean
    manualCis?: boolean
    completenessScore?: boolean
    accuracyScore?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["cmdbHealth"]>

  export type CmdbHealthSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    metricDate?: boolean
    totalCis?: boolean
    activeCis?: boolean
    staleCis?: boolean
    orphanedCis?: boolean
    totalRelationships?: boolean
    discoveredRelationships?: boolean
    manualRelationships?: boolean
    discoveredCis?: boolean
    manualCis?: boolean
    completenessScore?: boolean
    accuracyScore?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["cmdbHealth"]>

  export type CmdbHealthSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    metricDate?: boolean
    totalCis?: boolean
    activeCis?: boolean
    staleCis?: boolean
    orphanedCis?: boolean
    totalRelationships?: boolean
    discoveredRelationships?: boolean
    manualRelationships?: boolean
    discoveredCis?: boolean
    manualCis?: boolean
    completenessScore?: boolean
    accuracyScore?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["cmdbHealth"]>

  export type CmdbHealthSelectScalar = {
    id?: boolean
    metricDate?: boolean
    totalCis?: boolean
    activeCis?: boolean
    staleCis?: boolean
    orphanedCis?: boolean
    totalRelationships?: boolean
    discoveredRelationships?: boolean
    manualRelationships?: boolean
    discoveredCis?: boolean
    manualCis?: boolean
    completenessScore?: boolean
    accuracyScore?: boolean
    createdAt?: boolean
  }

  export type CmdbHealthOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "metricDate" | "totalCis" | "activeCis" | "staleCis" | "orphanedCis" | "totalRelationships" | "discoveredRelationships" | "manualRelationships" | "discoveredCis" | "manualCis" | "completenessScore" | "accuracyScore" | "createdAt", ExtArgs["result"]["cmdbHealth"]>

  export type $CmdbHealthPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CmdbHealth"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      metricDate: Date
      totalCis: number
      activeCis: number
      staleCis: number
      orphanedCis: number
      totalRelationships: number
      discoveredRelationships: number
      manualRelationships: number
      discoveredCis: number
      manualCis: number
      completenessScore: Prisma.Decimal
      accuracyScore: Prisma.Decimal
      createdAt: Date
    }, ExtArgs["result"]["cmdbHealth"]>
    composites: {}
  }

  type CmdbHealthGetPayload<S extends boolean | null | undefined | CmdbHealthDefaultArgs> = $Result.GetResult<Prisma.$CmdbHealthPayload, S>

  type CmdbHealthCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CmdbHealthFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CmdbHealthCountAggregateInputType | true
    }

  export interface CmdbHealthDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CmdbHealth'], meta: { name: 'CmdbHealth' } }
    /**
     * Find zero or one CmdbHealth that matches the filter.
     * @param {CmdbHealthFindUniqueArgs} args - Arguments to find a CmdbHealth
     * @example
     * // Get one CmdbHealth
     * const cmdbHealth = await prisma.cmdbHealth.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CmdbHealthFindUniqueArgs>(args: SelectSubset<T, CmdbHealthFindUniqueArgs<ExtArgs>>): Prisma__CmdbHealthClient<$Result.GetResult<Prisma.$CmdbHealthPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CmdbHealth that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CmdbHealthFindUniqueOrThrowArgs} args - Arguments to find a CmdbHealth
     * @example
     * // Get one CmdbHealth
     * const cmdbHealth = await prisma.cmdbHealth.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CmdbHealthFindUniqueOrThrowArgs>(args: SelectSubset<T, CmdbHealthFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CmdbHealthClient<$Result.GetResult<Prisma.$CmdbHealthPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CmdbHealth that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CmdbHealthFindFirstArgs} args - Arguments to find a CmdbHealth
     * @example
     * // Get one CmdbHealth
     * const cmdbHealth = await prisma.cmdbHealth.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CmdbHealthFindFirstArgs>(args?: SelectSubset<T, CmdbHealthFindFirstArgs<ExtArgs>>): Prisma__CmdbHealthClient<$Result.GetResult<Prisma.$CmdbHealthPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CmdbHealth that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CmdbHealthFindFirstOrThrowArgs} args - Arguments to find a CmdbHealth
     * @example
     * // Get one CmdbHealth
     * const cmdbHealth = await prisma.cmdbHealth.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CmdbHealthFindFirstOrThrowArgs>(args?: SelectSubset<T, CmdbHealthFindFirstOrThrowArgs<ExtArgs>>): Prisma__CmdbHealthClient<$Result.GetResult<Prisma.$CmdbHealthPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CmdbHealths that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CmdbHealthFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CmdbHealths
     * const cmdbHealths = await prisma.cmdbHealth.findMany()
     * 
     * // Get first 10 CmdbHealths
     * const cmdbHealths = await prisma.cmdbHealth.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cmdbHealthWithIdOnly = await prisma.cmdbHealth.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CmdbHealthFindManyArgs>(args?: SelectSubset<T, CmdbHealthFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CmdbHealthPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CmdbHealth.
     * @param {CmdbHealthCreateArgs} args - Arguments to create a CmdbHealth.
     * @example
     * // Create one CmdbHealth
     * const CmdbHealth = await prisma.cmdbHealth.create({
     *   data: {
     *     // ... data to create a CmdbHealth
     *   }
     * })
     * 
     */
    create<T extends CmdbHealthCreateArgs>(args: SelectSubset<T, CmdbHealthCreateArgs<ExtArgs>>): Prisma__CmdbHealthClient<$Result.GetResult<Prisma.$CmdbHealthPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CmdbHealths.
     * @param {CmdbHealthCreateManyArgs} args - Arguments to create many CmdbHealths.
     * @example
     * // Create many CmdbHealths
     * const cmdbHealth = await prisma.cmdbHealth.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CmdbHealthCreateManyArgs>(args?: SelectSubset<T, CmdbHealthCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CmdbHealths and returns the data saved in the database.
     * @param {CmdbHealthCreateManyAndReturnArgs} args - Arguments to create many CmdbHealths.
     * @example
     * // Create many CmdbHealths
     * const cmdbHealth = await prisma.cmdbHealth.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CmdbHealths and only return the `id`
     * const cmdbHealthWithIdOnly = await prisma.cmdbHealth.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CmdbHealthCreateManyAndReturnArgs>(args?: SelectSubset<T, CmdbHealthCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CmdbHealthPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CmdbHealth.
     * @param {CmdbHealthDeleteArgs} args - Arguments to delete one CmdbHealth.
     * @example
     * // Delete one CmdbHealth
     * const CmdbHealth = await prisma.cmdbHealth.delete({
     *   where: {
     *     // ... filter to delete one CmdbHealth
     *   }
     * })
     * 
     */
    delete<T extends CmdbHealthDeleteArgs>(args: SelectSubset<T, CmdbHealthDeleteArgs<ExtArgs>>): Prisma__CmdbHealthClient<$Result.GetResult<Prisma.$CmdbHealthPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CmdbHealth.
     * @param {CmdbHealthUpdateArgs} args - Arguments to update one CmdbHealth.
     * @example
     * // Update one CmdbHealth
     * const cmdbHealth = await prisma.cmdbHealth.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CmdbHealthUpdateArgs>(args: SelectSubset<T, CmdbHealthUpdateArgs<ExtArgs>>): Prisma__CmdbHealthClient<$Result.GetResult<Prisma.$CmdbHealthPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CmdbHealths.
     * @param {CmdbHealthDeleteManyArgs} args - Arguments to filter CmdbHealths to delete.
     * @example
     * // Delete a few CmdbHealths
     * const { count } = await prisma.cmdbHealth.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CmdbHealthDeleteManyArgs>(args?: SelectSubset<T, CmdbHealthDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CmdbHealths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CmdbHealthUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CmdbHealths
     * const cmdbHealth = await prisma.cmdbHealth.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CmdbHealthUpdateManyArgs>(args: SelectSubset<T, CmdbHealthUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CmdbHealths and returns the data updated in the database.
     * @param {CmdbHealthUpdateManyAndReturnArgs} args - Arguments to update many CmdbHealths.
     * @example
     * // Update many CmdbHealths
     * const cmdbHealth = await prisma.cmdbHealth.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CmdbHealths and only return the `id`
     * const cmdbHealthWithIdOnly = await prisma.cmdbHealth.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CmdbHealthUpdateManyAndReturnArgs>(args: SelectSubset<T, CmdbHealthUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CmdbHealthPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CmdbHealth.
     * @param {CmdbHealthUpsertArgs} args - Arguments to update or create a CmdbHealth.
     * @example
     * // Update or create a CmdbHealth
     * const cmdbHealth = await prisma.cmdbHealth.upsert({
     *   create: {
     *     // ... data to create a CmdbHealth
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CmdbHealth we want to update
     *   }
     * })
     */
    upsert<T extends CmdbHealthUpsertArgs>(args: SelectSubset<T, CmdbHealthUpsertArgs<ExtArgs>>): Prisma__CmdbHealthClient<$Result.GetResult<Prisma.$CmdbHealthPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CmdbHealths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CmdbHealthCountArgs} args - Arguments to filter CmdbHealths to count.
     * @example
     * // Count the number of CmdbHealths
     * const count = await prisma.cmdbHealth.count({
     *   where: {
     *     // ... the filter for the CmdbHealths we want to count
     *   }
     * })
    **/
    count<T extends CmdbHealthCountArgs>(
      args?: Subset<T, CmdbHealthCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CmdbHealthCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CmdbHealth.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CmdbHealthAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CmdbHealthAggregateArgs>(args: Subset<T, CmdbHealthAggregateArgs>): Prisma.PrismaPromise<GetCmdbHealthAggregateType<T>>

    /**
     * Group by CmdbHealth.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CmdbHealthGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CmdbHealthGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CmdbHealthGroupByArgs['orderBy'] }
        : { orderBy?: CmdbHealthGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CmdbHealthGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCmdbHealthGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CmdbHealth model
   */
  readonly fields: CmdbHealthFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for CmdbHealth.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CmdbHealthClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CmdbHealth model
   */
  interface CmdbHealthFieldRefs {
    readonly id: FieldRef<"CmdbHealth", 'String'>
    readonly metricDate: FieldRef<"CmdbHealth", 'DateTime'>
    readonly totalCis: FieldRef<"CmdbHealth", 'Int'>
    readonly activeCis: FieldRef<"CmdbHealth", 'Int'>
    readonly staleCis: FieldRef<"CmdbHealth", 'Int'>
    readonly orphanedCis: FieldRef<"CmdbHealth", 'Int'>
    readonly totalRelationships: FieldRef<"CmdbHealth", 'Int'>
    readonly discoveredRelationships: FieldRef<"CmdbHealth", 'Int'>
    readonly manualRelationships: FieldRef<"CmdbHealth", 'Int'>
    readonly discoveredCis: FieldRef<"CmdbHealth", 'Int'>
    readonly manualCis: FieldRef<"CmdbHealth", 'Int'>
    readonly completenessScore: FieldRef<"CmdbHealth", 'Decimal'>
    readonly accuracyScore: FieldRef<"CmdbHealth", 'Decimal'>
    readonly createdAt: FieldRef<"CmdbHealth", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CmdbHealth findUnique
   */
  export type CmdbHealthFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbHealth
     */
    select?: CmdbHealthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbHealth
     */
    omit?: CmdbHealthOmit<ExtArgs> | null
    /**
     * Filter, which CmdbHealth to fetch.
     */
    where: CmdbHealthWhereUniqueInput
  }

  /**
   * CmdbHealth findUniqueOrThrow
   */
  export type CmdbHealthFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbHealth
     */
    select?: CmdbHealthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbHealth
     */
    omit?: CmdbHealthOmit<ExtArgs> | null
    /**
     * Filter, which CmdbHealth to fetch.
     */
    where: CmdbHealthWhereUniqueInput
  }

  /**
   * CmdbHealth findFirst
   */
  export type CmdbHealthFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbHealth
     */
    select?: CmdbHealthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbHealth
     */
    omit?: CmdbHealthOmit<ExtArgs> | null
    /**
     * Filter, which CmdbHealth to fetch.
     */
    where?: CmdbHealthWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CmdbHealths to fetch.
     */
    orderBy?: CmdbHealthOrderByWithRelationInput | CmdbHealthOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CmdbHealths.
     */
    cursor?: CmdbHealthWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CmdbHealths from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CmdbHealths.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CmdbHealths.
     */
    distinct?: CmdbHealthScalarFieldEnum | CmdbHealthScalarFieldEnum[]
  }

  /**
   * CmdbHealth findFirstOrThrow
   */
  export type CmdbHealthFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbHealth
     */
    select?: CmdbHealthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbHealth
     */
    omit?: CmdbHealthOmit<ExtArgs> | null
    /**
     * Filter, which CmdbHealth to fetch.
     */
    where?: CmdbHealthWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CmdbHealths to fetch.
     */
    orderBy?: CmdbHealthOrderByWithRelationInput | CmdbHealthOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CmdbHealths.
     */
    cursor?: CmdbHealthWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CmdbHealths from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CmdbHealths.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CmdbHealths.
     */
    distinct?: CmdbHealthScalarFieldEnum | CmdbHealthScalarFieldEnum[]
  }

  /**
   * CmdbHealth findMany
   */
  export type CmdbHealthFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbHealth
     */
    select?: CmdbHealthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbHealth
     */
    omit?: CmdbHealthOmit<ExtArgs> | null
    /**
     * Filter, which CmdbHealths to fetch.
     */
    where?: CmdbHealthWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CmdbHealths to fetch.
     */
    orderBy?: CmdbHealthOrderByWithRelationInput | CmdbHealthOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CmdbHealths.
     */
    cursor?: CmdbHealthWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CmdbHealths from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CmdbHealths.
     */
    skip?: number
    distinct?: CmdbHealthScalarFieldEnum | CmdbHealthScalarFieldEnum[]
  }

  /**
   * CmdbHealth create
   */
  export type CmdbHealthCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbHealth
     */
    select?: CmdbHealthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbHealth
     */
    omit?: CmdbHealthOmit<ExtArgs> | null
    /**
     * The data needed to create a CmdbHealth.
     */
    data: XOR<CmdbHealthCreateInput, CmdbHealthUncheckedCreateInput>
  }

  /**
   * CmdbHealth createMany
   */
  export type CmdbHealthCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CmdbHealths.
     */
    data: CmdbHealthCreateManyInput | CmdbHealthCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CmdbHealth createManyAndReturn
   */
  export type CmdbHealthCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbHealth
     */
    select?: CmdbHealthSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbHealth
     */
    omit?: CmdbHealthOmit<ExtArgs> | null
    /**
     * The data used to create many CmdbHealths.
     */
    data: CmdbHealthCreateManyInput | CmdbHealthCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CmdbHealth update
   */
  export type CmdbHealthUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbHealth
     */
    select?: CmdbHealthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbHealth
     */
    omit?: CmdbHealthOmit<ExtArgs> | null
    /**
     * The data needed to update a CmdbHealth.
     */
    data: XOR<CmdbHealthUpdateInput, CmdbHealthUncheckedUpdateInput>
    /**
     * Choose, which CmdbHealth to update.
     */
    where: CmdbHealthWhereUniqueInput
  }

  /**
   * CmdbHealth updateMany
   */
  export type CmdbHealthUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CmdbHealths.
     */
    data: XOR<CmdbHealthUpdateManyMutationInput, CmdbHealthUncheckedUpdateManyInput>
    /**
     * Filter which CmdbHealths to update
     */
    where?: CmdbHealthWhereInput
    /**
     * Limit how many CmdbHealths to update.
     */
    limit?: number
  }

  /**
   * CmdbHealth updateManyAndReturn
   */
  export type CmdbHealthUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbHealth
     */
    select?: CmdbHealthSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbHealth
     */
    omit?: CmdbHealthOmit<ExtArgs> | null
    /**
     * The data used to update CmdbHealths.
     */
    data: XOR<CmdbHealthUpdateManyMutationInput, CmdbHealthUncheckedUpdateManyInput>
    /**
     * Filter which CmdbHealths to update
     */
    where?: CmdbHealthWhereInput
    /**
     * Limit how many CmdbHealths to update.
     */
    limit?: number
  }

  /**
   * CmdbHealth upsert
   */
  export type CmdbHealthUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbHealth
     */
    select?: CmdbHealthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbHealth
     */
    omit?: CmdbHealthOmit<ExtArgs> | null
    /**
     * The filter to search for the CmdbHealth to update in case it exists.
     */
    where: CmdbHealthWhereUniqueInput
    /**
     * In case the CmdbHealth found by the `where` argument doesn't exist, create a new CmdbHealth with this data.
     */
    create: XOR<CmdbHealthCreateInput, CmdbHealthUncheckedCreateInput>
    /**
     * In case the CmdbHealth was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CmdbHealthUpdateInput, CmdbHealthUncheckedUpdateInput>
  }

  /**
   * CmdbHealth delete
   */
  export type CmdbHealthDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbHealth
     */
    select?: CmdbHealthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbHealth
     */
    omit?: CmdbHealthOmit<ExtArgs> | null
    /**
     * Filter which CmdbHealth to delete.
     */
    where: CmdbHealthWhereUniqueInput
  }

  /**
   * CmdbHealth deleteMany
   */
  export type CmdbHealthDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CmdbHealths to delete
     */
    where?: CmdbHealthWhereInput
    /**
     * Limit how many CmdbHealths to delete.
     */
    limit?: number
  }

  /**
   * CmdbHealth without action
   */
  export type CmdbHealthDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbHealth
     */
    select?: CmdbHealthSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbHealth
     */
    omit?: CmdbHealthOmit<ExtArgs> | null
  }


  /**
   * Model CiAuditLog
   */

  export type AggregateCiAuditLog = {
    _count: CiAuditLogCountAggregateOutputType | null
    _min: CiAuditLogMinAggregateOutputType | null
    _max: CiAuditLogMaxAggregateOutputType | null
  }

  export type CiAuditLogMinAggregateOutputType = {
    id: string | null
    ciId: string | null
    operation: string | null
    fieldName: string | null
    oldValue: string | null
    newValue: string | null
    changedBy: string | null
    changeReason: string | null
    changeTicket: string | null
    timestamp: Date | null
  }

  export type CiAuditLogMaxAggregateOutputType = {
    id: string | null
    ciId: string | null
    operation: string | null
    fieldName: string | null
    oldValue: string | null
    newValue: string | null
    changedBy: string | null
    changeReason: string | null
    changeTicket: string | null
    timestamp: Date | null
  }

  export type CiAuditLogCountAggregateOutputType = {
    id: number
    ciId: number
    operation: number
    fieldName: number
    oldValue: number
    newValue: number
    changedBy: number
    changeReason: number
    changeTicket: number
    timestamp: number
    _all: number
  }


  export type CiAuditLogMinAggregateInputType = {
    id?: true
    ciId?: true
    operation?: true
    fieldName?: true
    oldValue?: true
    newValue?: true
    changedBy?: true
    changeReason?: true
    changeTicket?: true
    timestamp?: true
  }

  export type CiAuditLogMaxAggregateInputType = {
    id?: true
    ciId?: true
    operation?: true
    fieldName?: true
    oldValue?: true
    newValue?: true
    changedBy?: true
    changeReason?: true
    changeTicket?: true
    timestamp?: true
  }

  export type CiAuditLogCountAggregateInputType = {
    id?: true
    ciId?: true
    operation?: true
    fieldName?: true
    oldValue?: true
    newValue?: true
    changedBy?: true
    changeReason?: true
    changeTicket?: true
    timestamp?: true
    _all?: true
  }

  export type CiAuditLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CiAuditLog to aggregate.
     */
    where?: CiAuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiAuditLogs to fetch.
     */
    orderBy?: CiAuditLogOrderByWithRelationInput | CiAuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CiAuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiAuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiAuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CiAuditLogs
    **/
    _count?: true | CiAuditLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CiAuditLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CiAuditLogMaxAggregateInputType
  }

  export type GetCiAuditLogAggregateType<T extends CiAuditLogAggregateArgs> = {
        [P in keyof T & keyof AggregateCiAuditLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCiAuditLog[P]>
      : GetScalarType<T[P], AggregateCiAuditLog[P]>
  }




  export type CiAuditLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiAuditLogWhereInput
    orderBy?: CiAuditLogOrderByWithAggregationInput | CiAuditLogOrderByWithAggregationInput[]
    by: CiAuditLogScalarFieldEnum[] | CiAuditLogScalarFieldEnum
    having?: CiAuditLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CiAuditLogCountAggregateInputType | true
    _min?: CiAuditLogMinAggregateInputType
    _max?: CiAuditLogMaxAggregateInputType
  }

  export type CiAuditLogGroupByOutputType = {
    id: string
    ciId: string
    operation: string
    fieldName: string | null
    oldValue: string | null
    newValue: string | null
    changedBy: string | null
    changeReason: string | null
    changeTicket: string | null
    timestamp: Date
    _count: CiAuditLogCountAggregateOutputType | null
    _min: CiAuditLogMinAggregateOutputType | null
    _max: CiAuditLogMaxAggregateOutputType | null
  }

  type GetCiAuditLogGroupByPayload<T extends CiAuditLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CiAuditLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CiAuditLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CiAuditLogGroupByOutputType[P]>
            : GetScalarType<T[P], CiAuditLogGroupByOutputType[P]>
        }
      >
    >


  export type CiAuditLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ciId?: boolean
    operation?: boolean
    fieldName?: boolean
    oldValue?: boolean
    newValue?: boolean
    changedBy?: boolean
    changeReason?: boolean
    changeTicket?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["ciAuditLog"]>

  export type CiAuditLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ciId?: boolean
    operation?: boolean
    fieldName?: boolean
    oldValue?: boolean
    newValue?: boolean
    changedBy?: boolean
    changeReason?: boolean
    changeTicket?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["ciAuditLog"]>

  export type CiAuditLogSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ciId?: boolean
    operation?: boolean
    fieldName?: boolean
    oldValue?: boolean
    newValue?: boolean
    changedBy?: boolean
    changeReason?: boolean
    changeTicket?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["ciAuditLog"]>

  export type CiAuditLogSelectScalar = {
    id?: boolean
    ciId?: boolean
    operation?: boolean
    fieldName?: boolean
    oldValue?: boolean
    newValue?: boolean
    changedBy?: boolean
    changeReason?: boolean
    changeTicket?: boolean
    timestamp?: boolean
  }

  export type CiAuditLogOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "ciId" | "operation" | "fieldName" | "oldValue" | "newValue" | "changedBy" | "changeReason" | "changeTicket" | "timestamp", ExtArgs["result"]["ciAuditLog"]>

  export type $CiAuditLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CiAuditLog"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      ciId: string
      operation: string
      fieldName: string | null
      oldValue: string | null
      newValue: string | null
      changedBy: string | null
      changeReason: string | null
      changeTicket: string | null
      timestamp: Date
    }, ExtArgs["result"]["ciAuditLog"]>
    composites: {}
  }

  type CiAuditLogGetPayload<S extends boolean | null | undefined | CiAuditLogDefaultArgs> = $Result.GetResult<Prisma.$CiAuditLogPayload, S>

  type CiAuditLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CiAuditLogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CiAuditLogCountAggregateInputType | true
    }

  export interface CiAuditLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CiAuditLog'], meta: { name: 'CiAuditLog' } }
    /**
     * Find zero or one CiAuditLog that matches the filter.
     * @param {CiAuditLogFindUniqueArgs} args - Arguments to find a CiAuditLog
     * @example
     * // Get one CiAuditLog
     * const ciAuditLog = await prisma.ciAuditLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CiAuditLogFindUniqueArgs>(args: SelectSubset<T, CiAuditLogFindUniqueArgs<ExtArgs>>): Prisma__CiAuditLogClient<$Result.GetResult<Prisma.$CiAuditLogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CiAuditLog that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CiAuditLogFindUniqueOrThrowArgs} args - Arguments to find a CiAuditLog
     * @example
     * // Get one CiAuditLog
     * const ciAuditLog = await prisma.ciAuditLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CiAuditLogFindUniqueOrThrowArgs>(args: SelectSubset<T, CiAuditLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CiAuditLogClient<$Result.GetResult<Prisma.$CiAuditLogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CiAuditLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiAuditLogFindFirstArgs} args - Arguments to find a CiAuditLog
     * @example
     * // Get one CiAuditLog
     * const ciAuditLog = await prisma.ciAuditLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CiAuditLogFindFirstArgs>(args?: SelectSubset<T, CiAuditLogFindFirstArgs<ExtArgs>>): Prisma__CiAuditLogClient<$Result.GetResult<Prisma.$CiAuditLogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CiAuditLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiAuditLogFindFirstOrThrowArgs} args - Arguments to find a CiAuditLog
     * @example
     * // Get one CiAuditLog
     * const ciAuditLog = await prisma.ciAuditLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CiAuditLogFindFirstOrThrowArgs>(args?: SelectSubset<T, CiAuditLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__CiAuditLogClient<$Result.GetResult<Prisma.$CiAuditLogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CiAuditLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiAuditLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CiAuditLogs
     * const ciAuditLogs = await prisma.ciAuditLog.findMany()
     * 
     * // Get first 10 CiAuditLogs
     * const ciAuditLogs = await prisma.ciAuditLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ciAuditLogWithIdOnly = await prisma.ciAuditLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CiAuditLogFindManyArgs>(args?: SelectSubset<T, CiAuditLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiAuditLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CiAuditLog.
     * @param {CiAuditLogCreateArgs} args - Arguments to create a CiAuditLog.
     * @example
     * // Create one CiAuditLog
     * const CiAuditLog = await prisma.ciAuditLog.create({
     *   data: {
     *     // ... data to create a CiAuditLog
     *   }
     * })
     * 
     */
    create<T extends CiAuditLogCreateArgs>(args: SelectSubset<T, CiAuditLogCreateArgs<ExtArgs>>): Prisma__CiAuditLogClient<$Result.GetResult<Prisma.$CiAuditLogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CiAuditLogs.
     * @param {CiAuditLogCreateManyArgs} args - Arguments to create many CiAuditLogs.
     * @example
     * // Create many CiAuditLogs
     * const ciAuditLog = await prisma.ciAuditLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CiAuditLogCreateManyArgs>(args?: SelectSubset<T, CiAuditLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CiAuditLogs and returns the data saved in the database.
     * @param {CiAuditLogCreateManyAndReturnArgs} args - Arguments to create many CiAuditLogs.
     * @example
     * // Create many CiAuditLogs
     * const ciAuditLog = await prisma.ciAuditLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CiAuditLogs and only return the `id`
     * const ciAuditLogWithIdOnly = await prisma.ciAuditLog.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CiAuditLogCreateManyAndReturnArgs>(args?: SelectSubset<T, CiAuditLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiAuditLogPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CiAuditLog.
     * @param {CiAuditLogDeleteArgs} args - Arguments to delete one CiAuditLog.
     * @example
     * // Delete one CiAuditLog
     * const CiAuditLog = await prisma.ciAuditLog.delete({
     *   where: {
     *     // ... filter to delete one CiAuditLog
     *   }
     * })
     * 
     */
    delete<T extends CiAuditLogDeleteArgs>(args: SelectSubset<T, CiAuditLogDeleteArgs<ExtArgs>>): Prisma__CiAuditLogClient<$Result.GetResult<Prisma.$CiAuditLogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CiAuditLog.
     * @param {CiAuditLogUpdateArgs} args - Arguments to update one CiAuditLog.
     * @example
     * // Update one CiAuditLog
     * const ciAuditLog = await prisma.ciAuditLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CiAuditLogUpdateArgs>(args: SelectSubset<T, CiAuditLogUpdateArgs<ExtArgs>>): Prisma__CiAuditLogClient<$Result.GetResult<Prisma.$CiAuditLogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CiAuditLogs.
     * @param {CiAuditLogDeleteManyArgs} args - Arguments to filter CiAuditLogs to delete.
     * @example
     * // Delete a few CiAuditLogs
     * const { count } = await prisma.ciAuditLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CiAuditLogDeleteManyArgs>(args?: SelectSubset<T, CiAuditLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CiAuditLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiAuditLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CiAuditLogs
     * const ciAuditLog = await prisma.ciAuditLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CiAuditLogUpdateManyArgs>(args: SelectSubset<T, CiAuditLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CiAuditLogs and returns the data updated in the database.
     * @param {CiAuditLogUpdateManyAndReturnArgs} args - Arguments to update many CiAuditLogs.
     * @example
     * // Update many CiAuditLogs
     * const ciAuditLog = await prisma.ciAuditLog.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CiAuditLogs and only return the `id`
     * const ciAuditLogWithIdOnly = await prisma.ciAuditLog.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CiAuditLogUpdateManyAndReturnArgs>(args: SelectSubset<T, CiAuditLogUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiAuditLogPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CiAuditLog.
     * @param {CiAuditLogUpsertArgs} args - Arguments to update or create a CiAuditLog.
     * @example
     * // Update or create a CiAuditLog
     * const ciAuditLog = await prisma.ciAuditLog.upsert({
     *   create: {
     *     // ... data to create a CiAuditLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CiAuditLog we want to update
     *   }
     * })
     */
    upsert<T extends CiAuditLogUpsertArgs>(args: SelectSubset<T, CiAuditLogUpsertArgs<ExtArgs>>): Prisma__CiAuditLogClient<$Result.GetResult<Prisma.$CiAuditLogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CiAuditLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiAuditLogCountArgs} args - Arguments to filter CiAuditLogs to count.
     * @example
     * // Count the number of CiAuditLogs
     * const count = await prisma.ciAuditLog.count({
     *   where: {
     *     // ... the filter for the CiAuditLogs we want to count
     *   }
     * })
    **/
    count<T extends CiAuditLogCountArgs>(
      args?: Subset<T, CiAuditLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CiAuditLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CiAuditLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiAuditLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CiAuditLogAggregateArgs>(args: Subset<T, CiAuditLogAggregateArgs>): Prisma.PrismaPromise<GetCiAuditLogAggregateType<T>>

    /**
     * Group by CiAuditLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiAuditLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CiAuditLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CiAuditLogGroupByArgs['orderBy'] }
        : { orderBy?: CiAuditLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CiAuditLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCiAuditLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CiAuditLog model
   */
  readonly fields: CiAuditLogFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for CiAuditLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CiAuditLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CiAuditLog model
   */
  interface CiAuditLogFieldRefs {
    readonly id: FieldRef<"CiAuditLog", 'String'>
    readonly ciId: FieldRef<"CiAuditLog", 'String'>
    readonly operation: FieldRef<"CiAuditLog", 'String'>
    readonly fieldName: FieldRef<"CiAuditLog", 'String'>
    readonly oldValue: FieldRef<"CiAuditLog", 'String'>
    readonly newValue: FieldRef<"CiAuditLog", 'String'>
    readonly changedBy: FieldRef<"CiAuditLog", 'String'>
    readonly changeReason: FieldRef<"CiAuditLog", 'String'>
    readonly changeTicket: FieldRef<"CiAuditLog", 'String'>
    readonly timestamp: FieldRef<"CiAuditLog", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CiAuditLog findUnique
   */
  export type CiAuditLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiAuditLog
     */
    select?: CiAuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiAuditLog
     */
    omit?: CiAuditLogOmit<ExtArgs> | null
    /**
     * Filter, which CiAuditLog to fetch.
     */
    where: CiAuditLogWhereUniqueInput
  }

  /**
   * CiAuditLog findUniqueOrThrow
   */
  export type CiAuditLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiAuditLog
     */
    select?: CiAuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiAuditLog
     */
    omit?: CiAuditLogOmit<ExtArgs> | null
    /**
     * Filter, which CiAuditLog to fetch.
     */
    where: CiAuditLogWhereUniqueInput
  }

  /**
   * CiAuditLog findFirst
   */
  export type CiAuditLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiAuditLog
     */
    select?: CiAuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiAuditLog
     */
    omit?: CiAuditLogOmit<ExtArgs> | null
    /**
     * Filter, which CiAuditLog to fetch.
     */
    where?: CiAuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiAuditLogs to fetch.
     */
    orderBy?: CiAuditLogOrderByWithRelationInput | CiAuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CiAuditLogs.
     */
    cursor?: CiAuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiAuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiAuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CiAuditLogs.
     */
    distinct?: CiAuditLogScalarFieldEnum | CiAuditLogScalarFieldEnum[]
  }

  /**
   * CiAuditLog findFirstOrThrow
   */
  export type CiAuditLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiAuditLog
     */
    select?: CiAuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiAuditLog
     */
    omit?: CiAuditLogOmit<ExtArgs> | null
    /**
     * Filter, which CiAuditLog to fetch.
     */
    where?: CiAuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiAuditLogs to fetch.
     */
    orderBy?: CiAuditLogOrderByWithRelationInput | CiAuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CiAuditLogs.
     */
    cursor?: CiAuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiAuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiAuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CiAuditLogs.
     */
    distinct?: CiAuditLogScalarFieldEnum | CiAuditLogScalarFieldEnum[]
  }

  /**
   * CiAuditLog findMany
   */
  export type CiAuditLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiAuditLog
     */
    select?: CiAuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiAuditLog
     */
    omit?: CiAuditLogOmit<ExtArgs> | null
    /**
     * Filter, which CiAuditLogs to fetch.
     */
    where?: CiAuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiAuditLogs to fetch.
     */
    orderBy?: CiAuditLogOrderByWithRelationInput | CiAuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CiAuditLogs.
     */
    cursor?: CiAuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiAuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiAuditLogs.
     */
    skip?: number
    distinct?: CiAuditLogScalarFieldEnum | CiAuditLogScalarFieldEnum[]
  }

  /**
   * CiAuditLog create
   */
  export type CiAuditLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiAuditLog
     */
    select?: CiAuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiAuditLog
     */
    omit?: CiAuditLogOmit<ExtArgs> | null
    /**
     * The data needed to create a CiAuditLog.
     */
    data: XOR<CiAuditLogCreateInput, CiAuditLogUncheckedCreateInput>
  }

  /**
   * CiAuditLog createMany
   */
  export type CiAuditLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CiAuditLogs.
     */
    data: CiAuditLogCreateManyInput | CiAuditLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CiAuditLog createManyAndReturn
   */
  export type CiAuditLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiAuditLog
     */
    select?: CiAuditLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CiAuditLog
     */
    omit?: CiAuditLogOmit<ExtArgs> | null
    /**
     * The data used to create many CiAuditLogs.
     */
    data: CiAuditLogCreateManyInput | CiAuditLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CiAuditLog update
   */
  export type CiAuditLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiAuditLog
     */
    select?: CiAuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiAuditLog
     */
    omit?: CiAuditLogOmit<ExtArgs> | null
    /**
     * The data needed to update a CiAuditLog.
     */
    data: XOR<CiAuditLogUpdateInput, CiAuditLogUncheckedUpdateInput>
    /**
     * Choose, which CiAuditLog to update.
     */
    where: CiAuditLogWhereUniqueInput
  }

  /**
   * CiAuditLog updateMany
   */
  export type CiAuditLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CiAuditLogs.
     */
    data: XOR<CiAuditLogUpdateManyMutationInput, CiAuditLogUncheckedUpdateManyInput>
    /**
     * Filter which CiAuditLogs to update
     */
    where?: CiAuditLogWhereInput
    /**
     * Limit how many CiAuditLogs to update.
     */
    limit?: number
  }

  /**
   * CiAuditLog updateManyAndReturn
   */
  export type CiAuditLogUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiAuditLog
     */
    select?: CiAuditLogSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CiAuditLog
     */
    omit?: CiAuditLogOmit<ExtArgs> | null
    /**
     * The data used to update CiAuditLogs.
     */
    data: XOR<CiAuditLogUpdateManyMutationInput, CiAuditLogUncheckedUpdateManyInput>
    /**
     * Filter which CiAuditLogs to update
     */
    where?: CiAuditLogWhereInput
    /**
     * Limit how many CiAuditLogs to update.
     */
    limit?: number
  }

  /**
   * CiAuditLog upsert
   */
  export type CiAuditLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiAuditLog
     */
    select?: CiAuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiAuditLog
     */
    omit?: CiAuditLogOmit<ExtArgs> | null
    /**
     * The filter to search for the CiAuditLog to update in case it exists.
     */
    where: CiAuditLogWhereUniqueInput
    /**
     * In case the CiAuditLog found by the `where` argument doesn't exist, create a new CiAuditLog with this data.
     */
    create: XOR<CiAuditLogCreateInput, CiAuditLogUncheckedCreateInput>
    /**
     * In case the CiAuditLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CiAuditLogUpdateInput, CiAuditLogUncheckedUpdateInput>
  }

  /**
   * CiAuditLog delete
   */
  export type CiAuditLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiAuditLog
     */
    select?: CiAuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiAuditLog
     */
    omit?: CiAuditLogOmit<ExtArgs> | null
    /**
     * Filter which CiAuditLog to delete.
     */
    where: CiAuditLogWhereUniqueInput
  }

  /**
   * CiAuditLog deleteMany
   */
  export type CiAuditLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CiAuditLogs to delete
     */
    where?: CiAuditLogWhereInput
    /**
     * Limit how many CiAuditLogs to delete.
     */
    limit?: number
  }

  /**
   * CiAuditLog without action
   */
  export type CiAuditLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiAuditLog
     */
    select?: CiAuditLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiAuditLog
     */
    omit?: CiAuditLogOmit<ExtArgs> | null
  }


  /**
   * Model SupportGroup
   */

  export type AggregateSupportGroup = {
    _count: SupportGroupCountAggregateOutputType | null
    _avg: SupportGroupAvgAggregateOutputType | null
    _sum: SupportGroupSumAggregateOutputType | null
    _min: SupportGroupMinAggregateOutputType | null
    _max: SupportGroupMaxAggregateOutputType | null
  }

  export type SupportGroupAvgAggregateOutputType = {
    slaTarget: number | null
  }

  export type SupportGroupSumAggregateOutputType = {
    slaTarget: number | null
  }

  export type SupportGroupMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    type: string | null
    email: string | null
    phone: string | null
    manager: string | null
    escalationGroup: string | null
    isActive: boolean | null
    slaTarget: number | null
    externalId: string | null
    adGroupDn: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type SupportGroupMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    type: string | null
    email: string | null
    phone: string | null
    manager: string | null
    escalationGroup: string | null
    isActive: boolean | null
    slaTarget: number | null
    externalId: string | null
    adGroupDn: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type SupportGroupCountAggregateOutputType = {
    id: number
    name: number
    description: number
    type: number
    email: number
    phone: number
    manager: number
    escalationGroup: number
    isActive: number
    businessHours: number
    slaTarget: number
    externalId: number
    adGroupDn: number
    createdAt: number
    updatedAt: number
    createdBy: number
    updatedBy: number
    _all: number
  }


  export type SupportGroupAvgAggregateInputType = {
    slaTarget?: true
  }

  export type SupportGroupSumAggregateInputType = {
    slaTarget?: true
  }

  export type SupportGroupMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    email?: true
    phone?: true
    manager?: true
    escalationGroup?: true
    isActive?: true
    slaTarget?: true
    externalId?: true
    adGroupDn?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type SupportGroupMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    email?: true
    phone?: true
    manager?: true
    escalationGroup?: true
    isActive?: true
    slaTarget?: true
    externalId?: true
    adGroupDn?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type SupportGroupCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    email?: true
    phone?: true
    manager?: true
    escalationGroup?: true
    isActive?: true
    businessHours?: true
    slaTarget?: true
    externalId?: true
    adGroupDn?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
    _all?: true
  }

  export type SupportGroupAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupportGroup to aggregate.
     */
    where?: SupportGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportGroups to fetch.
     */
    orderBy?: SupportGroupOrderByWithRelationInput | SupportGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupportGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SupportGroups
    **/
    _count?: true | SupportGroupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SupportGroupAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SupportGroupSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupportGroupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupportGroupMaxAggregateInputType
  }

  export type GetSupportGroupAggregateType<T extends SupportGroupAggregateArgs> = {
        [P in keyof T & keyof AggregateSupportGroup]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupportGroup[P]>
      : GetScalarType<T[P], AggregateSupportGroup[P]>
  }




  export type SupportGroupGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupportGroupWhereInput
    orderBy?: SupportGroupOrderByWithAggregationInput | SupportGroupOrderByWithAggregationInput[]
    by: SupportGroupScalarFieldEnum[] | SupportGroupScalarFieldEnum
    having?: SupportGroupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupportGroupCountAggregateInputType | true
    _avg?: SupportGroupAvgAggregateInputType
    _sum?: SupportGroupSumAggregateInputType
    _min?: SupportGroupMinAggregateInputType
    _max?: SupportGroupMaxAggregateInputType
  }

  export type SupportGroupGroupByOutputType = {
    id: string
    name: string
    description: string | null
    type: string
    email: string | null
    phone: string | null
    manager: string | null
    escalationGroup: string | null
    isActive: boolean
    businessHours: JsonValue | null
    slaTarget: number | null
    externalId: string | null
    adGroupDn: string | null
    createdAt: Date
    updatedAt: Date
    createdBy: string | null
    updatedBy: string | null
    _count: SupportGroupCountAggregateOutputType | null
    _avg: SupportGroupAvgAggregateOutputType | null
    _sum: SupportGroupSumAggregateOutputType | null
    _min: SupportGroupMinAggregateOutputType | null
    _max: SupportGroupMaxAggregateOutputType | null
  }

  type GetSupportGroupGroupByPayload<T extends SupportGroupGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupportGroupGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupportGroupGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupportGroupGroupByOutputType[P]>
            : GetScalarType<T[P], SupportGroupGroupByOutputType[P]>
        }
      >
    >


  export type SupportGroupSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    type?: boolean
    email?: boolean
    phone?: boolean
    manager?: boolean
    escalationGroup?: boolean
    isActive?: boolean
    businessHours?: boolean
    slaTarget?: boolean
    externalId?: boolean
    adGroupDn?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    members?: boolean | SupportGroup$membersArgs<ExtArgs>
    permissions?: boolean | SupportGroup$permissionsArgs<ExtArgs>
    configurationItems?: boolean | SupportGroup$configurationItemsArgs<ExtArgs>
    ownerships?: boolean | SupportGroup$ownershipsArgs<ExtArgs>
    escalationTarget?: boolean | SupportGroup$escalationTargetArgs<ExtArgs>
    escalationSource?: boolean | SupportGroup$escalationSourceArgs<ExtArgs>
    _count?: boolean | SupportGroupCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supportGroup"]>

  export type SupportGroupSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    type?: boolean
    email?: boolean
    phone?: boolean
    manager?: boolean
    escalationGroup?: boolean
    isActive?: boolean
    businessHours?: boolean
    slaTarget?: boolean
    externalId?: boolean
    adGroupDn?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    escalationSource?: boolean | SupportGroup$escalationSourceArgs<ExtArgs>
  }, ExtArgs["result"]["supportGroup"]>

  export type SupportGroupSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    type?: boolean
    email?: boolean
    phone?: boolean
    manager?: boolean
    escalationGroup?: boolean
    isActive?: boolean
    businessHours?: boolean
    slaTarget?: boolean
    externalId?: boolean
    adGroupDn?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    escalationSource?: boolean | SupportGroup$escalationSourceArgs<ExtArgs>
  }, ExtArgs["result"]["supportGroup"]>

  export type SupportGroupSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    type?: boolean
    email?: boolean
    phone?: boolean
    manager?: boolean
    escalationGroup?: boolean
    isActive?: boolean
    businessHours?: boolean
    slaTarget?: boolean
    externalId?: boolean
    adGroupDn?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
  }

  export type SupportGroupOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "type" | "email" | "phone" | "manager" | "escalationGroup" | "isActive" | "businessHours" | "slaTarget" | "externalId" | "adGroupDn" | "createdAt" | "updatedAt" | "createdBy" | "updatedBy", ExtArgs["result"]["supportGroup"]>
  export type SupportGroupInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    members?: boolean | SupportGroup$membersArgs<ExtArgs>
    permissions?: boolean | SupportGroup$permissionsArgs<ExtArgs>
    configurationItems?: boolean | SupportGroup$configurationItemsArgs<ExtArgs>
    ownerships?: boolean | SupportGroup$ownershipsArgs<ExtArgs>
    escalationTarget?: boolean | SupportGroup$escalationTargetArgs<ExtArgs>
    escalationSource?: boolean | SupportGroup$escalationSourceArgs<ExtArgs>
    _count?: boolean | SupportGroupCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SupportGroupIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    escalationSource?: boolean | SupportGroup$escalationSourceArgs<ExtArgs>
  }
  export type SupportGroupIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    escalationSource?: boolean | SupportGroup$escalationSourceArgs<ExtArgs>
  }

  export type $SupportGroupPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SupportGroup"
    objects: {
      members: Prisma.$SupportGroupMemberPayload<ExtArgs>[]
      permissions: Prisma.$SupportGroupPermissionPayload<ExtArgs>[]
      configurationItems: Prisma.$ConfigurationItemPayload<ExtArgs>[]
      ownerships: Prisma.$CiOwnershipPayload<ExtArgs>[]
      escalationTarget: Prisma.$SupportGroupPayload<ExtArgs>[]
      escalationSource: Prisma.$SupportGroupPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      type: string
      email: string | null
      phone: string | null
      manager: string | null
      escalationGroup: string | null
      isActive: boolean
      businessHours: Prisma.JsonValue | null
      slaTarget: number | null
      externalId: string | null
      adGroupDn: string | null
      createdAt: Date
      updatedAt: Date
      createdBy: string | null
      updatedBy: string | null
    }, ExtArgs["result"]["supportGroup"]>
    composites: {}
  }

  type SupportGroupGetPayload<S extends boolean | null | undefined | SupportGroupDefaultArgs> = $Result.GetResult<Prisma.$SupportGroupPayload, S>

  type SupportGroupCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupportGroupFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupportGroupCountAggregateInputType | true
    }

  export interface SupportGroupDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SupportGroup'], meta: { name: 'SupportGroup' } }
    /**
     * Find zero or one SupportGroup that matches the filter.
     * @param {SupportGroupFindUniqueArgs} args - Arguments to find a SupportGroup
     * @example
     * // Get one SupportGroup
     * const supportGroup = await prisma.supportGroup.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupportGroupFindUniqueArgs>(args: SelectSubset<T, SupportGroupFindUniqueArgs<ExtArgs>>): Prisma__SupportGroupClient<$Result.GetResult<Prisma.$SupportGroupPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SupportGroup that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupportGroupFindUniqueOrThrowArgs} args - Arguments to find a SupportGroup
     * @example
     * // Get one SupportGroup
     * const supportGroup = await prisma.supportGroup.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupportGroupFindUniqueOrThrowArgs>(args: SelectSubset<T, SupportGroupFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupportGroupClient<$Result.GetResult<Prisma.$SupportGroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupportGroup that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupFindFirstArgs} args - Arguments to find a SupportGroup
     * @example
     * // Get one SupportGroup
     * const supportGroup = await prisma.supportGroup.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupportGroupFindFirstArgs>(args?: SelectSubset<T, SupportGroupFindFirstArgs<ExtArgs>>): Prisma__SupportGroupClient<$Result.GetResult<Prisma.$SupportGroupPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupportGroup that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupFindFirstOrThrowArgs} args - Arguments to find a SupportGroup
     * @example
     * // Get one SupportGroup
     * const supportGroup = await prisma.supportGroup.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupportGroupFindFirstOrThrowArgs>(args?: SelectSubset<T, SupportGroupFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupportGroupClient<$Result.GetResult<Prisma.$SupportGroupPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SupportGroups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SupportGroups
     * const supportGroups = await prisma.supportGroup.findMany()
     * 
     * // Get first 10 SupportGroups
     * const supportGroups = await prisma.supportGroup.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supportGroupWithIdOnly = await prisma.supportGroup.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupportGroupFindManyArgs>(args?: SelectSubset<T, SupportGroupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportGroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SupportGroup.
     * @param {SupportGroupCreateArgs} args - Arguments to create a SupportGroup.
     * @example
     * // Create one SupportGroup
     * const SupportGroup = await prisma.supportGroup.create({
     *   data: {
     *     // ... data to create a SupportGroup
     *   }
     * })
     * 
     */
    create<T extends SupportGroupCreateArgs>(args: SelectSubset<T, SupportGroupCreateArgs<ExtArgs>>): Prisma__SupportGroupClient<$Result.GetResult<Prisma.$SupportGroupPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SupportGroups.
     * @param {SupportGroupCreateManyArgs} args - Arguments to create many SupportGroups.
     * @example
     * // Create many SupportGroups
     * const supportGroup = await prisma.supportGroup.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupportGroupCreateManyArgs>(args?: SelectSubset<T, SupportGroupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SupportGroups and returns the data saved in the database.
     * @param {SupportGroupCreateManyAndReturnArgs} args - Arguments to create many SupportGroups.
     * @example
     * // Create many SupportGroups
     * const supportGroup = await prisma.supportGroup.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SupportGroups and only return the `id`
     * const supportGroupWithIdOnly = await prisma.supportGroup.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SupportGroupCreateManyAndReturnArgs>(args?: SelectSubset<T, SupportGroupCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportGroupPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SupportGroup.
     * @param {SupportGroupDeleteArgs} args - Arguments to delete one SupportGroup.
     * @example
     * // Delete one SupportGroup
     * const SupportGroup = await prisma.supportGroup.delete({
     *   where: {
     *     // ... filter to delete one SupportGroup
     *   }
     * })
     * 
     */
    delete<T extends SupportGroupDeleteArgs>(args: SelectSubset<T, SupportGroupDeleteArgs<ExtArgs>>): Prisma__SupportGroupClient<$Result.GetResult<Prisma.$SupportGroupPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SupportGroup.
     * @param {SupportGroupUpdateArgs} args - Arguments to update one SupportGroup.
     * @example
     * // Update one SupportGroup
     * const supportGroup = await prisma.supportGroup.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupportGroupUpdateArgs>(args: SelectSubset<T, SupportGroupUpdateArgs<ExtArgs>>): Prisma__SupportGroupClient<$Result.GetResult<Prisma.$SupportGroupPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SupportGroups.
     * @param {SupportGroupDeleteManyArgs} args - Arguments to filter SupportGroups to delete.
     * @example
     * // Delete a few SupportGroups
     * const { count } = await prisma.supportGroup.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupportGroupDeleteManyArgs>(args?: SelectSubset<T, SupportGroupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupportGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SupportGroups
     * const supportGroup = await prisma.supportGroup.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupportGroupUpdateManyArgs>(args: SelectSubset<T, SupportGroupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupportGroups and returns the data updated in the database.
     * @param {SupportGroupUpdateManyAndReturnArgs} args - Arguments to update many SupportGroups.
     * @example
     * // Update many SupportGroups
     * const supportGroup = await prisma.supportGroup.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SupportGroups and only return the `id`
     * const supportGroupWithIdOnly = await prisma.supportGroup.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SupportGroupUpdateManyAndReturnArgs>(args: SelectSubset<T, SupportGroupUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportGroupPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SupportGroup.
     * @param {SupportGroupUpsertArgs} args - Arguments to update or create a SupportGroup.
     * @example
     * // Update or create a SupportGroup
     * const supportGroup = await prisma.supportGroup.upsert({
     *   create: {
     *     // ... data to create a SupportGroup
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SupportGroup we want to update
     *   }
     * })
     */
    upsert<T extends SupportGroupUpsertArgs>(args: SelectSubset<T, SupportGroupUpsertArgs<ExtArgs>>): Prisma__SupportGroupClient<$Result.GetResult<Prisma.$SupportGroupPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SupportGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupCountArgs} args - Arguments to filter SupportGroups to count.
     * @example
     * // Count the number of SupportGroups
     * const count = await prisma.supportGroup.count({
     *   where: {
     *     // ... the filter for the SupportGroups we want to count
     *   }
     * })
    **/
    count<T extends SupportGroupCountArgs>(
      args?: Subset<T, SupportGroupCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupportGroupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SupportGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupportGroupAggregateArgs>(args: Subset<T, SupportGroupAggregateArgs>): Prisma.PrismaPromise<GetSupportGroupAggregateType<T>>

    /**
     * Group by SupportGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupportGroupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupportGroupGroupByArgs['orderBy'] }
        : { orderBy?: SupportGroupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupportGroupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupportGroupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SupportGroup model
   */
  readonly fields: SupportGroupFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for SupportGroup.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupportGroupClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    members<T extends SupportGroup$membersArgs<ExtArgs> = {}>(args?: Subset<T, SupportGroup$membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportGroupMemberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    permissions<T extends SupportGroup$permissionsArgs<ExtArgs> = {}>(args?: Subset<T, SupportGroup$permissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportGroupPermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    configurationItems<T extends SupportGroup$configurationItemsArgs<ExtArgs> = {}>(args?: Subset<T, SupportGroup$configurationItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ownerships<T extends SupportGroup$ownershipsArgs<ExtArgs> = {}>(args?: Subset<T, SupportGroup$ownershipsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiOwnershipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    escalationTarget<T extends SupportGroup$escalationTargetArgs<ExtArgs> = {}>(args?: Subset<T, SupportGroup$escalationTargetArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportGroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    escalationSource<T extends SupportGroup$escalationSourceArgs<ExtArgs> = {}>(args?: Subset<T, SupportGroup$escalationSourceArgs<ExtArgs>>): Prisma__SupportGroupClient<$Result.GetResult<Prisma.$SupportGroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SupportGroup model
   */
  interface SupportGroupFieldRefs {
    readonly id: FieldRef<"SupportGroup", 'String'>
    readonly name: FieldRef<"SupportGroup", 'String'>
    readonly description: FieldRef<"SupportGroup", 'String'>
    readonly type: FieldRef<"SupportGroup", 'String'>
    readonly email: FieldRef<"SupportGroup", 'String'>
    readonly phone: FieldRef<"SupportGroup", 'String'>
    readonly manager: FieldRef<"SupportGroup", 'String'>
    readonly escalationGroup: FieldRef<"SupportGroup", 'String'>
    readonly isActive: FieldRef<"SupportGroup", 'Boolean'>
    readonly businessHours: FieldRef<"SupportGroup", 'Json'>
    readonly slaTarget: FieldRef<"SupportGroup", 'Int'>
    readonly externalId: FieldRef<"SupportGroup", 'String'>
    readonly adGroupDn: FieldRef<"SupportGroup", 'String'>
    readonly createdAt: FieldRef<"SupportGroup", 'DateTime'>
    readonly updatedAt: FieldRef<"SupportGroup", 'DateTime'>
    readonly createdBy: FieldRef<"SupportGroup", 'String'>
    readonly updatedBy: FieldRef<"SupportGroup", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SupportGroup findUnique
   */
  export type SupportGroupFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroup
     */
    select?: SupportGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroup
     */
    omit?: SupportGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupInclude<ExtArgs> | null
    /**
     * Filter, which SupportGroup to fetch.
     */
    where: SupportGroupWhereUniqueInput
  }

  /**
   * SupportGroup findUniqueOrThrow
   */
  export type SupportGroupFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroup
     */
    select?: SupportGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroup
     */
    omit?: SupportGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupInclude<ExtArgs> | null
    /**
     * Filter, which SupportGroup to fetch.
     */
    where: SupportGroupWhereUniqueInput
  }

  /**
   * SupportGroup findFirst
   */
  export type SupportGroupFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroup
     */
    select?: SupportGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroup
     */
    omit?: SupportGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupInclude<ExtArgs> | null
    /**
     * Filter, which SupportGroup to fetch.
     */
    where?: SupportGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportGroups to fetch.
     */
    orderBy?: SupportGroupOrderByWithRelationInput | SupportGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupportGroups.
     */
    cursor?: SupportGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupportGroups.
     */
    distinct?: SupportGroupScalarFieldEnum | SupportGroupScalarFieldEnum[]
  }

  /**
   * SupportGroup findFirstOrThrow
   */
  export type SupportGroupFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroup
     */
    select?: SupportGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroup
     */
    omit?: SupportGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupInclude<ExtArgs> | null
    /**
     * Filter, which SupportGroup to fetch.
     */
    where?: SupportGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportGroups to fetch.
     */
    orderBy?: SupportGroupOrderByWithRelationInput | SupportGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupportGroups.
     */
    cursor?: SupportGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupportGroups.
     */
    distinct?: SupportGroupScalarFieldEnum | SupportGroupScalarFieldEnum[]
  }

  /**
   * SupportGroup findMany
   */
  export type SupportGroupFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroup
     */
    select?: SupportGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroup
     */
    omit?: SupportGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupInclude<ExtArgs> | null
    /**
     * Filter, which SupportGroups to fetch.
     */
    where?: SupportGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportGroups to fetch.
     */
    orderBy?: SupportGroupOrderByWithRelationInput | SupportGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SupportGroups.
     */
    cursor?: SupportGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportGroups.
     */
    skip?: number
    distinct?: SupportGroupScalarFieldEnum | SupportGroupScalarFieldEnum[]
  }

  /**
   * SupportGroup create
   */
  export type SupportGroupCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroup
     */
    select?: SupportGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroup
     */
    omit?: SupportGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupInclude<ExtArgs> | null
    /**
     * The data needed to create a SupportGroup.
     */
    data: XOR<SupportGroupCreateInput, SupportGroupUncheckedCreateInput>
  }

  /**
   * SupportGroup createMany
   */
  export type SupportGroupCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SupportGroups.
     */
    data: SupportGroupCreateManyInput | SupportGroupCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SupportGroup createManyAndReturn
   */
  export type SupportGroupCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroup
     */
    select?: SupportGroupSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroup
     */
    omit?: SupportGroupOmit<ExtArgs> | null
    /**
     * The data used to create many SupportGroups.
     */
    data: SupportGroupCreateManyInput | SupportGroupCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupportGroup update
   */
  export type SupportGroupUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroup
     */
    select?: SupportGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroup
     */
    omit?: SupportGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupInclude<ExtArgs> | null
    /**
     * The data needed to update a SupportGroup.
     */
    data: XOR<SupportGroupUpdateInput, SupportGroupUncheckedUpdateInput>
    /**
     * Choose, which SupportGroup to update.
     */
    where: SupportGroupWhereUniqueInput
  }

  /**
   * SupportGroup updateMany
   */
  export type SupportGroupUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SupportGroups.
     */
    data: XOR<SupportGroupUpdateManyMutationInput, SupportGroupUncheckedUpdateManyInput>
    /**
     * Filter which SupportGroups to update
     */
    where?: SupportGroupWhereInput
    /**
     * Limit how many SupportGroups to update.
     */
    limit?: number
  }

  /**
   * SupportGroup updateManyAndReturn
   */
  export type SupportGroupUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroup
     */
    select?: SupportGroupSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroup
     */
    omit?: SupportGroupOmit<ExtArgs> | null
    /**
     * The data used to update SupportGroups.
     */
    data: XOR<SupportGroupUpdateManyMutationInput, SupportGroupUncheckedUpdateManyInput>
    /**
     * Filter which SupportGroups to update
     */
    where?: SupportGroupWhereInput
    /**
     * Limit how many SupportGroups to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupportGroup upsert
   */
  export type SupportGroupUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroup
     */
    select?: SupportGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroup
     */
    omit?: SupportGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupInclude<ExtArgs> | null
    /**
     * The filter to search for the SupportGroup to update in case it exists.
     */
    where: SupportGroupWhereUniqueInput
    /**
     * In case the SupportGroup found by the `where` argument doesn't exist, create a new SupportGroup with this data.
     */
    create: XOR<SupportGroupCreateInput, SupportGroupUncheckedCreateInput>
    /**
     * In case the SupportGroup was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupportGroupUpdateInput, SupportGroupUncheckedUpdateInput>
  }

  /**
   * SupportGroup delete
   */
  export type SupportGroupDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroup
     */
    select?: SupportGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroup
     */
    omit?: SupportGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupInclude<ExtArgs> | null
    /**
     * Filter which SupportGroup to delete.
     */
    where: SupportGroupWhereUniqueInput
  }

  /**
   * SupportGroup deleteMany
   */
  export type SupportGroupDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupportGroups to delete
     */
    where?: SupportGroupWhereInput
    /**
     * Limit how many SupportGroups to delete.
     */
    limit?: number
  }

  /**
   * SupportGroup.members
   */
  export type SupportGroup$membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupMember
     */
    select?: SupportGroupMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupMember
     */
    omit?: SupportGroupMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupMemberInclude<ExtArgs> | null
    where?: SupportGroupMemberWhereInput
    orderBy?: SupportGroupMemberOrderByWithRelationInput | SupportGroupMemberOrderByWithRelationInput[]
    cursor?: SupportGroupMemberWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupportGroupMemberScalarFieldEnum | SupportGroupMemberScalarFieldEnum[]
  }

  /**
   * SupportGroup.permissions
   */
  export type SupportGroup$permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupPermission
     */
    select?: SupportGroupPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupPermission
     */
    omit?: SupportGroupPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupPermissionInclude<ExtArgs> | null
    where?: SupportGroupPermissionWhereInput
    orderBy?: SupportGroupPermissionOrderByWithRelationInput | SupportGroupPermissionOrderByWithRelationInput[]
    cursor?: SupportGroupPermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupportGroupPermissionScalarFieldEnum | SupportGroupPermissionScalarFieldEnum[]
  }

  /**
   * SupportGroup.configurationItems
   */
  export type SupportGroup$configurationItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfigurationItem
     */
    select?: ConfigurationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfigurationItem
     */
    omit?: ConfigurationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfigurationItemInclude<ExtArgs> | null
    where?: ConfigurationItemWhereInput
    orderBy?: ConfigurationItemOrderByWithRelationInput | ConfigurationItemOrderByWithRelationInput[]
    cursor?: ConfigurationItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConfigurationItemScalarFieldEnum | ConfigurationItemScalarFieldEnum[]
  }

  /**
   * SupportGroup.ownerships
   */
  export type SupportGroup$ownershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiOwnership
     */
    select?: CiOwnershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiOwnership
     */
    omit?: CiOwnershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiOwnershipInclude<ExtArgs> | null
    where?: CiOwnershipWhereInput
    orderBy?: CiOwnershipOrderByWithRelationInput | CiOwnershipOrderByWithRelationInput[]
    cursor?: CiOwnershipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CiOwnershipScalarFieldEnum | CiOwnershipScalarFieldEnum[]
  }

  /**
   * SupportGroup.escalationTarget
   */
  export type SupportGroup$escalationTargetArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroup
     */
    select?: SupportGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroup
     */
    omit?: SupportGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupInclude<ExtArgs> | null
    where?: SupportGroupWhereInput
    orderBy?: SupportGroupOrderByWithRelationInput | SupportGroupOrderByWithRelationInput[]
    cursor?: SupportGroupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupportGroupScalarFieldEnum | SupportGroupScalarFieldEnum[]
  }

  /**
   * SupportGroup.escalationSource
   */
  export type SupportGroup$escalationSourceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroup
     */
    select?: SupportGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroup
     */
    omit?: SupportGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupInclude<ExtArgs> | null
    where?: SupportGroupWhereInput
  }

  /**
   * SupportGroup without action
   */
  export type SupportGroupDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroup
     */
    select?: SupportGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroup
     */
    omit?: SupportGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupInclude<ExtArgs> | null
  }


  /**
   * Model SupportGroupMember
   */

  export type AggregateSupportGroupMember = {
    _count: SupportGroupMemberCountAggregateOutputType | null
    _min: SupportGroupMemberMinAggregateOutputType | null
    _max: SupportGroupMemberMaxAggregateOutputType | null
  }

  export type SupportGroupMemberMinAggregateOutputType = {
    id: string | null
    supportGroupId: string | null
    userId: string | null
    role: string | null
    isPrimary: boolean | null
    isActive: boolean | null
    startDate: Date | null
    endDate: Date | null
    assignedAt: Date | null
    assignedBy: string | null
  }

  export type SupportGroupMemberMaxAggregateOutputType = {
    id: string | null
    supportGroupId: string | null
    userId: string | null
    role: string | null
    isPrimary: boolean | null
    isActive: boolean | null
    startDate: Date | null
    endDate: Date | null
    assignedAt: Date | null
    assignedBy: string | null
  }

  export type SupportGroupMemberCountAggregateOutputType = {
    id: number
    supportGroupId: number
    userId: number
    role: number
    isPrimary: number
    isActive: number
    startDate: number
    endDate: number
    assignedAt: number
    assignedBy: number
    _all: number
  }


  export type SupportGroupMemberMinAggregateInputType = {
    id?: true
    supportGroupId?: true
    userId?: true
    role?: true
    isPrimary?: true
    isActive?: true
    startDate?: true
    endDate?: true
    assignedAt?: true
    assignedBy?: true
  }

  export type SupportGroupMemberMaxAggregateInputType = {
    id?: true
    supportGroupId?: true
    userId?: true
    role?: true
    isPrimary?: true
    isActive?: true
    startDate?: true
    endDate?: true
    assignedAt?: true
    assignedBy?: true
  }

  export type SupportGroupMemberCountAggregateInputType = {
    id?: true
    supportGroupId?: true
    userId?: true
    role?: true
    isPrimary?: true
    isActive?: true
    startDate?: true
    endDate?: true
    assignedAt?: true
    assignedBy?: true
    _all?: true
  }

  export type SupportGroupMemberAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupportGroupMember to aggregate.
     */
    where?: SupportGroupMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportGroupMembers to fetch.
     */
    orderBy?: SupportGroupMemberOrderByWithRelationInput | SupportGroupMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupportGroupMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportGroupMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportGroupMembers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SupportGroupMembers
    **/
    _count?: true | SupportGroupMemberCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupportGroupMemberMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupportGroupMemberMaxAggregateInputType
  }

  export type GetSupportGroupMemberAggregateType<T extends SupportGroupMemberAggregateArgs> = {
        [P in keyof T & keyof AggregateSupportGroupMember]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupportGroupMember[P]>
      : GetScalarType<T[P], AggregateSupportGroupMember[P]>
  }




  export type SupportGroupMemberGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupportGroupMemberWhereInput
    orderBy?: SupportGroupMemberOrderByWithAggregationInput | SupportGroupMemberOrderByWithAggregationInput[]
    by: SupportGroupMemberScalarFieldEnum[] | SupportGroupMemberScalarFieldEnum
    having?: SupportGroupMemberScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupportGroupMemberCountAggregateInputType | true
    _min?: SupportGroupMemberMinAggregateInputType
    _max?: SupportGroupMemberMaxAggregateInputType
  }

  export type SupportGroupMemberGroupByOutputType = {
    id: string
    supportGroupId: string
    userId: string
    role: string
    isPrimary: boolean
    isActive: boolean
    startDate: Date | null
    endDate: Date | null
    assignedAt: Date
    assignedBy: string | null
    _count: SupportGroupMemberCountAggregateOutputType | null
    _min: SupportGroupMemberMinAggregateOutputType | null
    _max: SupportGroupMemberMaxAggregateOutputType | null
  }

  type GetSupportGroupMemberGroupByPayload<T extends SupportGroupMemberGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupportGroupMemberGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupportGroupMemberGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupportGroupMemberGroupByOutputType[P]>
            : GetScalarType<T[P], SupportGroupMemberGroupByOutputType[P]>
        }
      >
    >


  export type SupportGroupMemberSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supportGroupId?: boolean
    userId?: boolean
    role?: boolean
    isPrimary?: boolean
    isActive?: boolean
    startDate?: boolean
    endDate?: boolean
    assignedAt?: boolean
    assignedBy?: boolean
    supportGroup?: boolean | SupportGroupDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supportGroupMember"]>

  export type SupportGroupMemberSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supportGroupId?: boolean
    userId?: boolean
    role?: boolean
    isPrimary?: boolean
    isActive?: boolean
    startDate?: boolean
    endDate?: boolean
    assignedAt?: boolean
    assignedBy?: boolean
    supportGroup?: boolean | SupportGroupDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supportGroupMember"]>

  export type SupportGroupMemberSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supportGroupId?: boolean
    userId?: boolean
    role?: boolean
    isPrimary?: boolean
    isActive?: boolean
    startDate?: boolean
    endDate?: boolean
    assignedAt?: boolean
    assignedBy?: boolean
    supportGroup?: boolean | SupportGroupDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supportGroupMember"]>

  export type SupportGroupMemberSelectScalar = {
    id?: boolean
    supportGroupId?: boolean
    userId?: boolean
    role?: boolean
    isPrimary?: boolean
    isActive?: boolean
    startDate?: boolean
    endDate?: boolean
    assignedAt?: boolean
    assignedBy?: boolean
  }

  export type SupportGroupMemberOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "supportGroupId" | "userId" | "role" | "isPrimary" | "isActive" | "startDate" | "endDate" | "assignedAt" | "assignedBy", ExtArgs["result"]["supportGroupMember"]>
  export type SupportGroupMemberInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supportGroup?: boolean | SupportGroupDefaultArgs<ExtArgs>
  }
  export type SupportGroupMemberIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supportGroup?: boolean | SupportGroupDefaultArgs<ExtArgs>
  }
  export type SupportGroupMemberIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supportGroup?: boolean | SupportGroupDefaultArgs<ExtArgs>
  }

  export type $SupportGroupMemberPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SupportGroupMember"
    objects: {
      supportGroup: Prisma.$SupportGroupPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      supportGroupId: string
      userId: string
      role: string
      isPrimary: boolean
      isActive: boolean
      startDate: Date | null
      endDate: Date | null
      assignedAt: Date
      assignedBy: string | null
    }, ExtArgs["result"]["supportGroupMember"]>
    composites: {}
  }

  type SupportGroupMemberGetPayload<S extends boolean | null | undefined | SupportGroupMemberDefaultArgs> = $Result.GetResult<Prisma.$SupportGroupMemberPayload, S>

  type SupportGroupMemberCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupportGroupMemberFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupportGroupMemberCountAggregateInputType | true
    }

  export interface SupportGroupMemberDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SupportGroupMember'], meta: { name: 'SupportGroupMember' } }
    /**
     * Find zero or one SupportGroupMember that matches the filter.
     * @param {SupportGroupMemberFindUniqueArgs} args - Arguments to find a SupportGroupMember
     * @example
     * // Get one SupportGroupMember
     * const supportGroupMember = await prisma.supportGroupMember.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupportGroupMemberFindUniqueArgs>(args: SelectSubset<T, SupportGroupMemberFindUniqueArgs<ExtArgs>>): Prisma__SupportGroupMemberClient<$Result.GetResult<Prisma.$SupportGroupMemberPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SupportGroupMember that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupportGroupMemberFindUniqueOrThrowArgs} args - Arguments to find a SupportGroupMember
     * @example
     * // Get one SupportGroupMember
     * const supportGroupMember = await prisma.supportGroupMember.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupportGroupMemberFindUniqueOrThrowArgs>(args: SelectSubset<T, SupportGroupMemberFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupportGroupMemberClient<$Result.GetResult<Prisma.$SupportGroupMemberPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupportGroupMember that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupMemberFindFirstArgs} args - Arguments to find a SupportGroupMember
     * @example
     * // Get one SupportGroupMember
     * const supportGroupMember = await prisma.supportGroupMember.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupportGroupMemberFindFirstArgs>(args?: SelectSubset<T, SupportGroupMemberFindFirstArgs<ExtArgs>>): Prisma__SupportGroupMemberClient<$Result.GetResult<Prisma.$SupportGroupMemberPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupportGroupMember that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupMemberFindFirstOrThrowArgs} args - Arguments to find a SupportGroupMember
     * @example
     * // Get one SupportGroupMember
     * const supportGroupMember = await prisma.supportGroupMember.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupportGroupMemberFindFirstOrThrowArgs>(args?: SelectSubset<T, SupportGroupMemberFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupportGroupMemberClient<$Result.GetResult<Prisma.$SupportGroupMemberPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SupportGroupMembers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupMemberFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SupportGroupMembers
     * const supportGroupMembers = await prisma.supportGroupMember.findMany()
     * 
     * // Get first 10 SupportGroupMembers
     * const supportGroupMembers = await prisma.supportGroupMember.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supportGroupMemberWithIdOnly = await prisma.supportGroupMember.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupportGroupMemberFindManyArgs>(args?: SelectSubset<T, SupportGroupMemberFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportGroupMemberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SupportGroupMember.
     * @param {SupportGroupMemberCreateArgs} args - Arguments to create a SupportGroupMember.
     * @example
     * // Create one SupportGroupMember
     * const SupportGroupMember = await prisma.supportGroupMember.create({
     *   data: {
     *     // ... data to create a SupportGroupMember
     *   }
     * })
     * 
     */
    create<T extends SupportGroupMemberCreateArgs>(args: SelectSubset<T, SupportGroupMemberCreateArgs<ExtArgs>>): Prisma__SupportGroupMemberClient<$Result.GetResult<Prisma.$SupportGroupMemberPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SupportGroupMembers.
     * @param {SupportGroupMemberCreateManyArgs} args - Arguments to create many SupportGroupMembers.
     * @example
     * // Create many SupportGroupMembers
     * const supportGroupMember = await prisma.supportGroupMember.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupportGroupMemberCreateManyArgs>(args?: SelectSubset<T, SupportGroupMemberCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SupportGroupMembers and returns the data saved in the database.
     * @param {SupportGroupMemberCreateManyAndReturnArgs} args - Arguments to create many SupportGroupMembers.
     * @example
     * // Create many SupportGroupMembers
     * const supportGroupMember = await prisma.supportGroupMember.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SupportGroupMembers and only return the `id`
     * const supportGroupMemberWithIdOnly = await prisma.supportGroupMember.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SupportGroupMemberCreateManyAndReturnArgs>(args?: SelectSubset<T, SupportGroupMemberCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportGroupMemberPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SupportGroupMember.
     * @param {SupportGroupMemberDeleteArgs} args - Arguments to delete one SupportGroupMember.
     * @example
     * // Delete one SupportGroupMember
     * const SupportGroupMember = await prisma.supportGroupMember.delete({
     *   where: {
     *     // ... filter to delete one SupportGroupMember
     *   }
     * })
     * 
     */
    delete<T extends SupportGroupMemberDeleteArgs>(args: SelectSubset<T, SupportGroupMemberDeleteArgs<ExtArgs>>): Prisma__SupportGroupMemberClient<$Result.GetResult<Prisma.$SupportGroupMemberPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SupportGroupMember.
     * @param {SupportGroupMemberUpdateArgs} args - Arguments to update one SupportGroupMember.
     * @example
     * // Update one SupportGroupMember
     * const supportGroupMember = await prisma.supportGroupMember.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupportGroupMemberUpdateArgs>(args: SelectSubset<T, SupportGroupMemberUpdateArgs<ExtArgs>>): Prisma__SupportGroupMemberClient<$Result.GetResult<Prisma.$SupportGroupMemberPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SupportGroupMembers.
     * @param {SupportGroupMemberDeleteManyArgs} args - Arguments to filter SupportGroupMembers to delete.
     * @example
     * // Delete a few SupportGroupMembers
     * const { count } = await prisma.supportGroupMember.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupportGroupMemberDeleteManyArgs>(args?: SelectSubset<T, SupportGroupMemberDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupportGroupMembers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupMemberUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SupportGroupMembers
     * const supportGroupMember = await prisma.supportGroupMember.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupportGroupMemberUpdateManyArgs>(args: SelectSubset<T, SupportGroupMemberUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupportGroupMembers and returns the data updated in the database.
     * @param {SupportGroupMemberUpdateManyAndReturnArgs} args - Arguments to update many SupportGroupMembers.
     * @example
     * // Update many SupportGroupMembers
     * const supportGroupMember = await prisma.supportGroupMember.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SupportGroupMembers and only return the `id`
     * const supportGroupMemberWithIdOnly = await prisma.supportGroupMember.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SupportGroupMemberUpdateManyAndReturnArgs>(args: SelectSubset<T, SupportGroupMemberUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportGroupMemberPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SupportGroupMember.
     * @param {SupportGroupMemberUpsertArgs} args - Arguments to update or create a SupportGroupMember.
     * @example
     * // Update or create a SupportGroupMember
     * const supportGroupMember = await prisma.supportGroupMember.upsert({
     *   create: {
     *     // ... data to create a SupportGroupMember
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SupportGroupMember we want to update
     *   }
     * })
     */
    upsert<T extends SupportGroupMemberUpsertArgs>(args: SelectSubset<T, SupportGroupMemberUpsertArgs<ExtArgs>>): Prisma__SupportGroupMemberClient<$Result.GetResult<Prisma.$SupportGroupMemberPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SupportGroupMembers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupMemberCountArgs} args - Arguments to filter SupportGroupMembers to count.
     * @example
     * // Count the number of SupportGroupMembers
     * const count = await prisma.supportGroupMember.count({
     *   where: {
     *     // ... the filter for the SupportGroupMembers we want to count
     *   }
     * })
    **/
    count<T extends SupportGroupMemberCountArgs>(
      args?: Subset<T, SupportGroupMemberCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupportGroupMemberCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SupportGroupMember.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupMemberAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupportGroupMemberAggregateArgs>(args: Subset<T, SupportGroupMemberAggregateArgs>): Prisma.PrismaPromise<GetSupportGroupMemberAggregateType<T>>

    /**
     * Group by SupportGroupMember.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupMemberGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupportGroupMemberGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupportGroupMemberGroupByArgs['orderBy'] }
        : { orderBy?: SupportGroupMemberGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupportGroupMemberGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupportGroupMemberGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SupportGroupMember model
   */
  readonly fields: SupportGroupMemberFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for SupportGroupMember.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupportGroupMemberClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    supportGroup<T extends SupportGroupDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SupportGroupDefaultArgs<ExtArgs>>): Prisma__SupportGroupClient<$Result.GetResult<Prisma.$SupportGroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SupportGroupMember model
   */
  interface SupportGroupMemberFieldRefs {
    readonly id: FieldRef<"SupportGroupMember", 'String'>
    readonly supportGroupId: FieldRef<"SupportGroupMember", 'String'>
    readonly userId: FieldRef<"SupportGroupMember", 'String'>
    readonly role: FieldRef<"SupportGroupMember", 'String'>
    readonly isPrimary: FieldRef<"SupportGroupMember", 'Boolean'>
    readonly isActive: FieldRef<"SupportGroupMember", 'Boolean'>
    readonly startDate: FieldRef<"SupportGroupMember", 'DateTime'>
    readonly endDate: FieldRef<"SupportGroupMember", 'DateTime'>
    readonly assignedAt: FieldRef<"SupportGroupMember", 'DateTime'>
    readonly assignedBy: FieldRef<"SupportGroupMember", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SupportGroupMember findUnique
   */
  export type SupportGroupMemberFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupMember
     */
    select?: SupportGroupMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupMember
     */
    omit?: SupportGroupMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupMemberInclude<ExtArgs> | null
    /**
     * Filter, which SupportGroupMember to fetch.
     */
    where: SupportGroupMemberWhereUniqueInput
  }

  /**
   * SupportGroupMember findUniqueOrThrow
   */
  export type SupportGroupMemberFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupMember
     */
    select?: SupportGroupMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupMember
     */
    omit?: SupportGroupMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupMemberInclude<ExtArgs> | null
    /**
     * Filter, which SupportGroupMember to fetch.
     */
    where: SupportGroupMemberWhereUniqueInput
  }

  /**
   * SupportGroupMember findFirst
   */
  export type SupportGroupMemberFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupMember
     */
    select?: SupportGroupMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupMember
     */
    omit?: SupportGroupMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupMemberInclude<ExtArgs> | null
    /**
     * Filter, which SupportGroupMember to fetch.
     */
    where?: SupportGroupMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportGroupMembers to fetch.
     */
    orderBy?: SupportGroupMemberOrderByWithRelationInput | SupportGroupMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupportGroupMembers.
     */
    cursor?: SupportGroupMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportGroupMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportGroupMembers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupportGroupMembers.
     */
    distinct?: SupportGroupMemberScalarFieldEnum | SupportGroupMemberScalarFieldEnum[]
  }

  /**
   * SupportGroupMember findFirstOrThrow
   */
  export type SupportGroupMemberFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupMember
     */
    select?: SupportGroupMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupMember
     */
    omit?: SupportGroupMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupMemberInclude<ExtArgs> | null
    /**
     * Filter, which SupportGroupMember to fetch.
     */
    where?: SupportGroupMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportGroupMembers to fetch.
     */
    orderBy?: SupportGroupMemberOrderByWithRelationInput | SupportGroupMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupportGroupMembers.
     */
    cursor?: SupportGroupMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportGroupMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportGroupMembers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupportGroupMembers.
     */
    distinct?: SupportGroupMemberScalarFieldEnum | SupportGroupMemberScalarFieldEnum[]
  }

  /**
   * SupportGroupMember findMany
   */
  export type SupportGroupMemberFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupMember
     */
    select?: SupportGroupMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupMember
     */
    omit?: SupportGroupMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupMemberInclude<ExtArgs> | null
    /**
     * Filter, which SupportGroupMembers to fetch.
     */
    where?: SupportGroupMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportGroupMembers to fetch.
     */
    orderBy?: SupportGroupMemberOrderByWithRelationInput | SupportGroupMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SupportGroupMembers.
     */
    cursor?: SupportGroupMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportGroupMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportGroupMembers.
     */
    skip?: number
    distinct?: SupportGroupMemberScalarFieldEnum | SupportGroupMemberScalarFieldEnum[]
  }

  /**
   * SupportGroupMember create
   */
  export type SupportGroupMemberCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupMember
     */
    select?: SupportGroupMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupMember
     */
    omit?: SupportGroupMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupMemberInclude<ExtArgs> | null
    /**
     * The data needed to create a SupportGroupMember.
     */
    data: XOR<SupportGroupMemberCreateInput, SupportGroupMemberUncheckedCreateInput>
  }

  /**
   * SupportGroupMember createMany
   */
  export type SupportGroupMemberCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SupportGroupMembers.
     */
    data: SupportGroupMemberCreateManyInput | SupportGroupMemberCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SupportGroupMember createManyAndReturn
   */
  export type SupportGroupMemberCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupMember
     */
    select?: SupportGroupMemberSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupMember
     */
    omit?: SupportGroupMemberOmit<ExtArgs> | null
    /**
     * The data used to create many SupportGroupMembers.
     */
    data: SupportGroupMemberCreateManyInput | SupportGroupMemberCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupMemberIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupportGroupMember update
   */
  export type SupportGroupMemberUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupMember
     */
    select?: SupportGroupMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupMember
     */
    omit?: SupportGroupMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupMemberInclude<ExtArgs> | null
    /**
     * The data needed to update a SupportGroupMember.
     */
    data: XOR<SupportGroupMemberUpdateInput, SupportGroupMemberUncheckedUpdateInput>
    /**
     * Choose, which SupportGroupMember to update.
     */
    where: SupportGroupMemberWhereUniqueInput
  }

  /**
   * SupportGroupMember updateMany
   */
  export type SupportGroupMemberUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SupportGroupMembers.
     */
    data: XOR<SupportGroupMemberUpdateManyMutationInput, SupportGroupMemberUncheckedUpdateManyInput>
    /**
     * Filter which SupportGroupMembers to update
     */
    where?: SupportGroupMemberWhereInput
    /**
     * Limit how many SupportGroupMembers to update.
     */
    limit?: number
  }

  /**
   * SupportGroupMember updateManyAndReturn
   */
  export type SupportGroupMemberUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupMember
     */
    select?: SupportGroupMemberSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupMember
     */
    omit?: SupportGroupMemberOmit<ExtArgs> | null
    /**
     * The data used to update SupportGroupMembers.
     */
    data: XOR<SupportGroupMemberUpdateManyMutationInput, SupportGroupMemberUncheckedUpdateManyInput>
    /**
     * Filter which SupportGroupMembers to update
     */
    where?: SupportGroupMemberWhereInput
    /**
     * Limit how many SupportGroupMembers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupMemberIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupportGroupMember upsert
   */
  export type SupportGroupMemberUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupMember
     */
    select?: SupportGroupMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupMember
     */
    omit?: SupportGroupMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupMemberInclude<ExtArgs> | null
    /**
     * The filter to search for the SupportGroupMember to update in case it exists.
     */
    where: SupportGroupMemberWhereUniqueInput
    /**
     * In case the SupportGroupMember found by the `where` argument doesn't exist, create a new SupportGroupMember with this data.
     */
    create: XOR<SupportGroupMemberCreateInput, SupportGroupMemberUncheckedCreateInput>
    /**
     * In case the SupportGroupMember was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupportGroupMemberUpdateInput, SupportGroupMemberUncheckedUpdateInput>
  }

  /**
   * SupportGroupMember delete
   */
  export type SupportGroupMemberDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupMember
     */
    select?: SupportGroupMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupMember
     */
    omit?: SupportGroupMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupMemberInclude<ExtArgs> | null
    /**
     * Filter which SupportGroupMember to delete.
     */
    where: SupportGroupMemberWhereUniqueInput
  }

  /**
   * SupportGroupMember deleteMany
   */
  export type SupportGroupMemberDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupportGroupMembers to delete
     */
    where?: SupportGroupMemberWhereInput
    /**
     * Limit how many SupportGroupMembers to delete.
     */
    limit?: number
  }

  /**
   * SupportGroupMember without action
   */
  export type SupportGroupMemberDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupMember
     */
    select?: SupportGroupMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupMember
     */
    omit?: SupportGroupMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupMemberInclude<ExtArgs> | null
  }


  /**
   * Model SupportGroupPermission
   */

  export type AggregateSupportGroupPermission = {
    _count: SupportGroupPermissionCountAggregateOutputType | null
    _min: SupportGroupPermissionMinAggregateOutputType | null
    _max: SupportGroupPermissionMaxAggregateOutputType | null
  }

  export type SupportGroupPermissionMinAggregateOutputType = {
    id: string | null
    supportGroupId: string | null
    resource: string | null
    action: string | null
    scope: string | null
    isActive: boolean | null
    grantedAt: Date | null
    grantedBy: string | null
  }

  export type SupportGroupPermissionMaxAggregateOutputType = {
    id: string | null
    supportGroupId: string | null
    resource: string | null
    action: string | null
    scope: string | null
    isActive: boolean | null
    grantedAt: Date | null
    grantedBy: string | null
  }

  export type SupportGroupPermissionCountAggregateOutputType = {
    id: number
    supportGroupId: number
    resource: number
    action: number
    scope: number
    conditions: number
    isActive: number
    grantedAt: number
    grantedBy: number
    _all: number
  }


  export type SupportGroupPermissionMinAggregateInputType = {
    id?: true
    supportGroupId?: true
    resource?: true
    action?: true
    scope?: true
    isActive?: true
    grantedAt?: true
    grantedBy?: true
  }

  export type SupportGroupPermissionMaxAggregateInputType = {
    id?: true
    supportGroupId?: true
    resource?: true
    action?: true
    scope?: true
    isActive?: true
    grantedAt?: true
    grantedBy?: true
  }

  export type SupportGroupPermissionCountAggregateInputType = {
    id?: true
    supportGroupId?: true
    resource?: true
    action?: true
    scope?: true
    conditions?: true
    isActive?: true
    grantedAt?: true
    grantedBy?: true
    _all?: true
  }

  export type SupportGroupPermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupportGroupPermission to aggregate.
     */
    where?: SupportGroupPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportGroupPermissions to fetch.
     */
    orderBy?: SupportGroupPermissionOrderByWithRelationInput | SupportGroupPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupportGroupPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportGroupPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportGroupPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SupportGroupPermissions
    **/
    _count?: true | SupportGroupPermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupportGroupPermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupportGroupPermissionMaxAggregateInputType
  }

  export type GetSupportGroupPermissionAggregateType<T extends SupportGroupPermissionAggregateArgs> = {
        [P in keyof T & keyof AggregateSupportGroupPermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupportGroupPermission[P]>
      : GetScalarType<T[P], AggregateSupportGroupPermission[P]>
  }




  export type SupportGroupPermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupportGroupPermissionWhereInput
    orderBy?: SupportGroupPermissionOrderByWithAggregationInput | SupportGroupPermissionOrderByWithAggregationInput[]
    by: SupportGroupPermissionScalarFieldEnum[] | SupportGroupPermissionScalarFieldEnum
    having?: SupportGroupPermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupportGroupPermissionCountAggregateInputType | true
    _min?: SupportGroupPermissionMinAggregateInputType
    _max?: SupportGroupPermissionMaxAggregateInputType
  }

  export type SupportGroupPermissionGroupByOutputType = {
    id: string
    supportGroupId: string
    resource: string
    action: string
    scope: string | null
    conditions: JsonValue | null
    isActive: boolean
    grantedAt: Date
    grantedBy: string | null
    _count: SupportGroupPermissionCountAggregateOutputType | null
    _min: SupportGroupPermissionMinAggregateOutputType | null
    _max: SupportGroupPermissionMaxAggregateOutputType | null
  }

  type GetSupportGroupPermissionGroupByPayload<T extends SupportGroupPermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupportGroupPermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupportGroupPermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupportGroupPermissionGroupByOutputType[P]>
            : GetScalarType<T[P], SupportGroupPermissionGroupByOutputType[P]>
        }
      >
    >


  export type SupportGroupPermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supportGroupId?: boolean
    resource?: boolean
    action?: boolean
    scope?: boolean
    conditions?: boolean
    isActive?: boolean
    grantedAt?: boolean
    grantedBy?: boolean
    supportGroup?: boolean | SupportGroupDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supportGroupPermission"]>

  export type SupportGroupPermissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supportGroupId?: boolean
    resource?: boolean
    action?: boolean
    scope?: boolean
    conditions?: boolean
    isActive?: boolean
    grantedAt?: boolean
    grantedBy?: boolean
    supportGroup?: boolean | SupportGroupDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supportGroupPermission"]>

  export type SupportGroupPermissionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    supportGroupId?: boolean
    resource?: boolean
    action?: boolean
    scope?: boolean
    conditions?: boolean
    isActive?: boolean
    grantedAt?: boolean
    grantedBy?: boolean
    supportGroup?: boolean | SupportGroupDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supportGroupPermission"]>

  export type SupportGroupPermissionSelectScalar = {
    id?: boolean
    supportGroupId?: boolean
    resource?: boolean
    action?: boolean
    scope?: boolean
    conditions?: boolean
    isActive?: boolean
    grantedAt?: boolean
    grantedBy?: boolean
  }

  export type SupportGroupPermissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "supportGroupId" | "resource" | "action" | "scope" | "conditions" | "isActive" | "grantedAt" | "grantedBy", ExtArgs["result"]["supportGroupPermission"]>
  export type SupportGroupPermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supportGroup?: boolean | SupportGroupDefaultArgs<ExtArgs>
  }
  export type SupportGroupPermissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supportGroup?: boolean | SupportGroupDefaultArgs<ExtArgs>
  }
  export type SupportGroupPermissionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supportGroup?: boolean | SupportGroupDefaultArgs<ExtArgs>
  }

  export type $SupportGroupPermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SupportGroupPermission"
    objects: {
      supportGroup: Prisma.$SupportGroupPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      supportGroupId: string
      resource: string
      action: string
      scope: string | null
      conditions: Prisma.JsonValue | null
      isActive: boolean
      grantedAt: Date
      grantedBy: string | null
    }, ExtArgs["result"]["supportGroupPermission"]>
    composites: {}
  }

  type SupportGroupPermissionGetPayload<S extends boolean | null | undefined | SupportGroupPermissionDefaultArgs> = $Result.GetResult<Prisma.$SupportGroupPermissionPayload, S>

  type SupportGroupPermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupportGroupPermissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupportGroupPermissionCountAggregateInputType | true
    }

  export interface SupportGroupPermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SupportGroupPermission'], meta: { name: 'SupportGroupPermission' } }
    /**
     * Find zero or one SupportGroupPermission that matches the filter.
     * @param {SupportGroupPermissionFindUniqueArgs} args - Arguments to find a SupportGroupPermission
     * @example
     * // Get one SupportGroupPermission
     * const supportGroupPermission = await prisma.supportGroupPermission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupportGroupPermissionFindUniqueArgs>(args: SelectSubset<T, SupportGroupPermissionFindUniqueArgs<ExtArgs>>): Prisma__SupportGroupPermissionClient<$Result.GetResult<Prisma.$SupportGroupPermissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SupportGroupPermission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupportGroupPermissionFindUniqueOrThrowArgs} args - Arguments to find a SupportGroupPermission
     * @example
     * // Get one SupportGroupPermission
     * const supportGroupPermission = await prisma.supportGroupPermission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupportGroupPermissionFindUniqueOrThrowArgs>(args: SelectSubset<T, SupportGroupPermissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupportGroupPermissionClient<$Result.GetResult<Prisma.$SupportGroupPermissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupportGroupPermission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupPermissionFindFirstArgs} args - Arguments to find a SupportGroupPermission
     * @example
     * // Get one SupportGroupPermission
     * const supportGroupPermission = await prisma.supportGroupPermission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupportGroupPermissionFindFirstArgs>(args?: SelectSubset<T, SupportGroupPermissionFindFirstArgs<ExtArgs>>): Prisma__SupportGroupPermissionClient<$Result.GetResult<Prisma.$SupportGroupPermissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SupportGroupPermission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupPermissionFindFirstOrThrowArgs} args - Arguments to find a SupportGroupPermission
     * @example
     * // Get one SupportGroupPermission
     * const supportGroupPermission = await prisma.supportGroupPermission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupportGroupPermissionFindFirstOrThrowArgs>(args?: SelectSubset<T, SupportGroupPermissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupportGroupPermissionClient<$Result.GetResult<Prisma.$SupportGroupPermissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SupportGroupPermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupPermissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SupportGroupPermissions
     * const supportGroupPermissions = await prisma.supportGroupPermission.findMany()
     * 
     * // Get first 10 SupportGroupPermissions
     * const supportGroupPermissions = await prisma.supportGroupPermission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supportGroupPermissionWithIdOnly = await prisma.supportGroupPermission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupportGroupPermissionFindManyArgs>(args?: SelectSubset<T, SupportGroupPermissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportGroupPermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SupportGroupPermission.
     * @param {SupportGroupPermissionCreateArgs} args - Arguments to create a SupportGroupPermission.
     * @example
     * // Create one SupportGroupPermission
     * const SupportGroupPermission = await prisma.supportGroupPermission.create({
     *   data: {
     *     // ... data to create a SupportGroupPermission
     *   }
     * })
     * 
     */
    create<T extends SupportGroupPermissionCreateArgs>(args: SelectSubset<T, SupportGroupPermissionCreateArgs<ExtArgs>>): Prisma__SupportGroupPermissionClient<$Result.GetResult<Prisma.$SupportGroupPermissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SupportGroupPermissions.
     * @param {SupportGroupPermissionCreateManyArgs} args - Arguments to create many SupportGroupPermissions.
     * @example
     * // Create many SupportGroupPermissions
     * const supportGroupPermission = await prisma.supportGroupPermission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupportGroupPermissionCreateManyArgs>(args?: SelectSubset<T, SupportGroupPermissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SupportGroupPermissions and returns the data saved in the database.
     * @param {SupportGroupPermissionCreateManyAndReturnArgs} args - Arguments to create many SupportGroupPermissions.
     * @example
     * // Create many SupportGroupPermissions
     * const supportGroupPermission = await prisma.supportGroupPermission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SupportGroupPermissions and only return the `id`
     * const supportGroupPermissionWithIdOnly = await prisma.supportGroupPermission.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SupportGroupPermissionCreateManyAndReturnArgs>(args?: SelectSubset<T, SupportGroupPermissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportGroupPermissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SupportGroupPermission.
     * @param {SupportGroupPermissionDeleteArgs} args - Arguments to delete one SupportGroupPermission.
     * @example
     * // Delete one SupportGroupPermission
     * const SupportGroupPermission = await prisma.supportGroupPermission.delete({
     *   where: {
     *     // ... filter to delete one SupportGroupPermission
     *   }
     * })
     * 
     */
    delete<T extends SupportGroupPermissionDeleteArgs>(args: SelectSubset<T, SupportGroupPermissionDeleteArgs<ExtArgs>>): Prisma__SupportGroupPermissionClient<$Result.GetResult<Prisma.$SupportGroupPermissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SupportGroupPermission.
     * @param {SupportGroupPermissionUpdateArgs} args - Arguments to update one SupportGroupPermission.
     * @example
     * // Update one SupportGroupPermission
     * const supportGroupPermission = await prisma.supportGroupPermission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupportGroupPermissionUpdateArgs>(args: SelectSubset<T, SupportGroupPermissionUpdateArgs<ExtArgs>>): Prisma__SupportGroupPermissionClient<$Result.GetResult<Prisma.$SupportGroupPermissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SupportGroupPermissions.
     * @param {SupportGroupPermissionDeleteManyArgs} args - Arguments to filter SupportGroupPermissions to delete.
     * @example
     * // Delete a few SupportGroupPermissions
     * const { count } = await prisma.supportGroupPermission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupportGroupPermissionDeleteManyArgs>(args?: SelectSubset<T, SupportGroupPermissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupportGroupPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupPermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SupportGroupPermissions
     * const supportGroupPermission = await prisma.supportGroupPermission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupportGroupPermissionUpdateManyArgs>(args: SelectSubset<T, SupportGroupPermissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupportGroupPermissions and returns the data updated in the database.
     * @param {SupportGroupPermissionUpdateManyAndReturnArgs} args - Arguments to update many SupportGroupPermissions.
     * @example
     * // Update many SupportGroupPermissions
     * const supportGroupPermission = await prisma.supportGroupPermission.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SupportGroupPermissions and only return the `id`
     * const supportGroupPermissionWithIdOnly = await prisma.supportGroupPermission.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SupportGroupPermissionUpdateManyAndReturnArgs>(args: SelectSubset<T, SupportGroupPermissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportGroupPermissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SupportGroupPermission.
     * @param {SupportGroupPermissionUpsertArgs} args - Arguments to update or create a SupportGroupPermission.
     * @example
     * // Update or create a SupportGroupPermission
     * const supportGroupPermission = await prisma.supportGroupPermission.upsert({
     *   create: {
     *     // ... data to create a SupportGroupPermission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SupportGroupPermission we want to update
     *   }
     * })
     */
    upsert<T extends SupportGroupPermissionUpsertArgs>(args: SelectSubset<T, SupportGroupPermissionUpsertArgs<ExtArgs>>): Prisma__SupportGroupPermissionClient<$Result.GetResult<Prisma.$SupportGroupPermissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SupportGroupPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupPermissionCountArgs} args - Arguments to filter SupportGroupPermissions to count.
     * @example
     * // Count the number of SupportGroupPermissions
     * const count = await prisma.supportGroupPermission.count({
     *   where: {
     *     // ... the filter for the SupportGroupPermissions we want to count
     *   }
     * })
    **/
    count<T extends SupportGroupPermissionCountArgs>(
      args?: Subset<T, SupportGroupPermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupportGroupPermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SupportGroupPermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupPermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupportGroupPermissionAggregateArgs>(args: Subset<T, SupportGroupPermissionAggregateArgs>): Prisma.PrismaPromise<GetSupportGroupPermissionAggregateType<T>>

    /**
     * Group by SupportGroupPermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportGroupPermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupportGroupPermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupportGroupPermissionGroupByArgs['orderBy'] }
        : { orderBy?: SupportGroupPermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupportGroupPermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupportGroupPermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SupportGroupPermission model
   */
  readonly fields: SupportGroupPermissionFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for SupportGroupPermission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupportGroupPermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    supportGroup<T extends SupportGroupDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SupportGroupDefaultArgs<ExtArgs>>): Prisma__SupportGroupClient<$Result.GetResult<Prisma.$SupportGroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SupportGroupPermission model
   */
  interface SupportGroupPermissionFieldRefs {
    readonly id: FieldRef<"SupportGroupPermission", 'String'>
    readonly supportGroupId: FieldRef<"SupportGroupPermission", 'String'>
    readonly resource: FieldRef<"SupportGroupPermission", 'String'>
    readonly action: FieldRef<"SupportGroupPermission", 'String'>
    readonly scope: FieldRef<"SupportGroupPermission", 'String'>
    readonly conditions: FieldRef<"SupportGroupPermission", 'Json'>
    readonly isActive: FieldRef<"SupportGroupPermission", 'Boolean'>
    readonly grantedAt: FieldRef<"SupportGroupPermission", 'DateTime'>
    readonly grantedBy: FieldRef<"SupportGroupPermission", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SupportGroupPermission findUnique
   */
  export type SupportGroupPermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupPermission
     */
    select?: SupportGroupPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupPermission
     */
    omit?: SupportGroupPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupPermissionInclude<ExtArgs> | null
    /**
     * Filter, which SupportGroupPermission to fetch.
     */
    where: SupportGroupPermissionWhereUniqueInput
  }

  /**
   * SupportGroupPermission findUniqueOrThrow
   */
  export type SupportGroupPermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupPermission
     */
    select?: SupportGroupPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupPermission
     */
    omit?: SupportGroupPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupPermissionInclude<ExtArgs> | null
    /**
     * Filter, which SupportGroupPermission to fetch.
     */
    where: SupportGroupPermissionWhereUniqueInput
  }

  /**
   * SupportGroupPermission findFirst
   */
  export type SupportGroupPermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupPermission
     */
    select?: SupportGroupPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupPermission
     */
    omit?: SupportGroupPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupPermissionInclude<ExtArgs> | null
    /**
     * Filter, which SupportGroupPermission to fetch.
     */
    where?: SupportGroupPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportGroupPermissions to fetch.
     */
    orderBy?: SupportGroupPermissionOrderByWithRelationInput | SupportGroupPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupportGroupPermissions.
     */
    cursor?: SupportGroupPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportGroupPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportGroupPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupportGroupPermissions.
     */
    distinct?: SupportGroupPermissionScalarFieldEnum | SupportGroupPermissionScalarFieldEnum[]
  }

  /**
   * SupportGroupPermission findFirstOrThrow
   */
  export type SupportGroupPermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupPermission
     */
    select?: SupportGroupPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupPermission
     */
    omit?: SupportGroupPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupPermissionInclude<ExtArgs> | null
    /**
     * Filter, which SupportGroupPermission to fetch.
     */
    where?: SupportGroupPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportGroupPermissions to fetch.
     */
    orderBy?: SupportGroupPermissionOrderByWithRelationInput | SupportGroupPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupportGroupPermissions.
     */
    cursor?: SupportGroupPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportGroupPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportGroupPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupportGroupPermissions.
     */
    distinct?: SupportGroupPermissionScalarFieldEnum | SupportGroupPermissionScalarFieldEnum[]
  }

  /**
   * SupportGroupPermission findMany
   */
  export type SupportGroupPermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupPermission
     */
    select?: SupportGroupPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupPermission
     */
    omit?: SupportGroupPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupPermissionInclude<ExtArgs> | null
    /**
     * Filter, which SupportGroupPermissions to fetch.
     */
    where?: SupportGroupPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportGroupPermissions to fetch.
     */
    orderBy?: SupportGroupPermissionOrderByWithRelationInput | SupportGroupPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SupportGroupPermissions.
     */
    cursor?: SupportGroupPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportGroupPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportGroupPermissions.
     */
    skip?: number
    distinct?: SupportGroupPermissionScalarFieldEnum | SupportGroupPermissionScalarFieldEnum[]
  }

  /**
   * SupportGroupPermission create
   */
  export type SupportGroupPermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupPermission
     */
    select?: SupportGroupPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupPermission
     */
    omit?: SupportGroupPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupPermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a SupportGroupPermission.
     */
    data: XOR<SupportGroupPermissionCreateInput, SupportGroupPermissionUncheckedCreateInput>
  }

  /**
   * SupportGroupPermission createMany
   */
  export type SupportGroupPermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SupportGroupPermissions.
     */
    data: SupportGroupPermissionCreateManyInput | SupportGroupPermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SupportGroupPermission createManyAndReturn
   */
  export type SupportGroupPermissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupPermission
     */
    select?: SupportGroupPermissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupPermission
     */
    omit?: SupportGroupPermissionOmit<ExtArgs> | null
    /**
     * The data used to create many SupportGroupPermissions.
     */
    data: SupportGroupPermissionCreateManyInput | SupportGroupPermissionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupPermissionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupportGroupPermission update
   */
  export type SupportGroupPermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupPermission
     */
    select?: SupportGroupPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupPermission
     */
    omit?: SupportGroupPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupPermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a SupportGroupPermission.
     */
    data: XOR<SupportGroupPermissionUpdateInput, SupportGroupPermissionUncheckedUpdateInput>
    /**
     * Choose, which SupportGroupPermission to update.
     */
    where: SupportGroupPermissionWhereUniqueInput
  }

  /**
   * SupportGroupPermission updateMany
   */
  export type SupportGroupPermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SupportGroupPermissions.
     */
    data: XOR<SupportGroupPermissionUpdateManyMutationInput, SupportGroupPermissionUncheckedUpdateManyInput>
    /**
     * Filter which SupportGroupPermissions to update
     */
    where?: SupportGroupPermissionWhereInput
    /**
     * Limit how many SupportGroupPermissions to update.
     */
    limit?: number
  }

  /**
   * SupportGroupPermission updateManyAndReturn
   */
  export type SupportGroupPermissionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupPermission
     */
    select?: SupportGroupPermissionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupPermission
     */
    omit?: SupportGroupPermissionOmit<ExtArgs> | null
    /**
     * The data used to update SupportGroupPermissions.
     */
    data: XOR<SupportGroupPermissionUpdateManyMutationInput, SupportGroupPermissionUncheckedUpdateManyInput>
    /**
     * Filter which SupportGroupPermissions to update
     */
    where?: SupportGroupPermissionWhereInput
    /**
     * Limit how many SupportGroupPermissions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupPermissionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SupportGroupPermission upsert
   */
  export type SupportGroupPermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupPermission
     */
    select?: SupportGroupPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupPermission
     */
    omit?: SupportGroupPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupPermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the SupportGroupPermission to update in case it exists.
     */
    where: SupportGroupPermissionWhereUniqueInput
    /**
     * In case the SupportGroupPermission found by the `where` argument doesn't exist, create a new SupportGroupPermission with this data.
     */
    create: XOR<SupportGroupPermissionCreateInput, SupportGroupPermissionUncheckedCreateInput>
    /**
     * In case the SupportGroupPermission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupportGroupPermissionUpdateInput, SupportGroupPermissionUncheckedUpdateInput>
  }

  /**
   * SupportGroupPermission delete
   */
  export type SupportGroupPermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupPermission
     */
    select?: SupportGroupPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupPermission
     */
    omit?: SupportGroupPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupPermissionInclude<ExtArgs> | null
    /**
     * Filter which SupportGroupPermission to delete.
     */
    where: SupportGroupPermissionWhereUniqueInput
  }

  /**
   * SupportGroupPermission deleteMany
   */
  export type SupportGroupPermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupportGroupPermissions to delete
     */
    where?: SupportGroupPermissionWhereInput
    /**
     * Limit how many SupportGroupPermissions to delete.
     */
    limit?: number
  }

  /**
   * SupportGroupPermission without action
   */
  export type SupportGroupPermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroupPermission
     */
    select?: SupportGroupPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroupPermission
     */
    omit?: SupportGroupPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupPermissionInclude<ExtArgs> | null
  }


  /**
   * Model CiOwnership
   */

  export type AggregateCiOwnership = {
    _count: CiOwnershipCountAggregateOutputType | null
    _min: CiOwnershipMinAggregateOutputType | null
    _max: CiOwnershipMaxAggregateOutputType | null
  }

  export type CiOwnershipMinAggregateOutputType = {
    id: string | null
    ciId: string | null
    ownershipType: string | null
    userId: string | null
    supportGroupId: string | null
    isPrimary: boolean | null
    isActive: boolean | null
    startDate: Date | null
    endDate: Date | null
    assignedAt: Date | null
    assignedBy: string | null
  }

  export type CiOwnershipMaxAggregateOutputType = {
    id: string | null
    ciId: string | null
    ownershipType: string | null
    userId: string | null
    supportGroupId: string | null
    isPrimary: boolean | null
    isActive: boolean | null
    startDate: Date | null
    endDate: Date | null
    assignedAt: Date | null
    assignedBy: string | null
  }

  export type CiOwnershipCountAggregateOutputType = {
    id: number
    ciId: number
    ownershipType: number
    userId: number
    supportGroupId: number
    isPrimary: number
    isActive: number
    startDate: number
    endDate: number
    responsibilities: number
    assignedAt: number
    assignedBy: number
    _all: number
  }


  export type CiOwnershipMinAggregateInputType = {
    id?: true
    ciId?: true
    ownershipType?: true
    userId?: true
    supportGroupId?: true
    isPrimary?: true
    isActive?: true
    startDate?: true
    endDate?: true
    assignedAt?: true
    assignedBy?: true
  }

  export type CiOwnershipMaxAggregateInputType = {
    id?: true
    ciId?: true
    ownershipType?: true
    userId?: true
    supportGroupId?: true
    isPrimary?: true
    isActive?: true
    startDate?: true
    endDate?: true
    assignedAt?: true
    assignedBy?: true
  }

  export type CiOwnershipCountAggregateInputType = {
    id?: true
    ciId?: true
    ownershipType?: true
    userId?: true
    supportGroupId?: true
    isPrimary?: true
    isActive?: true
    startDate?: true
    endDate?: true
    responsibilities?: true
    assignedAt?: true
    assignedBy?: true
    _all?: true
  }

  export type CiOwnershipAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CiOwnership to aggregate.
     */
    where?: CiOwnershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiOwnerships to fetch.
     */
    orderBy?: CiOwnershipOrderByWithRelationInput | CiOwnershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CiOwnershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiOwnerships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiOwnerships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CiOwnerships
    **/
    _count?: true | CiOwnershipCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CiOwnershipMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CiOwnershipMaxAggregateInputType
  }

  export type GetCiOwnershipAggregateType<T extends CiOwnershipAggregateArgs> = {
        [P in keyof T & keyof AggregateCiOwnership]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCiOwnership[P]>
      : GetScalarType<T[P], AggregateCiOwnership[P]>
  }




  export type CiOwnershipGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CiOwnershipWhereInput
    orderBy?: CiOwnershipOrderByWithAggregationInput | CiOwnershipOrderByWithAggregationInput[]
    by: CiOwnershipScalarFieldEnum[] | CiOwnershipScalarFieldEnum
    having?: CiOwnershipScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CiOwnershipCountAggregateInputType | true
    _min?: CiOwnershipMinAggregateInputType
    _max?: CiOwnershipMaxAggregateInputType
  }

  export type CiOwnershipGroupByOutputType = {
    id: string
    ciId: string
    ownershipType: string
    userId: string
    supportGroupId: string | null
    isPrimary: boolean
    isActive: boolean
    startDate: Date | null
    endDate: Date | null
    responsibilities: string[]
    assignedAt: Date
    assignedBy: string | null
    _count: CiOwnershipCountAggregateOutputType | null
    _min: CiOwnershipMinAggregateOutputType | null
    _max: CiOwnershipMaxAggregateOutputType | null
  }

  type GetCiOwnershipGroupByPayload<T extends CiOwnershipGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CiOwnershipGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CiOwnershipGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CiOwnershipGroupByOutputType[P]>
            : GetScalarType<T[P], CiOwnershipGroupByOutputType[P]>
        }
      >
    >


  export type CiOwnershipSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ciId?: boolean
    ownershipType?: boolean
    userId?: boolean
    supportGroupId?: boolean
    isPrimary?: boolean
    isActive?: boolean
    startDate?: boolean
    endDate?: boolean
    responsibilities?: boolean
    assignedAt?: boolean
    assignedBy?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    supportGroup?: boolean | CiOwnership$supportGroupArgs<ExtArgs>
  }, ExtArgs["result"]["ciOwnership"]>

  export type CiOwnershipSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ciId?: boolean
    ownershipType?: boolean
    userId?: boolean
    supportGroupId?: boolean
    isPrimary?: boolean
    isActive?: boolean
    startDate?: boolean
    endDate?: boolean
    responsibilities?: boolean
    assignedAt?: boolean
    assignedBy?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    supportGroup?: boolean | CiOwnership$supportGroupArgs<ExtArgs>
  }, ExtArgs["result"]["ciOwnership"]>

  export type CiOwnershipSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ciId?: boolean
    ownershipType?: boolean
    userId?: boolean
    supportGroupId?: boolean
    isPrimary?: boolean
    isActive?: boolean
    startDate?: boolean
    endDate?: boolean
    responsibilities?: boolean
    assignedAt?: boolean
    assignedBy?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    supportGroup?: boolean | CiOwnership$supportGroupArgs<ExtArgs>
  }, ExtArgs["result"]["ciOwnership"]>

  export type CiOwnershipSelectScalar = {
    id?: boolean
    ciId?: boolean
    ownershipType?: boolean
    userId?: boolean
    supportGroupId?: boolean
    isPrimary?: boolean
    isActive?: boolean
    startDate?: boolean
    endDate?: boolean
    responsibilities?: boolean
    assignedAt?: boolean
    assignedBy?: boolean
  }

  export type CiOwnershipOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "ciId" | "ownershipType" | "userId" | "supportGroupId" | "isPrimary" | "isActive" | "startDate" | "endDate" | "responsibilities" | "assignedAt" | "assignedBy", ExtArgs["result"]["ciOwnership"]>
  export type CiOwnershipInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    supportGroup?: boolean | CiOwnership$supportGroupArgs<ExtArgs>
  }
  export type CiOwnershipIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    supportGroup?: boolean | CiOwnership$supportGroupArgs<ExtArgs>
  }
  export type CiOwnershipIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
    supportGroup?: boolean | CiOwnership$supportGroupArgs<ExtArgs>
  }

  export type $CiOwnershipPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CiOwnership"
    objects: {
      configurationItem: Prisma.$ConfigurationItemPayload<ExtArgs>
      supportGroup: Prisma.$SupportGroupPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      ciId: string
      ownershipType: string
      userId: string
      supportGroupId: string | null
      isPrimary: boolean
      isActive: boolean
      startDate: Date | null
      endDate: Date | null
      responsibilities: string[]
      assignedAt: Date
      assignedBy: string | null
    }, ExtArgs["result"]["ciOwnership"]>
    composites: {}
  }

  type CiOwnershipGetPayload<S extends boolean | null | undefined | CiOwnershipDefaultArgs> = $Result.GetResult<Prisma.$CiOwnershipPayload, S>

  type CiOwnershipCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CiOwnershipFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CiOwnershipCountAggregateInputType | true
    }

  export interface CiOwnershipDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CiOwnership'], meta: { name: 'CiOwnership' } }
    /**
     * Find zero or one CiOwnership that matches the filter.
     * @param {CiOwnershipFindUniqueArgs} args - Arguments to find a CiOwnership
     * @example
     * // Get one CiOwnership
     * const ciOwnership = await prisma.ciOwnership.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CiOwnershipFindUniqueArgs>(args: SelectSubset<T, CiOwnershipFindUniqueArgs<ExtArgs>>): Prisma__CiOwnershipClient<$Result.GetResult<Prisma.$CiOwnershipPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CiOwnership that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CiOwnershipFindUniqueOrThrowArgs} args - Arguments to find a CiOwnership
     * @example
     * // Get one CiOwnership
     * const ciOwnership = await prisma.ciOwnership.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CiOwnershipFindUniqueOrThrowArgs>(args: SelectSubset<T, CiOwnershipFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CiOwnershipClient<$Result.GetResult<Prisma.$CiOwnershipPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CiOwnership that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiOwnershipFindFirstArgs} args - Arguments to find a CiOwnership
     * @example
     * // Get one CiOwnership
     * const ciOwnership = await prisma.ciOwnership.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CiOwnershipFindFirstArgs>(args?: SelectSubset<T, CiOwnershipFindFirstArgs<ExtArgs>>): Prisma__CiOwnershipClient<$Result.GetResult<Prisma.$CiOwnershipPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CiOwnership that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiOwnershipFindFirstOrThrowArgs} args - Arguments to find a CiOwnership
     * @example
     * // Get one CiOwnership
     * const ciOwnership = await prisma.ciOwnership.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CiOwnershipFindFirstOrThrowArgs>(args?: SelectSubset<T, CiOwnershipFindFirstOrThrowArgs<ExtArgs>>): Prisma__CiOwnershipClient<$Result.GetResult<Prisma.$CiOwnershipPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CiOwnerships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiOwnershipFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CiOwnerships
     * const ciOwnerships = await prisma.ciOwnership.findMany()
     * 
     * // Get first 10 CiOwnerships
     * const ciOwnerships = await prisma.ciOwnership.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ciOwnershipWithIdOnly = await prisma.ciOwnership.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CiOwnershipFindManyArgs>(args?: SelectSubset<T, CiOwnershipFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiOwnershipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CiOwnership.
     * @param {CiOwnershipCreateArgs} args - Arguments to create a CiOwnership.
     * @example
     * // Create one CiOwnership
     * const CiOwnership = await prisma.ciOwnership.create({
     *   data: {
     *     // ... data to create a CiOwnership
     *   }
     * })
     * 
     */
    create<T extends CiOwnershipCreateArgs>(args: SelectSubset<T, CiOwnershipCreateArgs<ExtArgs>>): Prisma__CiOwnershipClient<$Result.GetResult<Prisma.$CiOwnershipPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CiOwnerships.
     * @param {CiOwnershipCreateManyArgs} args - Arguments to create many CiOwnerships.
     * @example
     * // Create many CiOwnerships
     * const ciOwnership = await prisma.ciOwnership.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CiOwnershipCreateManyArgs>(args?: SelectSubset<T, CiOwnershipCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CiOwnerships and returns the data saved in the database.
     * @param {CiOwnershipCreateManyAndReturnArgs} args - Arguments to create many CiOwnerships.
     * @example
     * // Create many CiOwnerships
     * const ciOwnership = await prisma.ciOwnership.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CiOwnerships and only return the `id`
     * const ciOwnershipWithIdOnly = await prisma.ciOwnership.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CiOwnershipCreateManyAndReturnArgs>(args?: SelectSubset<T, CiOwnershipCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiOwnershipPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CiOwnership.
     * @param {CiOwnershipDeleteArgs} args - Arguments to delete one CiOwnership.
     * @example
     * // Delete one CiOwnership
     * const CiOwnership = await prisma.ciOwnership.delete({
     *   where: {
     *     // ... filter to delete one CiOwnership
     *   }
     * })
     * 
     */
    delete<T extends CiOwnershipDeleteArgs>(args: SelectSubset<T, CiOwnershipDeleteArgs<ExtArgs>>): Prisma__CiOwnershipClient<$Result.GetResult<Prisma.$CiOwnershipPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CiOwnership.
     * @param {CiOwnershipUpdateArgs} args - Arguments to update one CiOwnership.
     * @example
     * // Update one CiOwnership
     * const ciOwnership = await prisma.ciOwnership.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CiOwnershipUpdateArgs>(args: SelectSubset<T, CiOwnershipUpdateArgs<ExtArgs>>): Prisma__CiOwnershipClient<$Result.GetResult<Prisma.$CiOwnershipPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CiOwnerships.
     * @param {CiOwnershipDeleteManyArgs} args - Arguments to filter CiOwnerships to delete.
     * @example
     * // Delete a few CiOwnerships
     * const { count } = await prisma.ciOwnership.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CiOwnershipDeleteManyArgs>(args?: SelectSubset<T, CiOwnershipDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CiOwnerships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiOwnershipUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CiOwnerships
     * const ciOwnership = await prisma.ciOwnership.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CiOwnershipUpdateManyArgs>(args: SelectSubset<T, CiOwnershipUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CiOwnerships and returns the data updated in the database.
     * @param {CiOwnershipUpdateManyAndReturnArgs} args - Arguments to update many CiOwnerships.
     * @example
     * // Update many CiOwnerships
     * const ciOwnership = await prisma.ciOwnership.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CiOwnerships and only return the `id`
     * const ciOwnershipWithIdOnly = await prisma.ciOwnership.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CiOwnershipUpdateManyAndReturnArgs>(args: SelectSubset<T, CiOwnershipUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CiOwnershipPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CiOwnership.
     * @param {CiOwnershipUpsertArgs} args - Arguments to update or create a CiOwnership.
     * @example
     * // Update or create a CiOwnership
     * const ciOwnership = await prisma.ciOwnership.upsert({
     *   create: {
     *     // ... data to create a CiOwnership
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CiOwnership we want to update
     *   }
     * })
     */
    upsert<T extends CiOwnershipUpsertArgs>(args: SelectSubset<T, CiOwnershipUpsertArgs<ExtArgs>>): Prisma__CiOwnershipClient<$Result.GetResult<Prisma.$CiOwnershipPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CiOwnerships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiOwnershipCountArgs} args - Arguments to filter CiOwnerships to count.
     * @example
     * // Count the number of CiOwnerships
     * const count = await prisma.ciOwnership.count({
     *   where: {
     *     // ... the filter for the CiOwnerships we want to count
     *   }
     * })
    **/
    count<T extends CiOwnershipCountArgs>(
      args?: Subset<T, CiOwnershipCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CiOwnershipCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CiOwnership.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiOwnershipAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CiOwnershipAggregateArgs>(args: Subset<T, CiOwnershipAggregateArgs>): Prisma.PrismaPromise<GetCiOwnershipAggregateType<T>>

    /**
     * Group by CiOwnership.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CiOwnershipGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CiOwnershipGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CiOwnershipGroupByArgs['orderBy'] }
        : { orderBy?: CiOwnershipGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CiOwnershipGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCiOwnershipGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CiOwnership model
   */
  readonly fields: CiOwnershipFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for CiOwnership.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CiOwnershipClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    configurationItem<T extends ConfigurationItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItemDefaultArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    supportGroup<T extends CiOwnership$supportGroupArgs<ExtArgs> = {}>(args?: Subset<T, CiOwnership$supportGroupArgs<ExtArgs>>): Prisma__SupportGroupClient<$Result.GetResult<Prisma.$SupportGroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CiOwnership model
   */
  interface CiOwnershipFieldRefs {
    readonly id: FieldRef<"CiOwnership", 'String'>
    readonly ciId: FieldRef<"CiOwnership", 'String'>
    readonly ownershipType: FieldRef<"CiOwnership", 'String'>
    readonly userId: FieldRef<"CiOwnership", 'String'>
    readonly supportGroupId: FieldRef<"CiOwnership", 'String'>
    readonly isPrimary: FieldRef<"CiOwnership", 'Boolean'>
    readonly isActive: FieldRef<"CiOwnership", 'Boolean'>
    readonly startDate: FieldRef<"CiOwnership", 'DateTime'>
    readonly endDate: FieldRef<"CiOwnership", 'DateTime'>
    readonly responsibilities: FieldRef<"CiOwnership", 'String[]'>
    readonly assignedAt: FieldRef<"CiOwnership", 'DateTime'>
    readonly assignedBy: FieldRef<"CiOwnership", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CiOwnership findUnique
   */
  export type CiOwnershipFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiOwnership
     */
    select?: CiOwnershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiOwnership
     */
    omit?: CiOwnershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiOwnershipInclude<ExtArgs> | null
    /**
     * Filter, which CiOwnership to fetch.
     */
    where: CiOwnershipWhereUniqueInput
  }

  /**
   * CiOwnership findUniqueOrThrow
   */
  export type CiOwnershipFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiOwnership
     */
    select?: CiOwnershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiOwnership
     */
    omit?: CiOwnershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiOwnershipInclude<ExtArgs> | null
    /**
     * Filter, which CiOwnership to fetch.
     */
    where: CiOwnershipWhereUniqueInput
  }

  /**
   * CiOwnership findFirst
   */
  export type CiOwnershipFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiOwnership
     */
    select?: CiOwnershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiOwnership
     */
    omit?: CiOwnershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiOwnershipInclude<ExtArgs> | null
    /**
     * Filter, which CiOwnership to fetch.
     */
    where?: CiOwnershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiOwnerships to fetch.
     */
    orderBy?: CiOwnershipOrderByWithRelationInput | CiOwnershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CiOwnerships.
     */
    cursor?: CiOwnershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiOwnerships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiOwnerships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CiOwnerships.
     */
    distinct?: CiOwnershipScalarFieldEnum | CiOwnershipScalarFieldEnum[]
  }

  /**
   * CiOwnership findFirstOrThrow
   */
  export type CiOwnershipFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiOwnership
     */
    select?: CiOwnershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiOwnership
     */
    omit?: CiOwnershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiOwnershipInclude<ExtArgs> | null
    /**
     * Filter, which CiOwnership to fetch.
     */
    where?: CiOwnershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiOwnerships to fetch.
     */
    orderBy?: CiOwnershipOrderByWithRelationInput | CiOwnershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CiOwnerships.
     */
    cursor?: CiOwnershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiOwnerships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiOwnerships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CiOwnerships.
     */
    distinct?: CiOwnershipScalarFieldEnum | CiOwnershipScalarFieldEnum[]
  }

  /**
   * CiOwnership findMany
   */
  export type CiOwnershipFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiOwnership
     */
    select?: CiOwnershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiOwnership
     */
    omit?: CiOwnershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiOwnershipInclude<ExtArgs> | null
    /**
     * Filter, which CiOwnerships to fetch.
     */
    where?: CiOwnershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CiOwnerships to fetch.
     */
    orderBy?: CiOwnershipOrderByWithRelationInput | CiOwnershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CiOwnerships.
     */
    cursor?: CiOwnershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CiOwnerships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CiOwnerships.
     */
    skip?: number
    distinct?: CiOwnershipScalarFieldEnum | CiOwnershipScalarFieldEnum[]
  }

  /**
   * CiOwnership create
   */
  export type CiOwnershipCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiOwnership
     */
    select?: CiOwnershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiOwnership
     */
    omit?: CiOwnershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiOwnershipInclude<ExtArgs> | null
    /**
     * The data needed to create a CiOwnership.
     */
    data: XOR<CiOwnershipCreateInput, CiOwnershipUncheckedCreateInput>
  }

  /**
   * CiOwnership createMany
   */
  export type CiOwnershipCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CiOwnerships.
     */
    data: CiOwnershipCreateManyInput | CiOwnershipCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CiOwnership createManyAndReturn
   */
  export type CiOwnershipCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiOwnership
     */
    select?: CiOwnershipSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CiOwnership
     */
    omit?: CiOwnershipOmit<ExtArgs> | null
    /**
     * The data used to create many CiOwnerships.
     */
    data: CiOwnershipCreateManyInput | CiOwnershipCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiOwnershipIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CiOwnership update
   */
  export type CiOwnershipUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiOwnership
     */
    select?: CiOwnershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiOwnership
     */
    omit?: CiOwnershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiOwnershipInclude<ExtArgs> | null
    /**
     * The data needed to update a CiOwnership.
     */
    data: XOR<CiOwnershipUpdateInput, CiOwnershipUncheckedUpdateInput>
    /**
     * Choose, which CiOwnership to update.
     */
    where: CiOwnershipWhereUniqueInput
  }

  /**
   * CiOwnership updateMany
   */
  export type CiOwnershipUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CiOwnerships.
     */
    data: XOR<CiOwnershipUpdateManyMutationInput, CiOwnershipUncheckedUpdateManyInput>
    /**
     * Filter which CiOwnerships to update
     */
    where?: CiOwnershipWhereInput
    /**
     * Limit how many CiOwnerships to update.
     */
    limit?: number
  }

  /**
   * CiOwnership updateManyAndReturn
   */
  export type CiOwnershipUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiOwnership
     */
    select?: CiOwnershipSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CiOwnership
     */
    omit?: CiOwnershipOmit<ExtArgs> | null
    /**
     * The data used to update CiOwnerships.
     */
    data: XOR<CiOwnershipUpdateManyMutationInput, CiOwnershipUncheckedUpdateManyInput>
    /**
     * Filter which CiOwnerships to update
     */
    where?: CiOwnershipWhereInput
    /**
     * Limit how many CiOwnerships to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiOwnershipIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CiOwnership upsert
   */
  export type CiOwnershipUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiOwnership
     */
    select?: CiOwnershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiOwnership
     */
    omit?: CiOwnershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiOwnershipInclude<ExtArgs> | null
    /**
     * The filter to search for the CiOwnership to update in case it exists.
     */
    where: CiOwnershipWhereUniqueInput
    /**
     * In case the CiOwnership found by the `where` argument doesn't exist, create a new CiOwnership with this data.
     */
    create: XOR<CiOwnershipCreateInput, CiOwnershipUncheckedCreateInput>
    /**
     * In case the CiOwnership was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CiOwnershipUpdateInput, CiOwnershipUncheckedUpdateInput>
  }

  /**
   * CiOwnership delete
   */
  export type CiOwnershipDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiOwnership
     */
    select?: CiOwnershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiOwnership
     */
    omit?: CiOwnershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiOwnershipInclude<ExtArgs> | null
    /**
     * Filter which CiOwnership to delete.
     */
    where: CiOwnershipWhereUniqueInput
  }

  /**
   * CiOwnership deleteMany
   */
  export type CiOwnershipDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CiOwnerships to delete
     */
    where?: CiOwnershipWhereInput
    /**
     * Limit how many CiOwnerships to delete.
     */
    limit?: number
  }

  /**
   * CiOwnership.supportGroup
   */
  export type CiOwnership$supportGroupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportGroup
     */
    select?: SupportGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SupportGroup
     */
    omit?: SupportGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportGroupInclude<ExtArgs> | null
    where?: SupportGroupWhereInput
  }

  /**
   * CiOwnership without action
   */
  export type CiOwnershipDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CiOwnership
     */
    select?: CiOwnershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CiOwnership
     */
    omit?: CiOwnershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CiOwnershipInclude<ExtArgs> | null
  }


  /**
   * Model CmdbInventoryMapping
   */

  export type AggregateCmdbInventoryMapping = {
    _count: CmdbInventoryMappingCountAggregateOutputType | null
    _avg: CmdbInventoryMappingAvgAggregateOutputType | null
    _sum: CmdbInventoryMappingSumAggregateOutputType | null
    _min: CmdbInventoryMappingMinAggregateOutputType | null
    _max: CmdbInventoryMappingMaxAggregateOutputType | null
  }

  export type CmdbInventoryMappingAvgAggregateOutputType = {
    inventoryAssetId: number | null
  }

  export type CmdbInventoryMappingSumAggregateOutputType = {
    inventoryAssetId: number | null
  }

  export type CmdbInventoryMappingMinAggregateOutputType = {
    id: string | null
    ciId: string | null
    inventoryAssetId: number | null
    mappingType: string | null
    relationship: string | null
    syncEnabled: boolean | null
    lastSyncAt: Date | null
    syncStatus: string | null
    syncErrors: string | null
    conflictResolution: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type CmdbInventoryMappingMaxAggregateOutputType = {
    id: string | null
    ciId: string | null
    inventoryAssetId: number | null
    mappingType: string | null
    relationship: string | null
    syncEnabled: boolean | null
    lastSyncAt: Date | null
    syncStatus: string | null
    syncErrors: string | null
    conflictResolution: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type CmdbInventoryMappingCountAggregateOutputType = {
    id: number
    ciId: number
    inventoryAssetId: number
    mappingType: number
    relationship: number
    syncEnabled: number
    lastSyncAt: number
    syncStatus: number
    syncErrors: number
    conflictResolution: number
    fieldMapping: number
    createdAt: number
    updatedAt: number
    createdBy: number
    _all: number
  }


  export type CmdbInventoryMappingAvgAggregateInputType = {
    inventoryAssetId?: true
  }

  export type CmdbInventoryMappingSumAggregateInputType = {
    inventoryAssetId?: true
  }

  export type CmdbInventoryMappingMinAggregateInputType = {
    id?: true
    ciId?: true
    inventoryAssetId?: true
    mappingType?: true
    relationship?: true
    syncEnabled?: true
    lastSyncAt?: true
    syncStatus?: true
    syncErrors?: true
    conflictResolution?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type CmdbInventoryMappingMaxAggregateInputType = {
    id?: true
    ciId?: true
    inventoryAssetId?: true
    mappingType?: true
    relationship?: true
    syncEnabled?: true
    lastSyncAt?: true
    syncStatus?: true
    syncErrors?: true
    conflictResolution?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type CmdbInventoryMappingCountAggregateInputType = {
    id?: true
    ciId?: true
    inventoryAssetId?: true
    mappingType?: true
    relationship?: true
    syncEnabled?: true
    lastSyncAt?: true
    syncStatus?: true
    syncErrors?: true
    conflictResolution?: true
    fieldMapping?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    _all?: true
  }

  export type CmdbInventoryMappingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CmdbInventoryMapping to aggregate.
     */
    where?: CmdbInventoryMappingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CmdbInventoryMappings to fetch.
     */
    orderBy?: CmdbInventoryMappingOrderByWithRelationInput | CmdbInventoryMappingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CmdbInventoryMappingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CmdbInventoryMappings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CmdbInventoryMappings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CmdbInventoryMappings
    **/
    _count?: true | CmdbInventoryMappingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CmdbInventoryMappingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CmdbInventoryMappingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CmdbInventoryMappingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CmdbInventoryMappingMaxAggregateInputType
  }

  export type GetCmdbInventoryMappingAggregateType<T extends CmdbInventoryMappingAggregateArgs> = {
        [P in keyof T & keyof AggregateCmdbInventoryMapping]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCmdbInventoryMapping[P]>
      : GetScalarType<T[P], AggregateCmdbInventoryMapping[P]>
  }




  export type CmdbInventoryMappingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CmdbInventoryMappingWhereInput
    orderBy?: CmdbInventoryMappingOrderByWithAggregationInput | CmdbInventoryMappingOrderByWithAggregationInput[]
    by: CmdbInventoryMappingScalarFieldEnum[] | CmdbInventoryMappingScalarFieldEnum
    having?: CmdbInventoryMappingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CmdbInventoryMappingCountAggregateInputType | true
    _avg?: CmdbInventoryMappingAvgAggregateInputType
    _sum?: CmdbInventoryMappingSumAggregateInputType
    _min?: CmdbInventoryMappingMinAggregateInputType
    _max?: CmdbInventoryMappingMaxAggregateInputType
  }

  export type CmdbInventoryMappingGroupByOutputType = {
    id: string
    ciId: string
    inventoryAssetId: number
    mappingType: string
    relationship: string | null
    syncEnabled: boolean
    lastSyncAt: Date | null
    syncStatus: string | null
    syncErrors: string | null
    conflictResolution: string
    fieldMapping: JsonValue | null
    createdAt: Date
    updatedAt: Date
    createdBy: string | null
    _count: CmdbInventoryMappingCountAggregateOutputType | null
    _avg: CmdbInventoryMappingAvgAggregateOutputType | null
    _sum: CmdbInventoryMappingSumAggregateOutputType | null
    _min: CmdbInventoryMappingMinAggregateOutputType | null
    _max: CmdbInventoryMappingMaxAggregateOutputType | null
  }

  type GetCmdbInventoryMappingGroupByPayload<T extends CmdbInventoryMappingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CmdbInventoryMappingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CmdbInventoryMappingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CmdbInventoryMappingGroupByOutputType[P]>
            : GetScalarType<T[P], CmdbInventoryMappingGroupByOutputType[P]>
        }
      >
    >


  export type CmdbInventoryMappingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ciId?: boolean
    inventoryAssetId?: boolean
    mappingType?: boolean
    relationship?: boolean
    syncEnabled?: boolean
    lastSyncAt?: boolean
    syncStatus?: boolean
    syncErrors?: boolean
    conflictResolution?: boolean
    fieldMapping?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cmdbInventoryMapping"]>

  export type CmdbInventoryMappingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ciId?: boolean
    inventoryAssetId?: boolean
    mappingType?: boolean
    relationship?: boolean
    syncEnabled?: boolean
    lastSyncAt?: boolean
    syncStatus?: boolean
    syncErrors?: boolean
    conflictResolution?: boolean
    fieldMapping?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cmdbInventoryMapping"]>

  export type CmdbInventoryMappingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ciId?: boolean
    inventoryAssetId?: boolean
    mappingType?: boolean
    relationship?: boolean
    syncEnabled?: boolean
    lastSyncAt?: boolean
    syncStatus?: boolean
    syncErrors?: boolean
    conflictResolution?: boolean
    fieldMapping?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cmdbInventoryMapping"]>

  export type CmdbInventoryMappingSelectScalar = {
    id?: boolean
    ciId?: boolean
    inventoryAssetId?: boolean
    mappingType?: boolean
    relationship?: boolean
    syncEnabled?: boolean
    lastSyncAt?: boolean
    syncStatus?: boolean
    syncErrors?: boolean
    conflictResolution?: boolean
    fieldMapping?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }

  export type CmdbInventoryMappingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "ciId" | "inventoryAssetId" | "mappingType" | "relationship" | "syncEnabled" | "lastSyncAt" | "syncStatus" | "syncErrors" | "conflictResolution" | "fieldMapping" | "createdAt" | "updatedAt" | "createdBy", ExtArgs["result"]["cmdbInventoryMapping"]>
  export type CmdbInventoryMappingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type CmdbInventoryMappingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }
  export type CmdbInventoryMappingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    configurationItem?: boolean | ConfigurationItemDefaultArgs<ExtArgs>
  }

  export type $CmdbInventoryMappingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CmdbInventoryMapping"
    objects: {
      configurationItem: Prisma.$ConfigurationItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      ciId: string
      inventoryAssetId: number
      mappingType: string
      relationship: string | null
      syncEnabled: boolean
      lastSyncAt: Date | null
      syncStatus: string | null
      syncErrors: string | null
      conflictResolution: string
      fieldMapping: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
      createdBy: string | null
    }, ExtArgs["result"]["cmdbInventoryMapping"]>
    composites: {}
  }

  type CmdbInventoryMappingGetPayload<S extends boolean | null | undefined | CmdbInventoryMappingDefaultArgs> = $Result.GetResult<Prisma.$CmdbInventoryMappingPayload, S>

  type CmdbInventoryMappingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CmdbInventoryMappingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CmdbInventoryMappingCountAggregateInputType | true
    }

  export interface CmdbInventoryMappingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CmdbInventoryMapping'], meta: { name: 'CmdbInventoryMapping' } }
    /**
     * Find zero or one CmdbInventoryMapping that matches the filter.
     * @param {CmdbInventoryMappingFindUniqueArgs} args - Arguments to find a CmdbInventoryMapping
     * @example
     * // Get one CmdbInventoryMapping
     * const cmdbInventoryMapping = await prisma.cmdbInventoryMapping.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CmdbInventoryMappingFindUniqueArgs>(args: SelectSubset<T, CmdbInventoryMappingFindUniqueArgs<ExtArgs>>): Prisma__CmdbInventoryMappingClient<$Result.GetResult<Prisma.$CmdbInventoryMappingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CmdbInventoryMapping that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CmdbInventoryMappingFindUniqueOrThrowArgs} args - Arguments to find a CmdbInventoryMapping
     * @example
     * // Get one CmdbInventoryMapping
     * const cmdbInventoryMapping = await prisma.cmdbInventoryMapping.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CmdbInventoryMappingFindUniqueOrThrowArgs>(args: SelectSubset<T, CmdbInventoryMappingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CmdbInventoryMappingClient<$Result.GetResult<Prisma.$CmdbInventoryMappingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CmdbInventoryMapping that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CmdbInventoryMappingFindFirstArgs} args - Arguments to find a CmdbInventoryMapping
     * @example
     * // Get one CmdbInventoryMapping
     * const cmdbInventoryMapping = await prisma.cmdbInventoryMapping.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CmdbInventoryMappingFindFirstArgs>(args?: SelectSubset<T, CmdbInventoryMappingFindFirstArgs<ExtArgs>>): Prisma__CmdbInventoryMappingClient<$Result.GetResult<Prisma.$CmdbInventoryMappingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CmdbInventoryMapping that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CmdbInventoryMappingFindFirstOrThrowArgs} args - Arguments to find a CmdbInventoryMapping
     * @example
     * // Get one CmdbInventoryMapping
     * const cmdbInventoryMapping = await prisma.cmdbInventoryMapping.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CmdbInventoryMappingFindFirstOrThrowArgs>(args?: SelectSubset<T, CmdbInventoryMappingFindFirstOrThrowArgs<ExtArgs>>): Prisma__CmdbInventoryMappingClient<$Result.GetResult<Prisma.$CmdbInventoryMappingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CmdbInventoryMappings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CmdbInventoryMappingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CmdbInventoryMappings
     * const cmdbInventoryMappings = await prisma.cmdbInventoryMapping.findMany()
     * 
     * // Get first 10 CmdbInventoryMappings
     * const cmdbInventoryMappings = await prisma.cmdbInventoryMapping.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cmdbInventoryMappingWithIdOnly = await prisma.cmdbInventoryMapping.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CmdbInventoryMappingFindManyArgs>(args?: SelectSubset<T, CmdbInventoryMappingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CmdbInventoryMappingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CmdbInventoryMapping.
     * @param {CmdbInventoryMappingCreateArgs} args - Arguments to create a CmdbInventoryMapping.
     * @example
     * // Create one CmdbInventoryMapping
     * const CmdbInventoryMapping = await prisma.cmdbInventoryMapping.create({
     *   data: {
     *     // ... data to create a CmdbInventoryMapping
     *   }
     * })
     * 
     */
    create<T extends CmdbInventoryMappingCreateArgs>(args: SelectSubset<T, CmdbInventoryMappingCreateArgs<ExtArgs>>): Prisma__CmdbInventoryMappingClient<$Result.GetResult<Prisma.$CmdbInventoryMappingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CmdbInventoryMappings.
     * @param {CmdbInventoryMappingCreateManyArgs} args - Arguments to create many CmdbInventoryMappings.
     * @example
     * // Create many CmdbInventoryMappings
     * const cmdbInventoryMapping = await prisma.cmdbInventoryMapping.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CmdbInventoryMappingCreateManyArgs>(args?: SelectSubset<T, CmdbInventoryMappingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CmdbInventoryMappings and returns the data saved in the database.
     * @param {CmdbInventoryMappingCreateManyAndReturnArgs} args - Arguments to create many CmdbInventoryMappings.
     * @example
     * // Create many CmdbInventoryMappings
     * const cmdbInventoryMapping = await prisma.cmdbInventoryMapping.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CmdbInventoryMappings and only return the `id`
     * const cmdbInventoryMappingWithIdOnly = await prisma.cmdbInventoryMapping.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CmdbInventoryMappingCreateManyAndReturnArgs>(args?: SelectSubset<T, CmdbInventoryMappingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CmdbInventoryMappingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CmdbInventoryMapping.
     * @param {CmdbInventoryMappingDeleteArgs} args - Arguments to delete one CmdbInventoryMapping.
     * @example
     * // Delete one CmdbInventoryMapping
     * const CmdbInventoryMapping = await prisma.cmdbInventoryMapping.delete({
     *   where: {
     *     // ... filter to delete one CmdbInventoryMapping
     *   }
     * })
     * 
     */
    delete<T extends CmdbInventoryMappingDeleteArgs>(args: SelectSubset<T, CmdbInventoryMappingDeleteArgs<ExtArgs>>): Prisma__CmdbInventoryMappingClient<$Result.GetResult<Prisma.$CmdbInventoryMappingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CmdbInventoryMapping.
     * @param {CmdbInventoryMappingUpdateArgs} args - Arguments to update one CmdbInventoryMapping.
     * @example
     * // Update one CmdbInventoryMapping
     * const cmdbInventoryMapping = await prisma.cmdbInventoryMapping.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CmdbInventoryMappingUpdateArgs>(args: SelectSubset<T, CmdbInventoryMappingUpdateArgs<ExtArgs>>): Prisma__CmdbInventoryMappingClient<$Result.GetResult<Prisma.$CmdbInventoryMappingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CmdbInventoryMappings.
     * @param {CmdbInventoryMappingDeleteManyArgs} args - Arguments to filter CmdbInventoryMappings to delete.
     * @example
     * // Delete a few CmdbInventoryMappings
     * const { count } = await prisma.cmdbInventoryMapping.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CmdbInventoryMappingDeleteManyArgs>(args?: SelectSubset<T, CmdbInventoryMappingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CmdbInventoryMappings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CmdbInventoryMappingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CmdbInventoryMappings
     * const cmdbInventoryMapping = await prisma.cmdbInventoryMapping.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CmdbInventoryMappingUpdateManyArgs>(args: SelectSubset<T, CmdbInventoryMappingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CmdbInventoryMappings and returns the data updated in the database.
     * @param {CmdbInventoryMappingUpdateManyAndReturnArgs} args - Arguments to update many CmdbInventoryMappings.
     * @example
     * // Update many CmdbInventoryMappings
     * const cmdbInventoryMapping = await prisma.cmdbInventoryMapping.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CmdbInventoryMappings and only return the `id`
     * const cmdbInventoryMappingWithIdOnly = await prisma.cmdbInventoryMapping.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CmdbInventoryMappingUpdateManyAndReturnArgs>(args: SelectSubset<T, CmdbInventoryMappingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CmdbInventoryMappingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CmdbInventoryMapping.
     * @param {CmdbInventoryMappingUpsertArgs} args - Arguments to update or create a CmdbInventoryMapping.
     * @example
     * // Update or create a CmdbInventoryMapping
     * const cmdbInventoryMapping = await prisma.cmdbInventoryMapping.upsert({
     *   create: {
     *     // ... data to create a CmdbInventoryMapping
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CmdbInventoryMapping we want to update
     *   }
     * })
     */
    upsert<T extends CmdbInventoryMappingUpsertArgs>(args: SelectSubset<T, CmdbInventoryMappingUpsertArgs<ExtArgs>>): Prisma__CmdbInventoryMappingClient<$Result.GetResult<Prisma.$CmdbInventoryMappingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CmdbInventoryMappings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CmdbInventoryMappingCountArgs} args - Arguments to filter CmdbInventoryMappings to count.
     * @example
     * // Count the number of CmdbInventoryMappings
     * const count = await prisma.cmdbInventoryMapping.count({
     *   where: {
     *     // ... the filter for the CmdbInventoryMappings we want to count
     *   }
     * })
    **/
    count<T extends CmdbInventoryMappingCountArgs>(
      args?: Subset<T, CmdbInventoryMappingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CmdbInventoryMappingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CmdbInventoryMapping.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CmdbInventoryMappingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CmdbInventoryMappingAggregateArgs>(args: Subset<T, CmdbInventoryMappingAggregateArgs>): Prisma.PrismaPromise<GetCmdbInventoryMappingAggregateType<T>>

    /**
     * Group by CmdbInventoryMapping.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CmdbInventoryMappingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CmdbInventoryMappingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CmdbInventoryMappingGroupByArgs['orderBy'] }
        : { orderBy?: CmdbInventoryMappingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CmdbInventoryMappingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCmdbInventoryMappingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CmdbInventoryMapping model
   */
  readonly fields: CmdbInventoryMappingFieldRefs; // TODO-LINT: move to async function
  }

  /**
   * The delegate class that acts as a "Promise-like" for CmdbInventoryMapping.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CmdbInventoryMappingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    configurationItem<T extends ConfigurationItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConfigurationItemDefaultArgs<ExtArgs>>): Prisma__ConfigurationItemClient<$Result.GetResult<Prisma.$ConfigurationItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any // eslint-disable-line @typescript-eslint/no-explicit-any -- TODO-LINT: refine types) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CmdbInventoryMapping model
   */
  interface CmdbInventoryMappingFieldRefs {
    readonly id: FieldRef<"CmdbInventoryMapping", 'String'>
    readonly ciId: FieldRef<"CmdbInventoryMapping", 'String'>
    readonly inventoryAssetId: FieldRef<"CmdbInventoryMapping", 'Int'>
    readonly mappingType: FieldRef<"CmdbInventoryMapping", 'String'>
    readonly relationship: FieldRef<"CmdbInventoryMapping", 'String'>
    readonly syncEnabled: FieldRef<"CmdbInventoryMapping", 'Boolean'>
    readonly lastSyncAt: FieldRef<"CmdbInventoryMapping", 'DateTime'>
    readonly syncStatus: FieldRef<"CmdbInventoryMapping", 'String'>
    readonly syncErrors: FieldRef<"CmdbInventoryMapping", 'String'>
    readonly conflictResolution: FieldRef<"CmdbInventoryMapping", 'String'>
    readonly fieldMapping: FieldRef<"CmdbInventoryMapping", 'Json'>
    readonly createdAt: FieldRef<"CmdbInventoryMapping", 'DateTime'>
    readonly updatedAt: FieldRef<"CmdbInventoryMapping", 'DateTime'>
    readonly createdBy: FieldRef<"CmdbInventoryMapping", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CmdbInventoryMapping findUnique
   */
  export type CmdbInventoryMappingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbInventoryMapping
     */
    select?: CmdbInventoryMappingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbInventoryMapping
     */
    omit?: CmdbInventoryMappingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CmdbInventoryMappingInclude<ExtArgs> | null
    /**
     * Filter, which CmdbInventoryMapping to fetch.
     */
    where: CmdbInventoryMappingWhereUniqueInput
  }

  /**
   * CmdbInventoryMapping findUniqueOrThrow
   */
  export type CmdbInventoryMappingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbInventoryMapping
     */
    select?: CmdbInventoryMappingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbInventoryMapping
     */
    omit?: CmdbInventoryMappingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CmdbInventoryMappingInclude<ExtArgs> | null
    /**
     * Filter, which CmdbInventoryMapping to fetch.
     */
    where: CmdbInventoryMappingWhereUniqueInput
  }

  /**
   * CmdbInventoryMapping findFirst
   */
  export type CmdbInventoryMappingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbInventoryMapping
     */
    select?: CmdbInventoryMappingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbInventoryMapping
     */
    omit?: CmdbInventoryMappingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CmdbInventoryMappingInclude<ExtArgs> | null
    /**
     * Filter, which CmdbInventoryMapping to fetch.
     */
    where?: CmdbInventoryMappingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CmdbInventoryMappings to fetch.
     */
    orderBy?: CmdbInventoryMappingOrderByWithRelationInput | CmdbInventoryMappingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CmdbInventoryMappings.
     */
    cursor?: CmdbInventoryMappingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CmdbInventoryMappings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CmdbInventoryMappings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CmdbInventoryMappings.
     */
    distinct?: CmdbInventoryMappingScalarFieldEnum | CmdbInventoryMappingScalarFieldEnum[]
  }

  /**
   * CmdbInventoryMapping findFirstOrThrow
   */
  export type CmdbInventoryMappingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbInventoryMapping
     */
    select?: CmdbInventoryMappingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbInventoryMapping
     */
    omit?: CmdbInventoryMappingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CmdbInventoryMappingInclude<ExtArgs> | null
    /**
     * Filter, which CmdbInventoryMapping to fetch.
     */
    where?: CmdbInventoryMappingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CmdbInventoryMappings to fetch.
     */
    orderBy?: CmdbInventoryMappingOrderByWithRelationInput | CmdbInventoryMappingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CmdbInventoryMappings.
     */
    cursor?: CmdbInventoryMappingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CmdbInventoryMappings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CmdbInventoryMappings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CmdbInventoryMappings.
     */
    distinct?: CmdbInventoryMappingScalarFieldEnum | CmdbInventoryMappingScalarFieldEnum[]
  }

  /**
   * CmdbInventoryMapping findMany
   */
  export type CmdbInventoryMappingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbInventoryMapping
     */
    select?: CmdbInventoryMappingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbInventoryMapping
     */
    omit?: CmdbInventoryMappingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CmdbInventoryMappingInclude<ExtArgs> | null
    /**
     * Filter, which CmdbInventoryMappings to fetch.
     */
    where?: CmdbInventoryMappingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CmdbInventoryMappings to fetch.
     */
    orderBy?: CmdbInventoryMappingOrderByWithRelationInput | CmdbInventoryMappingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CmdbInventoryMappings.
     */
    cursor?: CmdbInventoryMappingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CmdbInventoryMappings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CmdbInventoryMappings.
     */
    skip?: number
    distinct?: CmdbInventoryMappingScalarFieldEnum | CmdbInventoryMappingScalarFieldEnum[]
  }

  /**
   * CmdbInventoryMapping create
   */
  export type CmdbInventoryMappingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbInventoryMapping
     */
    select?: CmdbInventoryMappingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbInventoryMapping
     */
    omit?: CmdbInventoryMappingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CmdbInventoryMappingInclude<ExtArgs> | null
    /**
     * The data needed to create a CmdbInventoryMapping.
     */
    data: XOR<CmdbInventoryMappingCreateInput, CmdbInventoryMappingUncheckedCreateInput>
  }

  /**
   * CmdbInventoryMapping createMany
   */
  export type CmdbInventoryMappingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CmdbInventoryMappings.
     */
    data: CmdbInventoryMappingCreateManyInput | CmdbInventoryMappingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CmdbInventoryMapping createManyAndReturn
   */
  export type CmdbInventoryMappingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbInventoryMapping
     */
    select?: CmdbInventoryMappingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbInventoryMapping
     */
    omit?: CmdbInventoryMappingOmit<ExtArgs> | null
    /**
     * The data used to create many CmdbInventoryMappings.
     */
    data: CmdbInventoryMappingCreateManyInput | CmdbInventoryMappingCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CmdbInventoryMappingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CmdbInventoryMapping update
   */
  export type CmdbInventoryMappingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbInventoryMapping
     */
    select?: CmdbInventoryMappingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbInventoryMapping
     */
    omit?: CmdbInventoryMappingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CmdbInventoryMappingInclude<ExtArgs> | null
    /**
     * The data needed to update a CmdbInventoryMapping.
     */
    data: XOR<CmdbInventoryMappingUpdateInput, CmdbInventoryMappingUncheckedUpdateInput>
    /**
     * Choose, which CmdbInventoryMapping to update.
     */
    where: CmdbInventoryMappingWhereUniqueInput
  }

  /**
   * CmdbInventoryMapping updateMany
   */
  export type CmdbInventoryMappingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CmdbInventoryMappings.
     */
    data: XOR<CmdbInventoryMappingUpdateManyMutationInput, CmdbInventoryMappingUncheckedUpdateManyInput>
    /**
     * Filter which CmdbInventoryMappings to update
     */
    where?: CmdbInventoryMappingWhereInput
    /**
     * Limit how many CmdbInventoryMappings to update.
     */
    limit?: number
  }

  /**
   * CmdbInventoryMapping updateManyAndReturn
   */
  export type CmdbInventoryMappingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbInventoryMapping
     */
    select?: CmdbInventoryMappingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbInventoryMapping
     */
    omit?: CmdbInventoryMappingOmit<ExtArgs> | null
    /**
     * The data used to update CmdbInventoryMappings.
     */
    data: XOR<CmdbInventoryMappingUpdateManyMutationInput, CmdbInventoryMappingUncheckedUpdateManyInput>
    /**
     * Filter which CmdbInventoryMappings to update
     */
    where?: CmdbInventoryMappingWhereInput
    /**
     * Limit how many CmdbInventoryMappings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CmdbInventoryMappingIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CmdbInventoryMapping upsert
   */
  export type CmdbInventoryMappingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbInventoryMapping
     */
    select?: CmdbInventoryMappingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbInventoryMapping
     */
    omit?: CmdbInventoryMappingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CmdbInventoryMappingInclude<ExtArgs> | null
    /**
     * The filter to search for the CmdbInventoryMapping to update in case it exists.
     */
    where: CmdbInventoryMappingWhereUniqueInput
    /**
     * In case the CmdbInventoryMapping found by the `where` argument doesn't exist, create a new CmdbInventoryMapping with this data.
     */
    create: XOR<CmdbInventoryMappingCreateInput, CmdbInventoryMappingUncheckedCreateInput>
    /**
     * In case the CmdbInventoryMapping was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CmdbInventoryMappingUpdateInput, CmdbInventoryMappingUncheckedUpdateInput>
  }

  /**
   * CmdbInventoryMapping delete
   */
  export type CmdbInventoryMappingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbInventoryMapping
     */
    select?: CmdbInventoryMappingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbInventoryMapping
     */
    omit?: CmdbInventoryMappingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CmdbInventoryMappingInclude<ExtArgs> | null
    /**
     * Filter which CmdbInventoryMapping to delete.
     */
    where: CmdbInventoryMappingWhereUniqueInput
  }

  /**
   * CmdbInventoryMapping deleteMany
   */
  export type CmdbInventoryMappingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CmdbInventoryMappings to delete
     */
    where?: CmdbInventoryMappingWhereInput
    /**
     * Limit how many CmdbInventoryMappings to delete.
     */
    limit?: number
  }

  /**
   * CmdbInventoryMapping without action
   */
  export type CmdbInventoryMappingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CmdbInventoryMapping
     */
    select?: CmdbInventoryMappingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CmdbInventoryMapping
     */
    omit?: CmdbInventoryMappingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CmdbInventoryMappingInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ConfigurationItemScalarFieldEnum: {
    id: 'id',
    ciId: 'ciId',
    name: 'name',
    displayName: 'displayName',
    description: 'description',
    ciType: 'ciType',
    ciSubType: 'ciSubType',
    ciStatus: 'ciStatus',
    operationalStatus: 'operationalStatus',
    environment: 'environment',
    criticality: 'criticality',
    businessService: 'businessService',
    owner: 'owner',
    technicalOwner: 'technicalOwner',
    supportGroup: 'supportGroup',
    location: 'location',
    site: 'site',
    building: 'building',
    floor: 'floor',
    room: 'room',
    rack: 'rack',
    rackPosition: 'rackPosition',
    department: 'department',
    costCenter: 'costCenter',
    installDate: 'installDate',
    firstDiscoveredDate: 'firstDiscoveredDate',
    lastDiscoveredDate: 'lastDiscoveredDate',
    warrantyExpiryDate: 'warrantyExpiryDate',
    maintenanceExpiryDate: 'maintenanceExpiryDate',
    retirementDate: 'retirementDate',
    discoverySource: 'discoverySource',
    isDiscovered: 'isDiscovered',
    lastScanDate: 'lastScanDate',
    purchasePrice: 'purchasePrice',
    currentValue: 'currentValue',
    vendor: 'vendor',
    manufacturer: 'manufacturer',
    model: 'model',
    serialNumber: 'serialNumber',
    assetTag: 'assetTag',
    customFields: 'customFields',
    attributes: 'attributes',
    tags: 'tags',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy'
  };

  export type ConfigurationItemScalarFieldEnum = (typeof ConfigurationItemScalarFieldEnum)[keyof typeof ConfigurationItemScalarFieldEnum]


  export const CiTypeScalarFieldEnum: {
    id: 'id',
    name: 'name',
    displayName: 'displayName',
    description: 'description',
    category: 'category',
    icon: 'icon',
    color: 'color',
    parentTypeId: 'parentTypeId',
    isAbstract: 'isAbstract',
    isActive: 'isActive',
    attributeSchema: 'attributeSchema',
    validationRules: 'validationRules',
    defaultStatus: 'defaultStatus',
    allowedStatuses: 'allowedStatuses',
    discoveryEnabled: 'discoveryEnabled',
    discoveryRules: 'discoveryRules',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CiTypeScalarFieldEnum = (typeof CiTypeScalarFieldEnum)[keyof typeof CiTypeScalarFieldEnum]


  export const CiRelationshipTypeScalarFieldEnum: {
    id: 'id',
    name: 'name',
    displayName: 'displayName',
    description: 'description',
    isDirectional: 'isDirectional',
    category: 'category',
    sourceCiTypeId: 'sourceCiTypeId',
    targetCiTypeId: 'targetCiTypeId',
    allowMultiple: 'allowMultiple',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CiRelationshipTypeScalarFieldEnum = (typeof CiRelationshipTypeScalarFieldEnum)[keyof typeof CiRelationshipTypeScalarFieldEnum]


  export const CiRelationshipScalarFieldEnum: {
    id: 'id',
    sourceCiId: 'sourceCiId',
    targetCiId: 'targetCiId',
    relationshipTypeId: 'relationshipTypeId',
    strength: 'strength',
    criticality: 'criticality',
    description: 'description',
    attributes: 'attributes',
    isActive: 'isActive',
    validFrom: 'validFrom',
    validTo: 'validTo',
    discoveredDate: 'discoveredDate',
    isDiscovered: 'isDiscovered',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy'
  };

  export type CiRelationshipScalarFieldEnum = (typeof CiRelationshipScalarFieldEnum)[keyof typeof CiRelationshipScalarFieldEnum]


  export const HardwareCiScalarFieldEnum: {
    ciId: 'ciId',
    processorType: 'processorType',
    processorSpeed: 'processorSpeed',
    coreCount: 'coreCount',
    memorySize: 'memorySize',
    storageSize: 'storageSize',
    storageType: 'storageType',
    macAddress: 'macAddress',
    ipAddress: 'ipAddress',
    portCount: 'portCount',
    formFactor: 'formFactor',
    dimensions: 'dimensions',
    weight: 'weight',
    powerRequirements: 'powerRequirements'
  };

  export type HardwareCiScalarFieldEnum = (typeof HardwareCiScalarFieldEnum)[keyof typeof HardwareCiScalarFieldEnum]


  export const SoftwareCiScalarFieldEnum: {
    ciId: 'ciId',
    version: 'version',
    edition: 'edition',
    architecture: 'architecture',
    licenseType: 'licenseType',
    licenseKey: 'licenseKey',
    licenseCount: 'licenseCount',
    installPath: 'installPath',
    installDate: 'installDate',
    installedBy: 'installedBy',
    isLatestVersion: 'isLatestVersion',
    patchLevel: 'patchLevel',
    supportEndDate: 'supportEndDate'
  };

  export type SoftwareCiScalarFieldEnum = (typeof SoftwareCiScalarFieldEnum)[keyof typeof SoftwareCiScalarFieldEnum]


  export const ApplicationCiScalarFieldEnum: {
    ciId: 'ciId',
    applicationUrl: 'applicationUrl',
    applicationPort: 'applicationPort',
    applicationProtocol: 'applicationProtocol',
    businessFunction: 'businessFunction',
    userCount: 'userCount',
    dataClassification: 'dataClassification',
    programmingLanguage: 'programmingLanguage',
    framework: 'framework',
    databaseType: 'databaseType',
    slaTarget: 'slaTarget',
    availabilityTarget: 'availabilityTarget'
  };

  export type ApplicationCiScalarFieldEnum = (typeof ApplicationCiScalarFieldEnum)[keyof typeof ApplicationCiScalarFieldEnum]


  export const NetworkCiScalarFieldEnum: {
    ciId: 'ciId',
    ipAddress: 'ipAddress',
    subnetMask: 'subnetMask',
    gateway: 'gateway',
    vlanId: 'vlanId',
    portConfiguration: 'portConfiguration',
    routingTable: 'routingTable',
    firewallRules: 'firewallRules'
  };

  export type NetworkCiScalarFieldEnum = (typeof NetworkCiScalarFieldEnum)[keyof typeof NetworkCiScalarFieldEnum]


  export const ServiceCiScalarFieldEnum: {
    ciId: 'ciId',
    serviceType: 'serviceType',
    serviceLevel: 'serviceLevel',
    businessOwner: 'businessOwner',
    slaDocument: 'slaDocument',
    availabilityTarget: 'availabilityTarget',
    performanceTarget: 'performanceTarget',
    serviceHours: 'serviceHours',
    maintenanceWindow: 'maintenanceWindow'
  };

  export type ServiceCiScalarFieldEnum = (typeof ServiceCiScalarFieldEnum)[keyof typeof ServiceCiScalarFieldEnum]


  export const DatabaseCiScalarFieldEnum: {
    ciId: 'ciId',
    databaseType: 'databaseType',
    databaseVersion: 'databaseVersion',
    databaseSize: 'databaseSize',
    connectionString: 'connectionString',
    port: 'port',
    schemaCount: 'schemaCount',
    backupSchedule: 'backupSchedule',
    lastBackupDate: 'lastBackupDate'
  };

  export type DatabaseCiScalarFieldEnum = (typeof DatabaseCiScalarFieldEnum)[keyof typeof DatabaseCiScalarFieldEnum]


  export const VirtualCiScalarFieldEnum: {
    ciId: 'ciId',
    hypervisorType: 'hypervisorType',
    hostCiId: 'hostCiId',
    allocatedCpu: 'allocatedCpu',
    allocatedMemory: 'allocatedMemory',
    allocatedStorage: 'allocatedStorage',
    virtualNetworks: 'virtualNetworks'
  };

  export type VirtualCiScalarFieldEnum = (typeof VirtualCiScalarFieldEnum)[keyof typeof VirtualCiScalarFieldEnum]


  export const FacilityCiScalarFieldEnum: {
    ciId: 'ciId',
    facilityType: 'facilityType',
    address: 'address',
    coordinates: 'coordinates',
    squareFootage: 'squareFootage',
    capacity: 'capacity',
    powerCapacity: 'powerCapacity',
    coolingCapacity: 'coolingCapacity'
  };

  export type FacilityCiScalarFieldEnum = (typeof FacilityCiScalarFieldEnum)[keyof typeof FacilityCiScalarFieldEnum]


  export const BusinessServiceScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    businessOwner: 'businessOwner',
    technicalOwner: 'technicalOwner',
    criticality: 'criticality',
    availabilityTarget: 'availabilityTarget',
    performanceTarget: 'performanceTarget',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BusinessServiceScalarFieldEnum = (typeof BusinessServiceScalarFieldEnum)[keyof typeof BusinessServiceScalarFieldEnum]


  export const CiBusinessServiceScalarFieldEnum: {
    ciId: 'ciId',
    businessServiceId: 'businessServiceId',
    relationshipType: 'relationshipType',
    criticality: 'criticality',
    createdAt: 'createdAt'
  };

  export type CiBusinessServiceScalarFieldEnum = (typeof CiBusinessServiceScalarFieldEnum)[keyof typeof CiBusinessServiceScalarFieldEnum]


  export const CiIncidentScalarFieldEnum: {
    ciId: 'ciId',
    incidentId: 'incidentId',
    relationshipType: 'relationshipType',
    createdAt: 'createdAt'
  };

  export type CiIncidentScalarFieldEnum = (typeof CiIncidentScalarFieldEnum)[keyof typeof CiIncidentScalarFieldEnum]


  export const CiChangeScalarFieldEnum: {
    ciId: 'ciId',
    changeId: 'changeId',
    relationshipType: 'relationshipType',
    createdAt: 'createdAt'
  };

  export type CiChangeScalarFieldEnum = (typeof CiChangeScalarFieldEnum)[keyof typeof CiChangeScalarFieldEnum]


  export const DiscoveryScheduleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    isActive: 'isActive',
    cronExpression: 'cronExpression',
    nextRunDate: 'nextRunDate',
    lastRunDate: 'lastRunDate',
    discoveryType: 'discoveryType',
    scopeConfiguration: 'scopeConfiguration',
    credentialIds: 'credentialIds',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy'
  };

  export type DiscoveryScheduleScalarFieldEnum = (typeof DiscoveryScheduleScalarFieldEnum)[keyof typeof DiscoveryScheduleScalarFieldEnum]


  export const DiscoveryRunScalarFieldEnum: {
    id: 'id',
    scheduleId: 'scheduleId',
    status: 'status',
    startTime: 'startTime',
    endTime: 'endTime',
    itemsDiscovered: 'itemsDiscovered',
    itemsUpdated: 'itemsUpdated',
    itemsCreated: 'itemsCreated',
    errors: 'errors'
  };

  export type DiscoveryRunScalarFieldEnum = (typeof DiscoveryRunScalarFieldEnum)[keyof typeof DiscoveryRunScalarFieldEnum]


  export const DiscoveredItemScalarFieldEnum: {
    id: 'id',
    runId: 'runId',
    ciId: 'ciId',
    discoveredData: 'discoveredData',
    fingerprint: 'fingerprint',
    status: 'status',
    processingNotes: 'processingNotes',
    discoveredAt: 'discoveredAt',
    processedAt: 'processedAt'
  };

  export type DiscoveredItemScalarFieldEnum = (typeof DiscoveredItemScalarFieldEnum)[keyof typeof DiscoveredItemScalarFieldEnum]


  export const CmdbHealthScalarFieldEnum: {
    id: 'id',
    metricDate: 'metricDate',
    totalCis: 'totalCis',
    activeCis: 'activeCis',
    staleCis: 'staleCis',
    orphanedCis: 'orphanedCis',
    totalRelationships: 'totalRelationships',
    discoveredRelationships: 'discoveredRelationships',
    manualRelationships: 'manualRelationships',
    discoveredCis: 'discoveredCis',
    manualCis: 'manualCis',
    completenessScore: 'completenessScore',
    accuracyScore: 'accuracyScore',
    createdAt: 'createdAt'
  };

  export type CmdbHealthScalarFieldEnum = (typeof CmdbHealthScalarFieldEnum)[keyof typeof CmdbHealthScalarFieldEnum]


  export const CiAuditLogScalarFieldEnum: {
    id: 'id',
    ciId: 'ciId',
    operation: 'operation',
    fieldName: 'fieldName',
    oldValue: 'oldValue',
    newValue: 'newValue',
    changedBy: 'changedBy',
    changeReason: 'changeReason',
    changeTicket: 'changeTicket',
    timestamp: 'timestamp'
  };

  export type CiAuditLogScalarFieldEnum = (typeof CiAuditLogScalarFieldEnum)[keyof typeof CiAuditLogScalarFieldEnum]


  export const SupportGroupScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    type: 'type',
    email: 'email',
    phone: 'phone',
    manager: 'manager',
    escalationGroup: 'escalationGroup',
    isActive: 'isActive',
    businessHours: 'businessHours',
    slaTarget: 'slaTarget',
    externalId: 'externalId',
    adGroupDn: 'adGroupDn',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy'
  };

  export type SupportGroupScalarFieldEnum = (typeof SupportGroupScalarFieldEnum)[keyof typeof SupportGroupScalarFieldEnum]


  export const SupportGroupMemberScalarFieldEnum: {
    id: 'id',
    supportGroupId: 'supportGroupId',
    userId: 'userId',
    role: 'role',
    isPrimary: 'isPrimary',
    isActive: 'isActive',
    startDate: 'startDate',
    endDate: 'endDate',
    assignedAt: 'assignedAt',
    assignedBy: 'assignedBy'
  };

  export type SupportGroupMemberScalarFieldEnum = (typeof SupportGroupMemberScalarFieldEnum)[keyof typeof SupportGroupMemberScalarFieldEnum]


  export const SupportGroupPermissionScalarFieldEnum: {
    id: 'id',
    supportGroupId: 'supportGroupId',
    resource: 'resource',
    action: 'action',
    scope: 'scope',
    conditions: 'conditions',
    isActive: 'isActive',
    grantedAt: 'grantedAt',
    grantedBy: 'grantedBy'
  };

  export type SupportGroupPermissionScalarFieldEnum = (typeof SupportGroupPermissionScalarFieldEnum)[keyof typeof SupportGroupPermissionScalarFieldEnum]


  export const CiOwnershipScalarFieldEnum: {
    id: 'id',
    ciId: 'ciId',
    ownershipType: 'ownershipType',
    userId: 'userId',
    supportGroupId: 'supportGroupId',
    isPrimary: 'isPrimary',
    isActive: 'isActive',
    startDate: 'startDate',
    endDate: 'endDate',
    responsibilities: 'responsibilities',
    assignedAt: 'assignedAt',
    assignedBy: 'assignedBy'
  };

  export type CiOwnershipScalarFieldEnum = (typeof CiOwnershipScalarFieldEnum)[keyof typeof CiOwnershipScalarFieldEnum]


  export const CmdbInventoryMappingScalarFieldEnum: {
    id: 'id',
    ciId: 'ciId',
    inventoryAssetId: 'inventoryAssetId',
    mappingType: 'mappingType',
    relationship: 'relationship',
    syncEnabled: 'syncEnabled',
    lastSyncAt: 'lastSyncAt',
    syncStatus: 'syncStatus',
    syncErrors: 'syncErrors',
    conflictResolution: 'conflictResolution',
    fieldMapping: 'fieldMapping',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy'
  };

  export type CmdbInventoryMappingScalarFieldEnum = (typeof CmdbInventoryMappingScalarFieldEnum)[keyof typeof CmdbInventoryMappingScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type ConfigurationItemWhereInput = {
    AND?: ConfigurationItemWhereInput | ConfigurationItemWhereInput[]
    OR?: ConfigurationItemWhereInput[]
    NOT?: ConfigurationItemWhereInput | ConfigurationItemWhereInput[]
    id?: StringFilter<"ConfigurationItem"> | string
    ciId?: StringFilter<"ConfigurationItem"> | string
    name?: StringFilter<"ConfigurationItem"> | string
    displayName?: StringNullableFilter<"ConfigurationItem"> | string | null
    description?: StringNullableFilter<"ConfigurationItem"> | string | null
    ciType?: StringFilter<"ConfigurationItem"> | string
    ciSubType?: StringNullableFilter<"ConfigurationItem"> | string | null
    ciStatus?: StringFilter<"ConfigurationItem"> | string
    operationalStatus?: StringNullableFilter<"ConfigurationItem"> | string | null
    environment?: StringNullableFilter<"ConfigurationItem"> | string | null
    criticality?: StringNullableFilter<"ConfigurationItem"> | string | null
    businessService?: StringNullableFilter<"ConfigurationItem"> | string | null
    owner?: StringNullableFilter<"ConfigurationItem"> | string | null
    technicalOwner?: StringNullableFilter<"ConfigurationItem"> | string | null
    supportGroup?: StringNullableFilter<"ConfigurationItem"> | string | null
    location?: StringNullableFilter<"ConfigurationItem"> | string | null
    site?: StringNullableFilter<"ConfigurationItem"> | string | null
    building?: StringNullableFilter<"ConfigurationItem"> | string | null
    floor?: StringNullableFilter<"ConfigurationItem"> | string | null
    room?: StringNullableFilter<"ConfigurationItem"> | string | null
    rack?: StringNullableFilter<"ConfigurationItem"> | string | null
    rackPosition?: StringNullableFilter<"ConfigurationItem"> | string | null
    department?: StringNullableFilter<"ConfigurationItem"> | string | null
    costCenter?: StringNullableFilter<"ConfigurationItem"> | string | null
    installDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    firstDiscoveredDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    lastDiscoveredDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    warrantyExpiryDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    maintenanceExpiryDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    retirementDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    discoverySource?: StringNullableFilter<"ConfigurationItem"> | string | null
    isDiscovered?: BoolFilter<"ConfigurationItem"> | boolean
    lastScanDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    purchasePrice?: DecimalNullableFilter<"ConfigurationItem"> | Decimal | DecimalJsLike | number | string | null
    currentValue?: DecimalNullableFilter<"ConfigurationItem"> | Decimal | DecimalJsLike | number | string | null
    vendor?: StringNullableFilter<"ConfigurationItem"> | string | null
    manufacturer?: StringNullableFilter<"ConfigurationItem"> | string | null
    model?: StringNullableFilter<"ConfigurationItem"> | string | null
    serialNumber?: StringNullableFilter<"ConfigurationItem"> | string | null
    assetTag?: StringNullableFilter<"ConfigurationItem"> | string | null
    customFields?: JsonNullableFilter<"ConfigurationItem">
    attributes?: JsonNullableFilter<"ConfigurationItem">
    tags?: StringNullableListFilter<"ConfigurationItem">
    createdAt?: DateTimeFilter<"ConfigurationItem"> | Date | string
    updatedAt?: DateTimeFilter<"ConfigurationItem"> | Date | string
    createdBy?: StringNullableFilter<"ConfigurationItem"> | string | null
    updatedBy?: StringNullableFilter<"ConfigurationItem"> | string | null
    ciType_rel?: XOR<CiTypeScalarRelationFilter, CiTypeWhereInput>
    outgoingRelationships?: CiRelationshipListRelationFilter
    incomingRelationships?: CiRelationshipListRelationFilter
    incidents?: CiIncidentListRelationFilter
    changes?: CiChangeListRelationFilter
    businessServices?: CiBusinessServiceListRelationFilter
    ownership?: CiOwnershipListRelationFilter
    inventoryMapping?: CmdbInventoryMappingListRelationFilter
    supportGroups?: SupportGroupListRelationFilter
    hardwareDetails?: XOR<HardwareCiNullableScalarRelationFilter, HardwareCiWhereInput> | null
    softwareDetails?: XOR<SoftwareCiNullableScalarRelationFilter, SoftwareCiWhereInput> | null
    applicationDetails?: XOR<ApplicationCiNullableScalarRelationFilter, ApplicationCiWhereInput> | null
    networkDetails?: XOR<NetworkCiNullableScalarRelationFilter, NetworkCiWhereInput> | null
    serviceDetails?: XOR<ServiceCiNullableScalarRelationFilter, ServiceCiWhereInput> | null
    databaseDetails?: XOR<DatabaseCiNullableScalarRelationFilter, DatabaseCiWhereInput> | null
    virtualDetails?: XOR<VirtualCiNullableScalarRelationFilter, VirtualCiWhereInput> | null
    facilityDetails?: XOR<FacilityCiNullableScalarRelationFilter, FacilityCiWhereInput> | null
  }

  export type ConfigurationItemOrderByWithRelationInput = {
    id?: SortOrder
    ciId?: SortOrder
    name?: SortOrder
    displayName?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    ciType?: SortOrder
    ciSubType?: SortOrderInput | SortOrder
    ciStatus?: SortOrder
    operationalStatus?: SortOrderInput | SortOrder
    environment?: SortOrderInput | SortOrder
    criticality?: SortOrderInput | SortOrder
    businessService?: SortOrderInput | SortOrder
    owner?: SortOrderInput | SortOrder
    technicalOwner?: SortOrderInput | SortOrder
    supportGroup?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    site?: SortOrderInput | SortOrder
    building?: SortOrderInput | SortOrder
    floor?: SortOrderInput | SortOrder
    room?: SortOrderInput | SortOrder
    rack?: SortOrderInput | SortOrder
    rackPosition?: SortOrderInput | SortOrder
    department?: SortOrderInput | SortOrder
    costCenter?: SortOrderInput | SortOrder
    installDate?: SortOrderInput | SortOrder
    firstDiscoveredDate?: SortOrderInput | SortOrder
    lastDiscoveredDate?: SortOrderInput | SortOrder
    warrantyExpiryDate?: SortOrderInput | SortOrder
    maintenanceExpiryDate?: SortOrderInput | SortOrder
    retirementDate?: SortOrderInput | SortOrder
    discoverySource?: SortOrderInput | SortOrder
    isDiscovered?: SortOrder
    lastScanDate?: SortOrderInput | SortOrder
    purchasePrice?: SortOrderInput | SortOrder
    currentValue?: SortOrderInput | SortOrder
    vendor?: SortOrderInput | SortOrder
    manufacturer?: SortOrderInput | SortOrder
    model?: SortOrderInput | SortOrder
    serialNumber?: SortOrderInput | SortOrder
    assetTag?: SortOrderInput | SortOrder
    customFields?: SortOrderInput | SortOrder
    attributes?: SortOrderInput | SortOrder
    tags?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    ciType_rel?: CiTypeOrderByWithRelationInput
    outgoingRelationships?: CiRelationshipOrderByRelationAggregateInput
    incomingRelationships?: CiRelationshipOrderByRelationAggregateInput
    incidents?: CiIncidentOrderByRelationAggregateInput
    changes?: CiChangeOrderByRelationAggregateInput
    businessServices?: CiBusinessServiceOrderByRelationAggregateInput
    ownership?: CiOwnershipOrderByRelationAggregateInput
    inventoryMapping?: CmdbInventoryMappingOrderByRelationAggregateInput
    supportGroups?: SupportGroupOrderByRelationAggregateInput
    hardwareDetails?: HardwareCiOrderByWithRelationInput
    softwareDetails?: SoftwareCiOrderByWithRelationInput
    applicationDetails?: ApplicationCiOrderByWithRelationInput
    networkDetails?: NetworkCiOrderByWithRelationInput
    serviceDetails?: ServiceCiOrderByWithRelationInput
    databaseDetails?: DatabaseCiOrderByWithRelationInput
    virtualDetails?: VirtualCiOrderByWithRelationInput
    facilityDetails?: FacilityCiOrderByWithRelationInput
  }

  export type ConfigurationItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    ciId?: string
    AND?: ConfigurationItemWhereInput | ConfigurationItemWhereInput[]
    OR?: ConfigurationItemWhereInput[]
    NOT?: ConfigurationItemWhereInput | ConfigurationItemWhereInput[]
    name?: StringFilter<"ConfigurationItem"> | string
    displayName?: StringNullableFilter<"ConfigurationItem"> | string | null
    description?: StringNullableFilter<"ConfigurationItem"> | string | null
    ciType?: StringFilter<"ConfigurationItem"> | string
    ciSubType?: StringNullableFilter<"ConfigurationItem"> | string | null
    ciStatus?: StringFilter<"ConfigurationItem"> | string
    operationalStatus?: StringNullableFilter<"ConfigurationItem"> | string | null
    environment?: StringNullableFilter<"ConfigurationItem"> | string | null
    criticality?: StringNullableFilter<"ConfigurationItem"> | string | null
    businessService?: StringNullableFilter<"ConfigurationItem"> | string | null
    owner?: StringNullableFilter<"ConfigurationItem"> | string | null
    technicalOwner?: StringNullableFilter<"ConfigurationItem"> | string | null
    supportGroup?: StringNullableFilter<"ConfigurationItem"> | string | null
    location?: StringNullableFilter<"ConfigurationItem"> | string | null
    site?: StringNullableFilter<"ConfigurationItem"> | string | null
    building?: StringNullableFilter<"ConfigurationItem"> | string | null
    floor?: StringNullableFilter<"ConfigurationItem"> | string | null
    room?: StringNullableFilter<"ConfigurationItem"> | string | null
    rack?: StringNullableFilter<"ConfigurationItem"> | string | null
    rackPosition?: StringNullableFilter<"ConfigurationItem"> | string | null
    department?: StringNullableFilter<"ConfigurationItem"> | string | null
    costCenter?: StringNullableFilter<"ConfigurationItem"> | string | null
    installDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    firstDiscoveredDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    lastDiscoveredDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    warrantyExpiryDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    maintenanceExpiryDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    retirementDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    discoverySource?: StringNullableFilter<"ConfigurationItem"> | string | null
    isDiscovered?: BoolFilter<"ConfigurationItem"> | boolean
    lastScanDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    purchasePrice?: DecimalNullableFilter<"ConfigurationItem"> | Decimal | DecimalJsLike | number | string | null
    currentValue?: DecimalNullableFilter<"ConfigurationItem"> | Decimal | DecimalJsLike | number | string | null
    vendor?: StringNullableFilter<"ConfigurationItem"> | string | null
    manufacturer?: StringNullableFilter<"ConfigurationItem"> | string | null
    model?: StringNullableFilter<"ConfigurationItem"> | string | null
    serialNumber?: StringNullableFilter<"ConfigurationItem"> | string | null
    assetTag?: StringNullableFilter<"ConfigurationItem"> | string | null
    customFields?: JsonNullableFilter<"ConfigurationItem">
    attributes?: JsonNullableFilter<"ConfigurationItem">
    tags?: StringNullableListFilter<"ConfigurationItem">
    createdAt?: DateTimeFilter<"ConfigurationItem"> | Date | string
    updatedAt?: DateTimeFilter<"ConfigurationItem"> | Date | string
    createdBy?: StringNullableFilter<"ConfigurationItem"> | string | null
    updatedBy?: StringNullableFilter<"ConfigurationItem"> | string | null
    ciType_rel?: XOR<CiTypeScalarRelationFilter, CiTypeWhereInput>
    outgoingRelationships?: CiRelationshipListRelationFilter
    incomingRelationships?: CiRelationshipListRelationFilter
    incidents?: CiIncidentListRelationFilter
    changes?: CiChangeListRelationFilter
    businessServices?: CiBusinessServiceListRelationFilter
    ownership?: CiOwnershipListRelationFilter
    inventoryMapping?: CmdbInventoryMappingListRelationFilter
    supportGroups?: SupportGroupListRelationFilter
    hardwareDetails?: XOR<HardwareCiNullableScalarRelationFilter, HardwareCiWhereInput> | null
    softwareDetails?: XOR<SoftwareCiNullableScalarRelationFilter, SoftwareCiWhereInput> | null
    applicationDetails?: XOR<ApplicationCiNullableScalarRelationFilter, ApplicationCiWhereInput> | null
    networkDetails?: XOR<NetworkCiNullableScalarRelationFilter, NetworkCiWhereInput> | null
    serviceDetails?: XOR<ServiceCiNullableScalarRelationFilter, ServiceCiWhereInput> | null
    databaseDetails?: XOR<DatabaseCiNullableScalarRelationFilter, DatabaseCiWhereInput> | null
    virtualDetails?: XOR<VirtualCiNullableScalarRelationFilter, VirtualCiWhereInput> | null
    facilityDetails?: XOR<FacilityCiNullableScalarRelationFilter, FacilityCiWhereInput> | null
  }, "id" | "ciId">

  export type ConfigurationItemOrderByWithAggregationInput = {
    id?: SortOrder
    ciId?: SortOrder
    name?: SortOrder
    displayName?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    ciType?: SortOrder
    ciSubType?: SortOrderInput | SortOrder
    ciStatus?: SortOrder
    operationalStatus?: SortOrderInput | SortOrder
    environment?: SortOrderInput | SortOrder
    criticality?: SortOrderInput | SortOrder
    businessService?: SortOrderInput | SortOrder
    owner?: SortOrderInput | SortOrder
    technicalOwner?: SortOrderInput | SortOrder
    supportGroup?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    site?: SortOrderInput | SortOrder
    building?: SortOrderInput | SortOrder
    floor?: SortOrderInput | SortOrder
    room?: SortOrderInput | SortOrder
    rack?: SortOrderInput | SortOrder
    rackPosition?: SortOrderInput | SortOrder
    department?: SortOrderInput | SortOrder
    costCenter?: SortOrderInput | SortOrder
    installDate?: SortOrderInput | SortOrder
    firstDiscoveredDate?: SortOrderInput | SortOrder
    lastDiscoveredDate?: SortOrderInput | SortOrder
    warrantyExpiryDate?: SortOrderInput | SortOrder
    maintenanceExpiryDate?: SortOrderInput | SortOrder
    retirementDate?: SortOrderInput | SortOrder
    discoverySource?: SortOrderInput | SortOrder
    isDiscovered?: SortOrder
    lastScanDate?: SortOrderInput | SortOrder
    purchasePrice?: SortOrderInput | SortOrder
    currentValue?: SortOrderInput | SortOrder
    vendor?: SortOrderInput | SortOrder
    manufacturer?: SortOrderInput | SortOrder
    model?: SortOrderInput | SortOrder
    serialNumber?: SortOrderInput | SortOrder
    assetTag?: SortOrderInput | SortOrder
    customFields?: SortOrderInput | SortOrder
    attributes?: SortOrderInput | SortOrder
    tags?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: ConfigurationItemCountOrderByAggregateInput
    _avg?: ConfigurationItemAvgOrderByAggregateInput
    _max?: ConfigurationItemMaxOrderByAggregateInput
    _min?: ConfigurationItemMinOrderByAggregateInput
    _sum?: ConfigurationItemSumOrderByAggregateInput
  }

  export type ConfigurationItemScalarWhereWithAggregatesInput = {
    AND?: ConfigurationItemScalarWhereWithAggregatesInput | ConfigurationItemScalarWhereWithAggregatesInput[]
    OR?: ConfigurationItemScalarWhereWithAggregatesInput[]
    NOT?: ConfigurationItemScalarWhereWithAggregatesInput | ConfigurationItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ConfigurationItem"> | string
    ciId?: StringWithAggregatesFilter<"ConfigurationItem"> | string
    name?: StringWithAggregatesFilter<"ConfigurationItem"> | string
    displayName?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    description?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    ciType?: StringWithAggregatesFilter<"ConfigurationItem"> | string
    ciSubType?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    ciStatus?: StringWithAggregatesFilter<"ConfigurationItem"> | string
    operationalStatus?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    environment?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    criticality?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    businessService?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    owner?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    technicalOwner?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    supportGroup?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    location?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    site?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    building?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    floor?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    room?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    rack?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    rackPosition?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    department?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    costCenter?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    installDate?: DateTimeNullableWithAggregatesFilter<"ConfigurationItem"> | Date | string | null
    firstDiscoveredDate?: DateTimeNullableWithAggregatesFilter<"ConfigurationItem"> | Date | string | null
    lastDiscoveredDate?: DateTimeNullableWithAggregatesFilter<"ConfigurationItem"> | Date | string | null
    warrantyExpiryDate?: DateTimeNullableWithAggregatesFilter<"ConfigurationItem"> | Date | string | null
    maintenanceExpiryDate?: DateTimeNullableWithAggregatesFilter<"ConfigurationItem"> | Date | string | null
    retirementDate?: DateTimeNullableWithAggregatesFilter<"ConfigurationItem"> | Date | string | null
    discoverySource?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    isDiscovered?: BoolWithAggregatesFilter<"ConfigurationItem"> | boolean
    lastScanDate?: DateTimeNullableWithAggregatesFilter<"ConfigurationItem"> | Date | string | null
    purchasePrice?: DecimalNullableWithAggregatesFilter<"ConfigurationItem"> | Decimal | DecimalJsLike | number | string | null
    currentValue?: DecimalNullableWithAggregatesFilter<"ConfigurationItem"> | Decimal | DecimalJsLike | number | string | null
    vendor?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    manufacturer?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    model?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    serialNumber?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    assetTag?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    customFields?: JsonNullableWithAggregatesFilter<"ConfigurationItem">
    attributes?: JsonNullableWithAggregatesFilter<"ConfigurationItem">
    tags?: StringNullableListFilter<"ConfigurationItem">
    createdAt?: DateTimeWithAggregatesFilter<"ConfigurationItem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ConfigurationItem"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"ConfigurationItem"> | string | null
  }

  export type CiTypeWhereInput = {
    AND?: CiTypeWhereInput | CiTypeWhereInput[]
    OR?: CiTypeWhereInput[]
    NOT?: CiTypeWhereInput | CiTypeWhereInput[]
    id?: StringFilter<"CiType"> | string
    name?: StringFilter<"CiType"> | string
    displayName?: StringNullableFilter<"CiType"> | string | null
    description?: StringNullableFilter<"CiType"> | string | null
    category?: StringFilter<"CiType"> | string
    icon?: StringNullableFilter<"CiType"> | string | null
    color?: StringNullableFilter<"CiType"> | string | null
    parentTypeId?: StringNullableFilter<"CiType"> | string | null
    isAbstract?: BoolFilter<"CiType"> | boolean
    isActive?: BoolFilter<"CiType"> | boolean
    attributeSchema?: JsonNullableFilter<"CiType">
    validationRules?: JsonNullableFilter<"CiType">
    defaultStatus?: StringNullableFilter<"CiType"> | string | null
    allowedStatuses?: StringNullableListFilter<"CiType">
    discoveryEnabled?: BoolFilter<"CiType"> | boolean
    discoveryRules?: JsonNullableFilter<"CiType">
    createdAt?: DateTimeFilter<"CiType"> | Date | string
    updatedAt?: DateTimeFilter<"CiType"> | Date | string
    parentType?: XOR<CiTypeNullableScalarRelationFilter, CiTypeWhereInput> | null
    childTypes?: CiTypeListRelationFilter
    configurationItems?: ConfigurationItemListRelationFilter
    allowedRelationships?: CiRelationshipTypeListRelationFilter
    targetRelationships?: CiRelationshipTypeListRelationFilter
  }

  export type CiTypeOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    category?: SortOrder
    icon?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    parentTypeId?: SortOrderInput | SortOrder
    isAbstract?: SortOrder
    isActive?: SortOrder
    attributeSchema?: SortOrderInput | SortOrder
    validationRules?: SortOrderInput | SortOrder
    defaultStatus?: SortOrderInput | SortOrder
    allowedStatuses?: SortOrder
    discoveryEnabled?: SortOrder
    discoveryRules?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    parentType?: CiTypeOrderByWithRelationInput
    childTypes?: CiTypeOrderByRelationAggregateInput
    configurationItems?: ConfigurationItemOrderByRelationAggregateInput
    allowedRelationships?: CiRelationshipTypeOrderByRelationAggregateInput
    targetRelationships?: CiRelationshipTypeOrderByRelationAggregateInput
  }

  export type CiTypeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: CiTypeWhereInput | CiTypeWhereInput[]
    OR?: CiTypeWhereInput[]
    NOT?: CiTypeWhereInput | CiTypeWhereInput[]
    displayName?: StringNullableFilter<"CiType"> | string | null
    description?: StringNullableFilter<"CiType"> | string | null
    category?: StringFilter<"CiType"> | string
    icon?: StringNullableFilter<"CiType"> | string | null
    color?: StringNullableFilter<"CiType"> | string | null
    parentTypeId?: StringNullableFilter<"CiType"> | string | null
    isAbstract?: BoolFilter<"CiType"> | boolean
    isActive?: BoolFilter<"CiType"> | boolean
    attributeSchema?: JsonNullableFilter<"CiType">
    validationRules?: JsonNullableFilter<"CiType">
    defaultStatus?: StringNullableFilter<"CiType"> | string | null
    allowedStatuses?: StringNullableListFilter<"CiType">
    discoveryEnabled?: BoolFilter<"CiType"> | boolean
    discoveryRules?: JsonNullableFilter<"CiType">
    createdAt?: DateTimeFilter<"CiType"> | Date | string
    updatedAt?: DateTimeFilter<"CiType"> | Date | string
    parentType?: XOR<CiTypeNullableScalarRelationFilter, CiTypeWhereInput> | null
    childTypes?: CiTypeListRelationFilter
    configurationItems?: ConfigurationItemListRelationFilter
    allowedRelationships?: CiRelationshipTypeListRelationFilter
    targetRelationships?: CiRelationshipTypeListRelationFilter
  }, "id" | "name">

  export type CiTypeOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    category?: SortOrder
    icon?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    parentTypeId?: SortOrderInput | SortOrder
    isAbstract?: SortOrder
    isActive?: SortOrder
    attributeSchema?: SortOrderInput | SortOrder
    validationRules?: SortOrderInput | SortOrder
    defaultStatus?: SortOrderInput | SortOrder
    allowedStatuses?: SortOrder
    discoveryEnabled?: SortOrder
    discoveryRules?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CiTypeCountOrderByAggregateInput
    _max?: CiTypeMaxOrderByAggregateInput
    _min?: CiTypeMinOrderByAggregateInput
  }

  export type CiTypeScalarWhereWithAggregatesInput = {
    AND?: CiTypeScalarWhereWithAggregatesInput | CiTypeScalarWhereWithAggregatesInput[]
    OR?: CiTypeScalarWhereWithAggregatesInput[]
    NOT?: CiTypeScalarWhereWithAggregatesInput | CiTypeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CiType"> | string
    name?: StringWithAggregatesFilter<"CiType"> | string
    displayName?: StringNullableWithAggregatesFilter<"CiType"> | string | null
    description?: StringNullableWithAggregatesFilter<"CiType"> | string | null
    category?: StringWithAggregatesFilter<"CiType"> | string
    icon?: StringNullableWithAggregatesFilter<"CiType"> | string | null
    color?: StringNullableWithAggregatesFilter<"CiType"> | string | null
    parentTypeId?: StringNullableWithAggregatesFilter<"CiType"> | string | null
    isAbstract?: BoolWithAggregatesFilter<"CiType"> | boolean
    isActive?: BoolWithAggregatesFilter<"CiType"> | boolean
    attributeSchema?: JsonNullableWithAggregatesFilter<"CiType">
    validationRules?: JsonNullableWithAggregatesFilter<"CiType">
    defaultStatus?: StringNullableWithAggregatesFilter<"CiType"> | string | null
    allowedStatuses?: StringNullableListFilter<"CiType">
    discoveryEnabled?: BoolWithAggregatesFilter<"CiType"> | boolean
    discoveryRules?: JsonNullableWithAggregatesFilter<"CiType">
    createdAt?: DateTimeWithAggregatesFilter<"CiType"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CiType"> | Date | string
  }

  export type CiRelationshipTypeWhereInput = {
    AND?: CiRelationshipTypeWhereInput | CiRelationshipTypeWhereInput[]
    OR?: CiRelationshipTypeWhereInput[]
    NOT?: CiRelationshipTypeWhereInput | CiRelationshipTypeWhereInput[]
    id?: StringFilter<"CiRelationshipType"> | string
    name?: StringFilter<"CiRelationshipType"> | string
    displayName?: StringNullableFilter<"CiRelationshipType"> | string | null
    description?: StringNullableFilter<"CiRelationshipType"> | string | null
    isDirectional?: BoolFilter<"CiRelationshipType"> | boolean
    category?: StringNullableFilter<"CiRelationshipType"> | string | null
    sourceCiTypeId?: StringNullableFilter<"CiRelationshipType"> | string | null
    targetCiTypeId?: StringNullableFilter<"CiRelationshipType"> | string | null
    allowMultiple?: BoolFilter<"CiRelationshipType"> | boolean
    createdAt?: DateTimeFilter<"CiRelationshipType"> | Date | string
    updatedAt?: DateTimeFilter<"CiRelationshipType"> | Date | string
    sourceCiType?: XOR<CiTypeNullableScalarRelationFilter, CiTypeWhereInput> | null
    targetCiType?: XOR<CiTypeNullableScalarRelationFilter, CiTypeWhereInput> | null
    relationships?: CiRelationshipListRelationFilter
  }

  export type CiRelationshipTypeOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    isDirectional?: SortOrder
    category?: SortOrderInput | SortOrder
    sourceCiTypeId?: SortOrderInput | SortOrder
    targetCiTypeId?: SortOrderInput | SortOrder
    allowMultiple?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sourceCiType?: CiTypeOrderByWithRelationInput
    targetCiType?: CiTypeOrderByWithRelationInput
    relationships?: CiRelationshipOrderByRelationAggregateInput
  }

  export type CiRelationshipTypeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: CiRelationshipTypeWhereInput | CiRelationshipTypeWhereInput[]
    OR?: CiRelationshipTypeWhereInput[]
    NOT?: CiRelationshipTypeWhereInput | CiRelationshipTypeWhereInput[]
    displayName?: StringNullableFilter<"CiRelationshipType"> | string | null
    description?: StringNullableFilter<"CiRelationshipType"> | string | null
    isDirectional?: BoolFilter<"CiRelationshipType"> | boolean
    category?: StringNullableFilter<"CiRelationshipType"> | string | null
    sourceCiTypeId?: StringNullableFilter<"CiRelationshipType"> | string | null
    targetCiTypeId?: StringNullableFilter<"CiRelationshipType"> | string | null
    allowMultiple?: BoolFilter<"CiRelationshipType"> | boolean
    createdAt?: DateTimeFilter<"CiRelationshipType"> | Date | string
    updatedAt?: DateTimeFilter<"CiRelationshipType"> | Date | string
    sourceCiType?: XOR<CiTypeNullableScalarRelationFilter, CiTypeWhereInput> | null
    targetCiType?: XOR<CiTypeNullableScalarRelationFilter, CiTypeWhereInput> | null
    relationships?: CiRelationshipListRelationFilter
  }, "id" | "name">

  export type CiRelationshipTypeOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    isDirectional?: SortOrder
    category?: SortOrderInput | SortOrder
    sourceCiTypeId?: SortOrderInput | SortOrder
    targetCiTypeId?: SortOrderInput | SortOrder
    allowMultiple?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CiRelationshipTypeCountOrderByAggregateInput
    _max?: CiRelationshipTypeMaxOrderByAggregateInput
    _min?: CiRelationshipTypeMinOrderByAggregateInput
  }

  export type CiRelationshipTypeScalarWhereWithAggregatesInput = {
    AND?: CiRelationshipTypeScalarWhereWithAggregatesInput | CiRelationshipTypeScalarWhereWithAggregatesInput[]
    OR?: CiRelationshipTypeScalarWhereWithAggregatesInput[]
    NOT?: CiRelationshipTypeScalarWhereWithAggregatesInput | CiRelationshipTypeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CiRelationshipType"> | string
    name?: StringWithAggregatesFilter<"CiRelationshipType"> | string
    displayName?: StringNullableWithAggregatesFilter<"CiRelationshipType"> | string | null
    description?: StringNullableWithAggregatesFilter<"CiRelationshipType"> | string | null
    isDirectional?: BoolWithAggregatesFilter<"CiRelationshipType"> | boolean
    category?: StringNullableWithAggregatesFilter<"CiRelationshipType"> | string | null
    sourceCiTypeId?: StringNullableWithAggregatesFilter<"CiRelationshipType"> | string | null
    targetCiTypeId?: StringNullableWithAggregatesFilter<"CiRelationshipType"> | string | null
    allowMultiple?: BoolWithAggregatesFilter<"CiRelationshipType"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"CiRelationshipType"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CiRelationshipType"> | Date | string
  }

  export type CiRelationshipWhereInput = {
    AND?: CiRelationshipWhereInput | CiRelationshipWhereInput[]
    OR?: CiRelationshipWhereInput[]
    NOT?: CiRelationshipWhereInput | CiRelationshipWhereInput[]
    id?: StringFilter<"CiRelationship"> | string
    sourceCiId?: StringFilter<"CiRelationship"> | string
    targetCiId?: StringFilter<"CiRelationship"> | string
    relationshipTypeId?: StringFilter<"CiRelationship"> | string
    strength?: StringNullableFilter<"CiRelationship"> | string | null
    criticality?: StringNullableFilter<"CiRelationship"> | string | null
    description?: StringNullableFilter<"CiRelationship"> | string | null
    attributes?: JsonNullableFilter<"CiRelationship">
    isActive?: BoolFilter<"CiRelationship"> | boolean
    validFrom?: DateTimeNullableFilter<"CiRelationship"> | Date | string | null
    validTo?: DateTimeNullableFilter<"CiRelationship"> | Date | string | null
    discoveredDate?: DateTimeNullableFilter<"CiRelationship"> | Date | string | null
    isDiscovered?: BoolFilter<"CiRelationship"> | boolean
    createdAt?: DateTimeFilter<"CiRelationship"> | Date | string
    updatedAt?: DateTimeFilter<"CiRelationship"> | Date | string
    createdBy?: StringNullableFilter<"CiRelationship"> | string | null
    sourceCi?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
    targetCi?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
    relationshipType?: XOR<CiRelationshipTypeScalarRelationFilter, CiRelationshipTypeWhereInput>
  }

  export type CiRelationshipOrderByWithRelationInput = {
    id?: SortOrder
    sourceCiId?: SortOrder
    targetCiId?: SortOrder
    relationshipTypeId?: SortOrder
    strength?: SortOrderInput | SortOrder
    criticality?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    attributes?: SortOrderInput | SortOrder
    isActive?: SortOrder
    validFrom?: SortOrderInput | SortOrder
    validTo?: SortOrderInput | SortOrder
    discoveredDate?: SortOrderInput | SortOrder
    isDiscovered?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    sourceCi?: ConfigurationItemOrderByWithRelationInput
    targetCi?: ConfigurationItemOrderByWithRelationInput
    relationshipType?: CiRelationshipTypeOrderByWithRelationInput
  }

  export type CiRelationshipWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sourceCiId_targetCiId_relationshipTypeId?: CiRelationshipSourceCiIdTargetCiIdRelationshipTypeIdCompoundUniqueInput
    AND?: CiRelationshipWhereInput | CiRelationshipWhereInput[]
    OR?: CiRelationshipWhereInput[]
    NOT?: CiRelationshipWhereInput | CiRelationshipWhereInput[]
    sourceCiId?: StringFilter<"CiRelationship"> | string
    targetCiId?: StringFilter<"CiRelationship"> | string
    relationshipTypeId?: StringFilter<"CiRelationship"> | string
    strength?: StringNullableFilter<"CiRelationship"> | string | null
    criticality?: StringNullableFilter<"CiRelationship"> | string | null
    description?: StringNullableFilter<"CiRelationship"> | string | null
    attributes?: JsonNullableFilter<"CiRelationship">
    isActive?: BoolFilter<"CiRelationship"> | boolean
    validFrom?: DateTimeNullableFilter<"CiRelationship"> | Date | string | null
    validTo?: DateTimeNullableFilter<"CiRelationship"> | Date | string | null
    discoveredDate?: DateTimeNullableFilter<"CiRelationship"> | Date | string | null
    isDiscovered?: BoolFilter<"CiRelationship"> | boolean
    createdAt?: DateTimeFilter<"CiRelationship"> | Date | string
    updatedAt?: DateTimeFilter<"CiRelationship"> | Date | string
    createdBy?: StringNullableFilter<"CiRelationship"> | string | null
    sourceCi?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
    targetCi?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
    relationshipType?: XOR<CiRelationshipTypeScalarRelationFilter, CiRelationshipTypeWhereInput>
  }, "id" | "sourceCiId_targetCiId_relationshipTypeId">

  export type CiRelationshipOrderByWithAggregationInput = {
    id?: SortOrder
    sourceCiId?: SortOrder
    targetCiId?: SortOrder
    relationshipTypeId?: SortOrder
    strength?: SortOrderInput | SortOrder
    criticality?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    attributes?: SortOrderInput | SortOrder
    isActive?: SortOrder
    validFrom?: SortOrderInput | SortOrder
    validTo?: SortOrderInput | SortOrder
    discoveredDate?: SortOrderInput | SortOrder
    isDiscovered?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    _count?: CiRelationshipCountOrderByAggregateInput
    _max?: CiRelationshipMaxOrderByAggregateInput
    _min?: CiRelationshipMinOrderByAggregateInput
  }

  export type CiRelationshipScalarWhereWithAggregatesInput = {
    AND?: CiRelationshipScalarWhereWithAggregatesInput | CiRelationshipScalarWhereWithAggregatesInput[]
    OR?: CiRelationshipScalarWhereWithAggregatesInput[]
    NOT?: CiRelationshipScalarWhereWithAggregatesInput | CiRelationshipScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CiRelationship"> | string
    sourceCiId?: StringWithAggregatesFilter<"CiRelationship"> | string
    targetCiId?: StringWithAggregatesFilter<"CiRelationship"> | string
    relationshipTypeId?: StringWithAggregatesFilter<"CiRelationship"> | string
    strength?: StringNullableWithAggregatesFilter<"CiRelationship"> | string | null
    criticality?: StringNullableWithAggregatesFilter<"CiRelationship"> | string | null
    description?: StringNullableWithAggregatesFilter<"CiRelationship"> | string | null
    attributes?: JsonNullableWithAggregatesFilter<"CiRelationship">
    isActive?: BoolWithAggregatesFilter<"CiRelationship"> | boolean
    validFrom?: DateTimeNullableWithAggregatesFilter<"CiRelationship"> | Date | string | null
    validTo?: DateTimeNullableWithAggregatesFilter<"CiRelationship"> | Date | string | null
    discoveredDate?: DateTimeNullableWithAggregatesFilter<"CiRelationship"> | Date | string | null
    isDiscovered?: BoolWithAggregatesFilter<"CiRelationship"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"CiRelationship"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CiRelationship"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"CiRelationship"> | string | null
  }

  export type HardwareCiWhereInput = {
    AND?: HardwareCiWhereInput | HardwareCiWhereInput[]
    OR?: HardwareCiWhereInput[]
    NOT?: HardwareCiWhereInput | HardwareCiWhereInput[]
    ciId?: StringFilter<"HardwareCi"> | string
    processorType?: StringNullableFilter<"HardwareCi"> | string | null
    processorSpeed?: StringNullableFilter<"HardwareCi"> | string | null
    coreCount?: IntNullableFilter<"HardwareCi"> | number | null
    memorySize?: StringNullableFilter<"HardwareCi"> | string | null
    storageSize?: StringNullableFilter<"HardwareCi"> | string | null
    storageType?: StringNullableFilter<"HardwareCi"> | string | null
    macAddress?: StringNullableFilter<"HardwareCi"> | string | null
    ipAddress?: StringNullableFilter<"HardwareCi"> | string | null
    portCount?: IntNullableFilter<"HardwareCi"> | number | null
    formFactor?: StringNullableFilter<"HardwareCi"> | string | null
    dimensions?: StringNullableFilter<"HardwareCi"> | string | null
    weight?: StringNullableFilter<"HardwareCi"> | string | null
    powerRequirements?: StringNullableFilter<"HardwareCi"> | string | null
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }

  export type HardwareCiOrderByWithRelationInput = {
    ciId?: SortOrder
    processorType?: SortOrderInput | SortOrder
    processorSpeed?: SortOrderInput | SortOrder
    coreCount?: SortOrderInput | SortOrder
    memorySize?: SortOrderInput | SortOrder
    storageSize?: SortOrderInput | SortOrder
    storageType?: SortOrderInput | SortOrder
    macAddress?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    portCount?: SortOrderInput | SortOrder
    formFactor?: SortOrderInput | SortOrder
    dimensions?: SortOrderInput | SortOrder
    weight?: SortOrderInput | SortOrder
    powerRequirements?: SortOrderInput | SortOrder
    configurationItem?: ConfigurationItemOrderByWithRelationInput
  }

  export type HardwareCiWhereUniqueInput = Prisma.AtLeast<{
    ciId?: string
    AND?: HardwareCiWhereInput | HardwareCiWhereInput[]
    OR?: HardwareCiWhereInput[]
    NOT?: HardwareCiWhereInput | HardwareCiWhereInput[]
    processorType?: StringNullableFilter<"HardwareCi"> | string | null
    processorSpeed?: StringNullableFilter<"HardwareCi"> | string | null
    coreCount?: IntNullableFilter<"HardwareCi"> | number | null
    memorySize?: StringNullableFilter<"HardwareCi"> | string | null
    storageSize?: StringNullableFilter<"HardwareCi"> | string | null
    storageType?: StringNullableFilter<"HardwareCi"> | string | null
    macAddress?: StringNullableFilter<"HardwareCi"> | string | null
    ipAddress?: StringNullableFilter<"HardwareCi"> | string | null
    portCount?: IntNullableFilter<"HardwareCi"> | number | null
    formFactor?: StringNullableFilter<"HardwareCi"> | string | null
    dimensions?: StringNullableFilter<"HardwareCi"> | string | null
    weight?: StringNullableFilter<"HardwareCi"> | string | null
    powerRequirements?: StringNullableFilter<"HardwareCi"> | string | null
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }, "ciId">

  export type HardwareCiOrderByWithAggregationInput = {
    ciId?: SortOrder
    processorType?: SortOrderInput | SortOrder
    processorSpeed?: SortOrderInput | SortOrder
    coreCount?: SortOrderInput | SortOrder
    memorySize?: SortOrderInput | SortOrder
    storageSize?: SortOrderInput | SortOrder
    storageType?: SortOrderInput | SortOrder
    macAddress?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    portCount?: SortOrderInput | SortOrder
    formFactor?: SortOrderInput | SortOrder
    dimensions?: SortOrderInput | SortOrder
    weight?: SortOrderInput | SortOrder
    powerRequirements?: SortOrderInput | SortOrder
    _count?: HardwareCiCountOrderByAggregateInput
    _avg?: HardwareCiAvgOrderByAggregateInput
    _max?: HardwareCiMaxOrderByAggregateInput
    _min?: HardwareCiMinOrderByAggregateInput
    _sum?: HardwareCiSumOrderByAggregateInput
  }

  export type HardwareCiScalarWhereWithAggregatesInput = {
    AND?: HardwareCiScalarWhereWithAggregatesInput | HardwareCiScalarWhereWithAggregatesInput[]
    OR?: HardwareCiScalarWhereWithAggregatesInput[]
    NOT?: HardwareCiScalarWhereWithAggregatesInput | HardwareCiScalarWhereWithAggregatesInput[]
    ciId?: StringWithAggregatesFilter<"HardwareCi"> | string
    processorType?: StringNullableWithAggregatesFilter<"HardwareCi"> | string | null
    processorSpeed?: StringNullableWithAggregatesFilter<"HardwareCi"> | string | null
    coreCount?: IntNullableWithAggregatesFilter<"HardwareCi"> | number | null
    memorySize?: StringNullableWithAggregatesFilter<"HardwareCi"> | string | null
    storageSize?: StringNullableWithAggregatesFilter<"HardwareCi"> | string | null
    storageType?: StringNullableWithAggregatesFilter<"HardwareCi"> | string | null
    macAddress?: StringNullableWithAggregatesFilter<"HardwareCi"> | string | null
    ipAddress?: StringNullableWithAggregatesFilter<"HardwareCi"> | string | null
    portCount?: IntNullableWithAggregatesFilter<"HardwareCi"> | number | null
    formFactor?: StringNullableWithAggregatesFilter<"HardwareCi"> | string | null
    dimensions?: StringNullableWithAggregatesFilter<"HardwareCi"> | string | null
    weight?: StringNullableWithAggregatesFilter<"HardwareCi"> | string | null
    powerRequirements?: StringNullableWithAggregatesFilter<"HardwareCi"> | string | null
  }

  export type SoftwareCiWhereInput = {
    AND?: SoftwareCiWhereInput | SoftwareCiWhereInput[]
    OR?: SoftwareCiWhereInput[]
    NOT?: SoftwareCiWhereInput | SoftwareCiWhereInput[]
    ciId?: StringFilter<"SoftwareCi"> | string
    version?: StringNullableFilter<"SoftwareCi"> | string | null
    edition?: StringNullableFilter<"SoftwareCi"> | string | null
    architecture?: StringNullableFilter<"SoftwareCi"> | string | null
    licenseType?: StringNullableFilter<"SoftwareCi"> | string | null
    licenseKey?: StringNullableFilter<"SoftwareCi"> | string | null
    licenseCount?: IntNullableFilter<"SoftwareCi"> | number | null
    installPath?: StringNullableFilter<"SoftwareCi"> | string | null
    installDate?: DateTimeNullableFilter<"SoftwareCi"> | Date | string | null
    installedBy?: StringNullableFilter<"SoftwareCi"> | string | null
    isLatestVersion?: BoolNullableFilter<"SoftwareCi"> | boolean | null
    patchLevel?: StringNullableFilter<"SoftwareCi"> | string | null
    supportEndDate?: DateTimeNullableFilter<"SoftwareCi"> | Date | string | null
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }

  export type SoftwareCiOrderByWithRelationInput = {
    ciId?: SortOrder
    version?: SortOrderInput | SortOrder
    edition?: SortOrderInput | SortOrder
    architecture?: SortOrderInput | SortOrder
    licenseType?: SortOrderInput | SortOrder
    licenseKey?: SortOrderInput | SortOrder
    licenseCount?: SortOrderInput | SortOrder
    installPath?: SortOrderInput | SortOrder
    installDate?: SortOrderInput | SortOrder
    installedBy?: SortOrderInput | SortOrder
    isLatestVersion?: SortOrderInput | SortOrder
    patchLevel?: SortOrderInput | SortOrder
    supportEndDate?: SortOrderInput | SortOrder
    configurationItem?: ConfigurationItemOrderByWithRelationInput
  }

  export type SoftwareCiWhereUniqueInput = Prisma.AtLeast<{
    ciId?: string
    AND?: SoftwareCiWhereInput | SoftwareCiWhereInput[]
    OR?: SoftwareCiWhereInput[]
    NOT?: SoftwareCiWhereInput | SoftwareCiWhereInput[]
    version?: StringNullableFilter<"SoftwareCi"> | string | null
    edition?: StringNullableFilter<"SoftwareCi"> | string | null
    architecture?: StringNullableFilter<"SoftwareCi"> | string | null
    licenseType?: StringNullableFilter<"SoftwareCi"> | string | null
    licenseKey?: StringNullableFilter<"SoftwareCi"> | string | null
    licenseCount?: IntNullableFilter<"SoftwareCi"> | number | null
    installPath?: StringNullableFilter<"SoftwareCi"> | string | null
    installDate?: DateTimeNullableFilter<"SoftwareCi"> | Date | string | null
    installedBy?: StringNullableFilter<"SoftwareCi"> | string | null
    isLatestVersion?: BoolNullableFilter<"SoftwareCi"> | boolean | null
    patchLevel?: StringNullableFilter<"SoftwareCi"> | string | null
    supportEndDate?: DateTimeNullableFilter<"SoftwareCi"> | Date | string | null
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }, "ciId">

  export type SoftwareCiOrderByWithAggregationInput = {
    ciId?: SortOrder
    version?: SortOrderInput | SortOrder
    edition?: SortOrderInput | SortOrder
    architecture?: SortOrderInput | SortOrder
    licenseType?: SortOrderInput | SortOrder
    licenseKey?: SortOrderInput | SortOrder
    licenseCount?: SortOrderInput | SortOrder
    installPath?: SortOrderInput | SortOrder
    installDate?: SortOrderInput | SortOrder
    installedBy?: SortOrderInput | SortOrder
    isLatestVersion?: SortOrderInput | SortOrder
    patchLevel?: SortOrderInput | SortOrder
    supportEndDate?: SortOrderInput | SortOrder
    _count?: SoftwareCiCountOrderByAggregateInput
    _avg?: SoftwareCiAvgOrderByAggregateInput
    _max?: SoftwareCiMaxOrderByAggregateInput
    _min?: SoftwareCiMinOrderByAggregateInput
    _sum?: SoftwareCiSumOrderByAggregateInput
  }

  export type SoftwareCiScalarWhereWithAggregatesInput = {
    AND?: SoftwareCiScalarWhereWithAggregatesInput | SoftwareCiScalarWhereWithAggregatesInput[]
    OR?: SoftwareCiScalarWhereWithAggregatesInput[]
    NOT?: SoftwareCiScalarWhereWithAggregatesInput | SoftwareCiScalarWhereWithAggregatesInput[]
    ciId?: StringWithAggregatesFilter<"SoftwareCi"> | string
    version?: StringNullableWithAggregatesFilter<"SoftwareCi"> | string | null
    edition?: StringNullableWithAggregatesFilter<"SoftwareCi"> | string | null
    architecture?: StringNullableWithAggregatesFilter<"SoftwareCi"> | string | null
    licenseType?: StringNullableWithAggregatesFilter<"SoftwareCi"> | string | null
    licenseKey?: StringNullableWithAggregatesFilter<"SoftwareCi"> | string | null
    licenseCount?: IntNullableWithAggregatesFilter<"SoftwareCi"> | number | null
    installPath?: StringNullableWithAggregatesFilter<"SoftwareCi"> | string | null
    installDate?: DateTimeNullableWithAggregatesFilter<"SoftwareCi"> | Date | string | null
    installedBy?: StringNullableWithAggregatesFilter<"SoftwareCi"> | string | null
    isLatestVersion?: BoolNullableWithAggregatesFilter<"SoftwareCi"> | boolean | null
    patchLevel?: StringNullableWithAggregatesFilter<"SoftwareCi"> | string | null
    supportEndDate?: DateTimeNullableWithAggregatesFilter<"SoftwareCi"> | Date | string | null
  }

  export type ApplicationCiWhereInput = {
    AND?: ApplicationCiWhereInput | ApplicationCiWhereInput[]
    OR?: ApplicationCiWhereInput[]
    NOT?: ApplicationCiWhereInput | ApplicationCiWhereInput[]
    ciId?: StringFilter<"ApplicationCi"> | string
    applicationUrl?: StringNullableFilter<"ApplicationCi"> | string | null
    applicationPort?: IntNullableFilter<"ApplicationCi"> | number | null
    applicationProtocol?: StringNullableFilter<"ApplicationCi"> | string | null
    businessFunction?: StringNullableFilter<"ApplicationCi"> | string | null
    userCount?: IntNullableFilter<"ApplicationCi"> | number | null
    dataClassification?: StringNullableFilter<"ApplicationCi"> | string | null
    programmingLanguage?: StringNullableFilter<"ApplicationCi"> | string | null
    framework?: StringNullableFilter<"ApplicationCi"> | string | null
    databaseType?: StringNullableFilter<"ApplicationCi"> | string | null
    slaTarget?: StringNullableFilter<"ApplicationCi"> | string | null
    availabilityTarget?: DecimalNullableFilter<"ApplicationCi"> | Decimal | DecimalJsLike | number | string | null
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }

  export type ApplicationCiOrderByWithRelationInput = {
    ciId?: SortOrder
    applicationUrl?: SortOrderInput | SortOrder
    applicationPort?: SortOrderInput | SortOrder
    applicationProtocol?: SortOrderInput | SortOrder
    businessFunction?: SortOrderInput | SortOrder
    userCount?: SortOrderInput | SortOrder
    dataClassification?: SortOrderInput | SortOrder
    programmingLanguage?: SortOrderInput | SortOrder
    framework?: SortOrderInput | SortOrder
    databaseType?: SortOrderInput | SortOrder
    slaTarget?: SortOrderInput | SortOrder
    availabilityTarget?: SortOrderInput | SortOrder
    configurationItem?: ConfigurationItemOrderByWithRelationInput
  }

  export type ApplicationCiWhereUniqueInput = Prisma.AtLeast<{
    ciId?: string
    AND?: ApplicationCiWhereInput | ApplicationCiWhereInput[]
    OR?: ApplicationCiWhereInput[]
    NOT?: ApplicationCiWhereInput | ApplicationCiWhereInput[]
    applicationUrl?: StringNullableFilter<"ApplicationCi"> | string | null
    applicationPort?: IntNullableFilter<"ApplicationCi"> | number | null
    applicationProtocol?: StringNullableFilter<"ApplicationCi"> | string | null
    businessFunction?: StringNullableFilter<"ApplicationCi"> | string | null
    userCount?: IntNullableFilter<"ApplicationCi"> | number | null
    dataClassification?: StringNullableFilter<"ApplicationCi"> | string | null
    programmingLanguage?: StringNullableFilter<"ApplicationCi"> | string | null
    framework?: StringNullableFilter<"ApplicationCi"> | string | null
    databaseType?: StringNullableFilter<"ApplicationCi"> | string | null
    slaTarget?: StringNullableFilter<"ApplicationCi"> | string | null
    availabilityTarget?: DecimalNullableFilter<"ApplicationCi"> | Decimal | DecimalJsLike | number | string | null
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }, "ciId">

  export type ApplicationCiOrderByWithAggregationInput = {
    ciId?: SortOrder
    applicationUrl?: SortOrderInput | SortOrder
    applicationPort?: SortOrderInput | SortOrder
    applicationProtocol?: SortOrderInput | SortOrder
    businessFunction?: SortOrderInput | SortOrder
    userCount?: SortOrderInput | SortOrder
    dataClassification?: SortOrderInput | SortOrder
    programmingLanguage?: SortOrderInput | SortOrder
    framework?: SortOrderInput | SortOrder
    databaseType?: SortOrderInput | SortOrder
    slaTarget?: SortOrderInput | SortOrder
    availabilityTarget?: SortOrderInput | SortOrder
    _count?: ApplicationCiCountOrderByAggregateInput
    _avg?: ApplicationCiAvgOrderByAggregateInput
    _max?: ApplicationCiMaxOrderByAggregateInput
    _min?: ApplicationCiMinOrderByAggregateInput
    _sum?: ApplicationCiSumOrderByAggregateInput
  }

  export type ApplicationCiScalarWhereWithAggregatesInput = {
    AND?: ApplicationCiScalarWhereWithAggregatesInput | ApplicationCiScalarWhereWithAggregatesInput[]
    OR?: ApplicationCiScalarWhereWithAggregatesInput[]
    NOT?: ApplicationCiScalarWhereWithAggregatesInput | ApplicationCiScalarWhereWithAggregatesInput[]
    ciId?: StringWithAggregatesFilter<"ApplicationCi"> | string
    applicationUrl?: StringNullableWithAggregatesFilter<"ApplicationCi"> | string | null
    applicationPort?: IntNullableWithAggregatesFilter<"ApplicationCi"> | number | null
    applicationProtocol?: StringNullableWithAggregatesFilter<"ApplicationCi"> | string | null
    businessFunction?: StringNullableWithAggregatesFilter<"ApplicationCi"> | string | null
    userCount?: IntNullableWithAggregatesFilter<"ApplicationCi"> | number | null
    dataClassification?: StringNullableWithAggregatesFilter<"ApplicationCi"> | string | null
    programmingLanguage?: StringNullableWithAggregatesFilter<"ApplicationCi"> | string | null
    framework?: StringNullableWithAggregatesFilter<"ApplicationCi"> | string | null
    databaseType?: StringNullableWithAggregatesFilter<"ApplicationCi"> | string | null
    slaTarget?: StringNullableWithAggregatesFilter<"ApplicationCi"> | string | null
    availabilityTarget?: DecimalNullableWithAggregatesFilter<"ApplicationCi"> | Decimal | DecimalJsLike | number | string | null
  }

  export type NetworkCiWhereInput = {
    AND?: NetworkCiWhereInput | NetworkCiWhereInput[]
    OR?: NetworkCiWhereInput[]
    NOT?: NetworkCiWhereInput | NetworkCiWhereInput[]
    ciId?: StringFilter<"NetworkCi"> | string
    ipAddress?: StringNullableFilter<"NetworkCi"> | string | null
    subnetMask?: StringNullableFilter<"NetworkCi"> | string | null
    gateway?: StringNullableFilter<"NetworkCi"> | string | null
    vlanId?: StringNullableFilter<"NetworkCi"> | string | null
    portConfiguration?: JsonNullableFilter<"NetworkCi">
    routingTable?: JsonNullableFilter<"NetworkCi">
    firewallRules?: JsonNullableFilter<"NetworkCi">
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }

  export type NetworkCiOrderByWithRelationInput = {
    ciId?: SortOrder
    ipAddress?: SortOrderInput | SortOrder
    subnetMask?: SortOrderInput | SortOrder
    gateway?: SortOrderInput | SortOrder
    vlanId?: SortOrderInput | SortOrder
    portConfiguration?: SortOrderInput | SortOrder
    routingTable?: SortOrderInput | SortOrder
    firewallRules?: SortOrderInput | SortOrder
    configurationItem?: ConfigurationItemOrderByWithRelationInput
  }

  export type NetworkCiWhereUniqueInput = Prisma.AtLeast<{
    ciId?: string
    AND?: NetworkCiWhereInput | NetworkCiWhereInput[]
    OR?: NetworkCiWhereInput[]
    NOT?: NetworkCiWhereInput | NetworkCiWhereInput[]
    ipAddress?: StringNullableFilter<"NetworkCi"> | string | null
    subnetMask?: StringNullableFilter<"NetworkCi"> | string | null
    gateway?: StringNullableFilter<"NetworkCi"> | string | null
    vlanId?: StringNullableFilter<"NetworkCi"> | string | null
    portConfiguration?: JsonNullableFilter<"NetworkCi">
    routingTable?: JsonNullableFilter<"NetworkCi">
    firewallRules?: JsonNullableFilter<"NetworkCi">
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }, "ciId">

  export type NetworkCiOrderByWithAggregationInput = {
    ciId?: SortOrder
    ipAddress?: SortOrderInput | SortOrder
    subnetMask?: SortOrderInput | SortOrder
    gateway?: SortOrderInput | SortOrder
    vlanId?: SortOrderInput | SortOrder
    portConfiguration?: SortOrderInput | SortOrder
    routingTable?: SortOrderInput | SortOrder
    firewallRules?: SortOrderInput | SortOrder
    _count?: NetworkCiCountOrderByAggregateInput
    _max?: NetworkCiMaxOrderByAggregateInput
    _min?: NetworkCiMinOrderByAggregateInput
  }

  export type NetworkCiScalarWhereWithAggregatesInput = {
    AND?: NetworkCiScalarWhereWithAggregatesInput | NetworkCiScalarWhereWithAggregatesInput[]
    OR?: NetworkCiScalarWhereWithAggregatesInput[]
    NOT?: NetworkCiScalarWhereWithAggregatesInput | NetworkCiScalarWhereWithAggregatesInput[]
    ciId?: StringWithAggregatesFilter<"NetworkCi"> | string
    ipAddress?: StringNullableWithAggregatesFilter<"NetworkCi"> | string | null
    subnetMask?: StringNullableWithAggregatesFilter<"NetworkCi"> | string | null
    gateway?: StringNullableWithAggregatesFilter<"NetworkCi"> | string | null
    vlanId?: StringNullableWithAggregatesFilter<"NetworkCi"> | string | null
    portConfiguration?: JsonNullableWithAggregatesFilter<"NetworkCi">
    routingTable?: JsonNullableWithAggregatesFilter<"NetworkCi">
    firewallRules?: JsonNullableWithAggregatesFilter<"NetworkCi">
  }

  export type ServiceCiWhereInput = {
    AND?: ServiceCiWhereInput | ServiceCiWhereInput[]
    OR?: ServiceCiWhereInput[]
    NOT?: ServiceCiWhereInput | ServiceCiWhereInput[]
    ciId?: StringFilter<"ServiceCi"> | string
    serviceType?: StringNullableFilter<"ServiceCi"> | string | null
    serviceLevel?: StringNullableFilter<"ServiceCi"> | string | null
    businessOwner?: StringNullableFilter<"ServiceCi"> | string | null
    slaDocument?: StringNullableFilter<"ServiceCi"> | string | null
    availabilityTarget?: DecimalNullableFilter<"ServiceCi"> | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: StringNullableFilter<"ServiceCi"> | string | null
    serviceHours?: JsonNullableFilter<"ServiceCi">
    maintenanceWindow?: JsonNullableFilter<"ServiceCi">
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }

  export type ServiceCiOrderByWithRelationInput = {
    ciId?: SortOrder
    serviceType?: SortOrderInput | SortOrder
    serviceLevel?: SortOrderInput | SortOrder
    businessOwner?: SortOrderInput | SortOrder
    slaDocument?: SortOrderInput | SortOrder
    availabilityTarget?: SortOrderInput | SortOrder
    performanceTarget?: SortOrderInput | SortOrder
    serviceHours?: SortOrderInput | SortOrder
    maintenanceWindow?: SortOrderInput | SortOrder
    configurationItem?: ConfigurationItemOrderByWithRelationInput
  }

  export type ServiceCiWhereUniqueInput = Prisma.AtLeast<{
    ciId?: string
    AND?: ServiceCiWhereInput | ServiceCiWhereInput[]
    OR?: ServiceCiWhereInput[]
    NOT?: ServiceCiWhereInput | ServiceCiWhereInput[]
    serviceType?: StringNullableFilter<"ServiceCi"> | string | null
    serviceLevel?: StringNullableFilter<"ServiceCi"> | string | null
    businessOwner?: StringNullableFilter<"ServiceCi"> | string | null
    slaDocument?: StringNullableFilter<"ServiceCi"> | string | null
    availabilityTarget?: DecimalNullableFilter<"ServiceCi"> | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: StringNullableFilter<"ServiceCi"> | string | null
    serviceHours?: JsonNullableFilter<"ServiceCi">
    maintenanceWindow?: JsonNullableFilter<"ServiceCi">
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }, "ciId">

  export type ServiceCiOrderByWithAggregationInput = {
    ciId?: SortOrder
    serviceType?: SortOrderInput | SortOrder
    serviceLevel?: SortOrderInput | SortOrder
    businessOwner?: SortOrderInput | SortOrder
    slaDocument?: SortOrderInput | SortOrder
    availabilityTarget?: SortOrderInput | SortOrder
    performanceTarget?: SortOrderInput | SortOrder
    serviceHours?: SortOrderInput | SortOrder
    maintenanceWindow?: SortOrderInput | SortOrder
    _count?: ServiceCiCountOrderByAggregateInput
    _avg?: ServiceCiAvgOrderByAggregateInput
    _max?: ServiceCiMaxOrderByAggregateInput
    _min?: ServiceCiMinOrderByAggregateInput
    _sum?: ServiceCiSumOrderByAggregateInput
  }

  export type ServiceCiScalarWhereWithAggregatesInput = {
    AND?: ServiceCiScalarWhereWithAggregatesInput | ServiceCiScalarWhereWithAggregatesInput[]
    OR?: ServiceCiScalarWhereWithAggregatesInput[]
    NOT?: ServiceCiScalarWhereWithAggregatesInput | ServiceCiScalarWhereWithAggregatesInput[]
    ciId?: StringWithAggregatesFilter<"ServiceCi"> | string
    serviceType?: StringNullableWithAggregatesFilter<"ServiceCi"> | string | null
    serviceLevel?: StringNullableWithAggregatesFilter<"ServiceCi"> | string | null
    businessOwner?: StringNullableWithAggregatesFilter<"ServiceCi"> | string | null
    slaDocument?: StringNullableWithAggregatesFilter<"ServiceCi"> | string | null
    availabilityTarget?: DecimalNullableWithAggregatesFilter<"ServiceCi"> | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: StringNullableWithAggregatesFilter<"ServiceCi"> | string | null
    serviceHours?: JsonNullableWithAggregatesFilter<"ServiceCi">
    maintenanceWindow?: JsonNullableWithAggregatesFilter<"ServiceCi">
  }

  export type DatabaseCiWhereInput = {
    AND?: DatabaseCiWhereInput | DatabaseCiWhereInput[]
    OR?: DatabaseCiWhereInput[]
    NOT?: DatabaseCiWhereInput | DatabaseCiWhereInput[]
    ciId?: StringFilter<"DatabaseCi"> | string
    databaseType?: StringNullableFilter<"DatabaseCi"> | string | null
    databaseVersion?: StringNullableFilter<"DatabaseCi"> | string | null
    databaseSize?: StringNullableFilter<"DatabaseCi"> | string | null
    connectionString?: StringNullableFilter<"DatabaseCi"> | string | null
    port?: IntNullableFilter<"DatabaseCi"> | number | null
    schemaCount?: IntNullableFilter<"DatabaseCi"> | number | null
    backupSchedule?: JsonNullableFilter<"DatabaseCi">
    lastBackupDate?: DateTimeNullableFilter<"DatabaseCi"> | Date | string | null
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }

  export type DatabaseCiOrderByWithRelationInput = {
    ciId?: SortOrder
    databaseType?: SortOrderInput | SortOrder
    databaseVersion?: SortOrderInput | SortOrder
    databaseSize?: SortOrderInput | SortOrder
    connectionString?: SortOrderInput | SortOrder
    port?: SortOrderInput | SortOrder
    schemaCount?: SortOrderInput | SortOrder
    backupSchedule?: SortOrderInput | SortOrder
    lastBackupDate?: SortOrderInput | SortOrder
    configurationItem?: ConfigurationItemOrderByWithRelationInput
  }

  export type DatabaseCiWhereUniqueInput = Prisma.AtLeast<{
    ciId?: string
    AND?: DatabaseCiWhereInput | DatabaseCiWhereInput[]
    OR?: DatabaseCiWhereInput[]
    NOT?: DatabaseCiWhereInput | DatabaseCiWhereInput[]
    databaseType?: StringNullableFilter<"DatabaseCi"> | string | null
    databaseVersion?: StringNullableFilter<"DatabaseCi"> | string | null
    databaseSize?: StringNullableFilter<"DatabaseCi"> | string | null
    connectionString?: StringNullableFilter<"DatabaseCi"> | string | null
    port?: IntNullableFilter<"DatabaseCi"> | number | null
    schemaCount?: IntNullableFilter<"DatabaseCi"> | number | null
    backupSchedule?: JsonNullableFilter<"DatabaseCi">
    lastBackupDate?: DateTimeNullableFilter<"DatabaseCi"> | Date | string | null
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }, "ciId">

  export type DatabaseCiOrderByWithAggregationInput = {
    ciId?: SortOrder
    databaseType?: SortOrderInput | SortOrder
    databaseVersion?: SortOrderInput | SortOrder
    databaseSize?: SortOrderInput | SortOrder
    connectionString?: SortOrderInput | SortOrder
    port?: SortOrderInput | SortOrder
    schemaCount?: SortOrderInput | SortOrder
    backupSchedule?: SortOrderInput | SortOrder
    lastBackupDate?: SortOrderInput | SortOrder
    _count?: DatabaseCiCountOrderByAggregateInput
    _avg?: DatabaseCiAvgOrderByAggregateInput
    _max?: DatabaseCiMaxOrderByAggregateInput
    _min?: DatabaseCiMinOrderByAggregateInput
    _sum?: DatabaseCiSumOrderByAggregateInput
  }

  export type DatabaseCiScalarWhereWithAggregatesInput = {
    AND?: DatabaseCiScalarWhereWithAggregatesInput | DatabaseCiScalarWhereWithAggregatesInput[]
    OR?: DatabaseCiScalarWhereWithAggregatesInput[]
    NOT?: DatabaseCiScalarWhereWithAggregatesInput | DatabaseCiScalarWhereWithAggregatesInput[]
    ciId?: StringWithAggregatesFilter<"DatabaseCi"> | string
    databaseType?: StringNullableWithAggregatesFilter<"DatabaseCi"> | string | null
    databaseVersion?: StringNullableWithAggregatesFilter<"DatabaseCi"> | string | null
    databaseSize?: StringNullableWithAggregatesFilter<"DatabaseCi"> | string | null
    connectionString?: StringNullableWithAggregatesFilter<"DatabaseCi"> | string | null
    port?: IntNullableWithAggregatesFilter<"DatabaseCi"> | number | null
    schemaCount?: IntNullableWithAggregatesFilter<"DatabaseCi"> | number | null
    backupSchedule?: JsonNullableWithAggregatesFilter<"DatabaseCi">
    lastBackupDate?: DateTimeNullableWithAggregatesFilter<"DatabaseCi"> | Date | string | null
  }

  export type VirtualCiWhereInput = {
    AND?: VirtualCiWhereInput | VirtualCiWhereInput[]
    OR?: VirtualCiWhereInput[]
    NOT?: VirtualCiWhereInput | VirtualCiWhereInput[]
    ciId?: StringFilter<"VirtualCi"> | string
    hypervisorType?: StringNullableFilter<"VirtualCi"> | string | null
    hostCiId?: StringNullableFilter<"VirtualCi"> | string | null
    allocatedCpu?: IntNullableFilter<"VirtualCi"> | number | null
    allocatedMemory?: StringNullableFilter<"VirtualCi"> | string | null
    allocatedStorage?: StringNullableFilter<"VirtualCi"> | string | null
    virtualNetworks?: JsonNullableFilter<"VirtualCi">
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }

  export type VirtualCiOrderByWithRelationInput = {
    ciId?: SortOrder
    hypervisorType?: SortOrderInput | SortOrder
    hostCiId?: SortOrderInput | SortOrder
    allocatedCpu?: SortOrderInput | SortOrder
    allocatedMemory?: SortOrderInput | SortOrder
    allocatedStorage?: SortOrderInput | SortOrder
    virtualNetworks?: SortOrderInput | SortOrder
    configurationItem?: ConfigurationItemOrderByWithRelationInput
  }

  export type VirtualCiWhereUniqueInput = Prisma.AtLeast<{
    ciId?: string
    AND?: VirtualCiWhereInput | VirtualCiWhereInput[]
    OR?: VirtualCiWhereInput[]
    NOT?: VirtualCiWhereInput | VirtualCiWhereInput[]
    hypervisorType?: StringNullableFilter<"VirtualCi"> | string | null
    hostCiId?: StringNullableFilter<"VirtualCi"> | string | null
    allocatedCpu?: IntNullableFilter<"VirtualCi"> | number | null
    allocatedMemory?: StringNullableFilter<"VirtualCi"> | string | null
    allocatedStorage?: StringNullableFilter<"VirtualCi"> | string | null
    virtualNetworks?: JsonNullableFilter<"VirtualCi">
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }, "ciId">

  export type VirtualCiOrderByWithAggregationInput = {
    ciId?: SortOrder
    hypervisorType?: SortOrderInput | SortOrder
    hostCiId?: SortOrderInput | SortOrder
    allocatedCpu?: SortOrderInput | SortOrder
    allocatedMemory?: SortOrderInput | SortOrder
    allocatedStorage?: SortOrderInput | SortOrder
    virtualNetworks?: SortOrderInput | SortOrder
    _count?: VirtualCiCountOrderByAggregateInput
    _avg?: VirtualCiAvgOrderByAggregateInput
    _max?: VirtualCiMaxOrderByAggregateInput
    _min?: VirtualCiMinOrderByAggregateInput
    _sum?: VirtualCiSumOrderByAggregateInput
  }

  export type VirtualCiScalarWhereWithAggregatesInput = {
    AND?: VirtualCiScalarWhereWithAggregatesInput | VirtualCiScalarWhereWithAggregatesInput[]
    OR?: VirtualCiScalarWhereWithAggregatesInput[]
    NOT?: VirtualCiScalarWhereWithAggregatesInput | VirtualCiScalarWhereWithAggregatesInput[]
    ciId?: StringWithAggregatesFilter<"VirtualCi"> | string
    hypervisorType?: StringNullableWithAggregatesFilter<"VirtualCi"> | string | null
    hostCiId?: StringNullableWithAggregatesFilter<"VirtualCi"> | string | null
    allocatedCpu?: IntNullableWithAggregatesFilter<"VirtualCi"> | number | null
    allocatedMemory?: StringNullableWithAggregatesFilter<"VirtualCi"> | string | null
    allocatedStorage?: StringNullableWithAggregatesFilter<"VirtualCi"> | string | null
    virtualNetworks?: JsonNullableWithAggregatesFilter<"VirtualCi">
  }

  export type FacilityCiWhereInput = {
    AND?: FacilityCiWhereInput | FacilityCiWhereInput[]
    OR?: FacilityCiWhereInput[]
    NOT?: FacilityCiWhereInput | FacilityCiWhereInput[]
    ciId?: StringFilter<"FacilityCi"> | string
    facilityType?: StringNullableFilter<"FacilityCi"> | string | null
    address?: StringNullableFilter<"FacilityCi"> | string | null
    coordinates?: StringNullableFilter<"FacilityCi"> | string | null
    squareFootage?: IntNullableFilter<"FacilityCi"> | number | null
    capacity?: IntNullableFilter<"FacilityCi"> | number | null
    powerCapacity?: StringNullableFilter<"FacilityCi"> | string | null
    coolingCapacity?: StringNullableFilter<"FacilityCi"> | string | null
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }

  export type FacilityCiOrderByWithRelationInput = {
    ciId?: SortOrder
    facilityType?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    coordinates?: SortOrderInput | SortOrder
    squareFootage?: SortOrderInput | SortOrder
    capacity?: SortOrderInput | SortOrder
    powerCapacity?: SortOrderInput | SortOrder
    coolingCapacity?: SortOrderInput | SortOrder
    configurationItem?: ConfigurationItemOrderByWithRelationInput
  }

  export type FacilityCiWhereUniqueInput = Prisma.AtLeast<{
    ciId?: string
    AND?: FacilityCiWhereInput | FacilityCiWhereInput[]
    OR?: FacilityCiWhereInput[]
    NOT?: FacilityCiWhereInput | FacilityCiWhereInput[]
    facilityType?: StringNullableFilter<"FacilityCi"> | string | null
    address?: StringNullableFilter<"FacilityCi"> | string | null
    coordinates?: StringNullableFilter<"FacilityCi"> | string | null
    squareFootage?: IntNullableFilter<"FacilityCi"> | number | null
    capacity?: IntNullableFilter<"FacilityCi"> | number | null
    powerCapacity?: StringNullableFilter<"FacilityCi"> | string | null
    coolingCapacity?: StringNullableFilter<"FacilityCi"> | string | null
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }, "ciId">

  export type FacilityCiOrderByWithAggregationInput = {
    ciId?: SortOrder
    facilityType?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    coordinates?: SortOrderInput | SortOrder
    squareFootage?: SortOrderInput | SortOrder
    capacity?: SortOrderInput | SortOrder
    powerCapacity?: SortOrderInput | SortOrder
    coolingCapacity?: SortOrderInput | SortOrder
    _count?: FacilityCiCountOrderByAggregateInput
    _avg?: FacilityCiAvgOrderByAggregateInput
    _max?: FacilityCiMaxOrderByAggregateInput
    _min?: FacilityCiMinOrderByAggregateInput
    _sum?: FacilityCiSumOrderByAggregateInput
  }

  export type FacilityCiScalarWhereWithAggregatesInput = {
    AND?: FacilityCiScalarWhereWithAggregatesInput | FacilityCiScalarWhereWithAggregatesInput[]
    OR?: FacilityCiScalarWhereWithAggregatesInput[]
    NOT?: FacilityCiScalarWhereWithAggregatesInput | FacilityCiScalarWhereWithAggregatesInput[]
    ciId?: StringWithAggregatesFilter<"FacilityCi"> | string
    facilityType?: StringNullableWithAggregatesFilter<"FacilityCi"> | string | null
    address?: StringNullableWithAggregatesFilter<"FacilityCi"> | string | null
    coordinates?: StringNullableWithAggregatesFilter<"FacilityCi"> | string | null
    squareFootage?: IntNullableWithAggregatesFilter<"FacilityCi"> | number | null
    capacity?: IntNullableWithAggregatesFilter<"FacilityCi"> | number | null
    powerCapacity?: StringNullableWithAggregatesFilter<"FacilityCi"> | string | null
    coolingCapacity?: StringNullableWithAggregatesFilter<"FacilityCi"> | string | null
  }

  export type BusinessServiceWhereInput = {
    AND?: BusinessServiceWhereInput | BusinessServiceWhereInput[]
    OR?: BusinessServiceWhereInput[]
    NOT?: BusinessServiceWhereInput | BusinessServiceWhereInput[]
    id?: StringFilter<"BusinessService"> | string
    name?: StringFilter<"BusinessService"> | string
    description?: StringNullableFilter<"BusinessService"> | string | null
    businessOwner?: StringNullableFilter<"BusinessService"> | string | null
    technicalOwner?: StringNullableFilter<"BusinessService"> | string | null
    criticality?: StringNullableFilter<"BusinessService"> | string | null
    availabilityTarget?: DecimalNullableFilter<"BusinessService"> | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: StringNullableFilter<"BusinessService"> | string | null
    createdAt?: DateTimeFilter<"BusinessService"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessService"> | Date | string
    configurationItems?: CiBusinessServiceListRelationFilter
  }

  export type BusinessServiceOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    businessOwner?: SortOrderInput | SortOrder
    technicalOwner?: SortOrderInput | SortOrder
    criticality?: SortOrderInput | SortOrder
    availabilityTarget?: SortOrderInput | SortOrder
    performanceTarget?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    configurationItems?: CiBusinessServiceOrderByRelationAggregateInput
  }

  export type BusinessServiceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: BusinessServiceWhereInput | BusinessServiceWhereInput[]
    OR?: BusinessServiceWhereInput[]
    NOT?: BusinessServiceWhereInput | BusinessServiceWhereInput[]
    description?: StringNullableFilter<"BusinessService"> | string | null
    businessOwner?: StringNullableFilter<"BusinessService"> | string | null
    technicalOwner?: StringNullableFilter<"BusinessService"> | string | null
    criticality?: StringNullableFilter<"BusinessService"> | string | null
    availabilityTarget?: DecimalNullableFilter<"BusinessService"> | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: StringNullableFilter<"BusinessService"> | string | null
    createdAt?: DateTimeFilter<"BusinessService"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessService"> | Date | string
    configurationItems?: CiBusinessServiceListRelationFilter
  }, "id" | "name">

  export type BusinessServiceOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    businessOwner?: SortOrderInput | SortOrder
    technicalOwner?: SortOrderInput | SortOrder
    criticality?: SortOrderInput | SortOrder
    availabilityTarget?: SortOrderInput | SortOrder
    performanceTarget?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BusinessServiceCountOrderByAggregateInput
    _avg?: BusinessServiceAvgOrderByAggregateInput
    _max?: BusinessServiceMaxOrderByAggregateInput
    _min?: BusinessServiceMinOrderByAggregateInput
    _sum?: BusinessServiceSumOrderByAggregateInput
  }

  export type BusinessServiceScalarWhereWithAggregatesInput = {
    AND?: BusinessServiceScalarWhereWithAggregatesInput | BusinessServiceScalarWhereWithAggregatesInput[]
    OR?: BusinessServiceScalarWhereWithAggregatesInput[]
    NOT?: BusinessServiceScalarWhereWithAggregatesInput | BusinessServiceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BusinessService"> | string
    name?: StringWithAggregatesFilter<"BusinessService"> | string
    description?: StringNullableWithAggregatesFilter<"BusinessService"> | string | null
    businessOwner?: StringNullableWithAggregatesFilter<"BusinessService"> | string | null
    technicalOwner?: StringNullableWithAggregatesFilter<"BusinessService"> | string | null
    criticality?: StringNullableWithAggregatesFilter<"BusinessService"> | string | null
    availabilityTarget?: DecimalNullableWithAggregatesFilter<"BusinessService"> | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: StringNullableWithAggregatesFilter<"BusinessService"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"BusinessService"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BusinessService"> | Date | string
  }

  export type CiBusinessServiceWhereInput = {
    AND?: CiBusinessServiceWhereInput | CiBusinessServiceWhereInput[]
    OR?: CiBusinessServiceWhereInput[]
    NOT?: CiBusinessServiceWhereInput | CiBusinessServiceWhereInput[]
    ciId?: StringFilter<"CiBusinessService"> | string
    businessServiceId?: StringFilter<"CiBusinessService"> | string
    relationshipType?: StringFilter<"CiBusinessService"> | string
    criticality?: StringNullableFilter<"CiBusinessService"> | string | null
    createdAt?: DateTimeFilter<"CiBusinessService"> | Date | string
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
    businessService?: XOR<BusinessServiceScalarRelationFilter, BusinessServiceWhereInput>
  }

  export type CiBusinessServiceOrderByWithRelationInput = {
    ciId?: SortOrder
    businessServiceId?: SortOrder
    relationshipType?: SortOrder
    criticality?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    configurationItem?: ConfigurationItemOrderByWithRelationInput
    businessService?: BusinessServiceOrderByWithRelationInput
  }

  export type CiBusinessServiceWhereUniqueInput = Prisma.AtLeast<{
    ciId_businessServiceId?: CiBusinessServiceCiIdBusinessServiceIdCompoundUniqueInput
    AND?: CiBusinessServiceWhereInput | CiBusinessServiceWhereInput[]
    OR?: CiBusinessServiceWhereInput[]
    NOT?: CiBusinessServiceWhereInput | CiBusinessServiceWhereInput[]
    ciId?: StringFilter<"CiBusinessService"> | string
    businessServiceId?: StringFilter<"CiBusinessService"> | string
    relationshipType?: StringFilter<"CiBusinessService"> | string
    criticality?: StringNullableFilter<"CiBusinessService"> | string | null
    createdAt?: DateTimeFilter<"CiBusinessService"> | Date | string
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
    businessService?: XOR<BusinessServiceScalarRelationFilter, BusinessServiceWhereInput>
  }, "ciId_businessServiceId">

  export type CiBusinessServiceOrderByWithAggregationInput = {
    ciId?: SortOrder
    businessServiceId?: SortOrder
    relationshipType?: SortOrder
    criticality?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: CiBusinessServiceCountOrderByAggregateInput
    _max?: CiBusinessServiceMaxOrderByAggregateInput
    _min?: CiBusinessServiceMinOrderByAggregateInput
  }

  export type CiBusinessServiceScalarWhereWithAggregatesInput = {
    AND?: CiBusinessServiceScalarWhereWithAggregatesInput | CiBusinessServiceScalarWhereWithAggregatesInput[]
    OR?: CiBusinessServiceScalarWhereWithAggregatesInput[]
    NOT?: CiBusinessServiceScalarWhereWithAggregatesInput | CiBusinessServiceScalarWhereWithAggregatesInput[]
    ciId?: StringWithAggregatesFilter<"CiBusinessService"> | string
    businessServiceId?: StringWithAggregatesFilter<"CiBusinessService"> | string
    relationshipType?: StringWithAggregatesFilter<"CiBusinessService"> | string
    criticality?: StringNullableWithAggregatesFilter<"CiBusinessService"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"CiBusinessService"> | Date | string
  }

  export type CiIncidentWhereInput = {
    AND?: CiIncidentWhereInput | CiIncidentWhereInput[]
    OR?: CiIncidentWhereInput[]
    NOT?: CiIncidentWhereInput | CiIncidentWhereInput[]
    ciId?: StringFilter<"CiIncident"> | string
    incidentId?: StringFilter<"CiIncident"> | string
    relationshipType?: StringFilter<"CiIncident"> | string
    createdAt?: DateTimeFilter<"CiIncident"> | Date | string
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }

  export type CiIncidentOrderByWithRelationInput = {
    ciId?: SortOrder
    incidentId?: SortOrder
    relationshipType?: SortOrder
    createdAt?: SortOrder
    configurationItem?: ConfigurationItemOrderByWithRelationInput
  }

  export type CiIncidentWhereUniqueInput = Prisma.AtLeast<{
    ciId_incidentId?: CiIncidentCiIdIncidentIdCompoundUniqueInput
    AND?: CiIncidentWhereInput | CiIncidentWhereInput[]
    OR?: CiIncidentWhereInput[]
    NOT?: CiIncidentWhereInput | CiIncidentWhereInput[]
    ciId?: StringFilter<"CiIncident"> | string
    incidentId?: StringFilter<"CiIncident"> | string
    relationshipType?: StringFilter<"CiIncident"> | string
    createdAt?: DateTimeFilter<"CiIncident"> | Date | string
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }, "ciId_incidentId">

  export type CiIncidentOrderByWithAggregationInput = {
    ciId?: SortOrder
    incidentId?: SortOrder
    relationshipType?: SortOrder
    createdAt?: SortOrder
    _count?: CiIncidentCountOrderByAggregateInput
    _max?: CiIncidentMaxOrderByAggregateInput
    _min?: CiIncidentMinOrderByAggregateInput
  }

  export type CiIncidentScalarWhereWithAggregatesInput = {
    AND?: CiIncidentScalarWhereWithAggregatesInput | CiIncidentScalarWhereWithAggregatesInput[]
    OR?: CiIncidentScalarWhereWithAggregatesInput[]
    NOT?: CiIncidentScalarWhereWithAggregatesInput | CiIncidentScalarWhereWithAggregatesInput[]
    ciId?: StringWithAggregatesFilter<"CiIncident"> | string
    incidentId?: StringWithAggregatesFilter<"CiIncident"> | string
    relationshipType?: StringWithAggregatesFilter<"CiIncident"> | string
    createdAt?: DateTimeWithAggregatesFilter<"CiIncident"> | Date | string
  }

  export type CiChangeWhereInput = {
    AND?: CiChangeWhereInput | CiChangeWhereInput[]
    OR?: CiChangeWhereInput[]
    NOT?: CiChangeWhereInput | CiChangeWhereInput[]
    ciId?: StringFilter<"CiChange"> | string
    changeId?: StringFilter<"CiChange"> | string
    relationshipType?: StringFilter<"CiChange"> | string
    createdAt?: DateTimeFilter<"CiChange"> | Date | string
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }

  export type CiChangeOrderByWithRelationInput = {
    ciId?: SortOrder
    changeId?: SortOrder
    relationshipType?: SortOrder
    createdAt?: SortOrder
    configurationItem?: ConfigurationItemOrderByWithRelationInput
  }

  export type CiChangeWhereUniqueInput = Prisma.AtLeast<{
    ciId_changeId?: CiChangeCiIdChangeIdCompoundUniqueInput
    AND?: CiChangeWhereInput | CiChangeWhereInput[]
    OR?: CiChangeWhereInput[]
    NOT?: CiChangeWhereInput | CiChangeWhereInput[]
    ciId?: StringFilter<"CiChange"> | string
    changeId?: StringFilter<"CiChange"> | string
    relationshipType?: StringFilter<"CiChange"> | string
    createdAt?: DateTimeFilter<"CiChange"> | Date | string
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }, "ciId_changeId">

  export type CiChangeOrderByWithAggregationInput = {
    ciId?: SortOrder
    changeId?: SortOrder
    relationshipType?: SortOrder
    createdAt?: SortOrder
    _count?: CiChangeCountOrderByAggregateInput
    _max?: CiChangeMaxOrderByAggregateInput
    _min?: CiChangeMinOrderByAggregateInput
  }

  export type CiChangeScalarWhereWithAggregatesInput = {
    AND?: CiChangeScalarWhereWithAggregatesInput | CiChangeScalarWhereWithAggregatesInput[]
    OR?: CiChangeScalarWhereWithAggregatesInput[]
    NOT?: CiChangeScalarWhereWithAggregatesInput | CiChangeScalarWhereWithAggregatesInput[]
    ciId?: StringWithAggregatesFilter<"CiChange"> | string
    changeId?: StringWithAggregatesFilter<"CiChange"> | string
    relationshipType?: StringWithAggregatesFilter<"CiChange"> | string
    createdAt?: DateTimeWithAggregatesFilter<"CiChange"> | Date | string
  }

  export type DiscoveryScheduleWhereInput = {
    AND?: DiscoveryScheduleWhereInput | DiscoveryScheduleWhereInput[]
    OR?: DiscoveryScheduleWhereInput[]
    NOT?: DiscoveryScheduleWhereInput | DiscoveryScheduleWhereInput[]
    id?: StringFilter<"DiscoverySchedule"> | string
    name?: StringFilter<"DiscoverySchedule"> | string
    description?: StringNullableFilter<"DiscoverySchedule"> | string | null
    isActive?: BoolFilter<"DiscoverySchedule"> | boolean
    cronExpression?: StringFilter<"DiscoverySchedule"> | string
    nextRunDate?: DateTimeNullableFilter<"DiscoverySchedule"> | Date | string | null
    lastRunDate?: DateTimeNullableFilter<"DiscoverySchedule"> | Date | string | null
    discoveryType?: StringFilter<"DiscoverySchedule"> | string
    scopeConfiguration?: JsonFilter<"DiscoverySchedule">
    credentialIds?: StringNullableListFilter<"DiscoverySchedule">
    createdAt?: DateTimeFilter<"DiscoverySchedule"> | Date | string
    updatedAt?: DateTimeFilter<"DiscoverySchedule"> | Date | string
    createdBy?: StringNullableFilter<"DiscoverySchedule"> | string | null
  }

  export type DiscoveryScheduleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    cronExpression?: SortOrder
    nextRunDate?: SortOrderInput | SortOrder
    lastRunDate?: SortOrderInput | SortOrder
    discoveryType?: SortOrder
    scopeConfiguration?: SortOrder
    credentialIds?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
  }

  export type DiscoveryScheduleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DiscoveryScheduleWhereInput | DiscoveryScheduleWhereInput[]
    OR?: DiscoveryScheduleWhereInput[]
    NOT?: DiscoveryScheduleWhereInput | DiscoveryScheduleWhereInput[]
    name?: StringFilter<"DiscoverySchedule"> | string
    description?: StringNullableFilter<"DiscoverySchedule"> | string | null
    isActive?: BoolFilter<"DiscoverySchedule"> | boolean
    cronExpression?: StringFilter<"DiscoverySchedule"> | string
    nextRunDate?: DateTimeNullableFilter<"DiscoverySchedule"> | Date | string | null
    lastRunDate?: DateTimeNullableFilter<"DiscoverySchedule"> | Date | string | null
    discoveryType?: StringFilter<"DiscoverySchedule"> | string
    scopeConfiguration?: JsonFilter<"DiscoverySchedule">
    credentialIds?: StringNullableListFilter<"DiscoverySchedule">
    createdAt?: DateTimeFilter<"DiscoverySchedule"> | Date | string
    updatedAt?: DateTimeFilter<"DiscoverySchedule"> | Date | string
    createdBy?: StringNullableFilter<"DiscoverySchedule"> | string | null
  }, "id">

  export type DiscoveryScheduleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    cronExpression?: SortOrder
    nextRunDate?: SortOrderInput | SortOrder
    lastRunDate?: SortOrderInput | SortOrder
    discoveryType?: SortOrder
    scopeConfiguration?: SortOrder
    credentialIds?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    _count?: DiscoveryScheduleCountOrderByAggregateInput
    _max?: DiscoveryScheduleMaxOrderByAggregateInput
    _min?: DiscoveryScheduleMinOrderByAggregateInput
  }

  export type DiscoveryScheduleScalarWhereWithAggregatesInput = {
    AND?: DiscoveryScheduleScalarWhereWithAggregatesInput | DiscoveryScheduleScalarWhereWithAggregatesInput[]
    OR?: DiscoveryScheduleScalarWhereWithAggregatesInput[]
    NOT?: DiscoveryScheduleScalarWhereWithAggregatesInput | DiscoveryScheduleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"DiscoverySchedule"> | string
    name?: StringWithAggregatesFilter<"DiscoverySchedule"> | string
    description?: StringNullableWithAggregatesFilter<"DiscoverySchedule"> | string | null
    isActive?: BoolWithAggregatesFilter<"DiscoverySchedule"> | boolean
    cronExpression?: StringWithAggregatesFilter<"DiscoverySchedule"> | string
    nextRunDate?: DateTimeNullableWithAggregatesFilter<"DiscoverySchedule"> | Date | string | null
    lastRunDate?: DateTimeNullableWithAggregatesFilter<"DiscoverySchedule"> | Date | string | null
    discoveryType?: StringWithAggregatesFilter<"DiscoverySchedule"> | string
    scopeConfiguration?: JsonWithAggregatesFilter<"DiscoverySchedule">
    credentialIds?: StringNullableListFilter<"DiscoverySchedule">
    createdAt?: DateTimeWithAggregatesFilter<"DiscoverySchedule"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"DiscoverySchedule"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"DiscoverySchedule"> | string | null
  }

  export type DiscoveryRunWhereInput = {
    AND?: DiscoveryRunWhereInput | DiscoveryRunWhereInput[]
    OR?: DiscoveryRunWhereInput[]
    NOT?: DiscoveryRunWhereInput | DiscoveryRunWhereInput[]
    id?: StringFilter<"DiscoveryRun"> | string
    scheduleId?: StringNullableFilter<"DiscoveryRun"> | string | null
    status?: StringFilter<"DiscoveryRun"> | string
    startTime?: DateTimeFilter<"DiscoveryRun"> | Date | string
    endTime?: DateTimeNullableFilter<"DiscoveryRun"> | Date | string | null
    itemsDiscovered?: IntFilter<"DiscoveryRun"> | number
    itemsUpdated?: IntFilter<"DiscoveryRun"> | number
    itemsCreated?: IntFilter<"DiscoveryRun"> | number
    errors?: JsonNullableFilter<"DiscoveryRun">
    discoveredItems?: DiscoveredItemListRelationFilter
  }

  export type DiscoveryRunOrderByWithRelationInput = {
    id?: SortOrder
    scheduleId?: SortOrderInput | SortOrder
    status?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrderInput | SortOrder
    itemsDiscovered?: SortOrder
    itemsUpdated?: SortOrder
    itemsCreated?: SortOrder
    errors?: SortOrderInput | SortOrder
    discoveredItems?: DiscoveredItemOrderByRelationAggregateInput
  }

  export type DiscoveryRunWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DiscoveryRunWhereInput | DiscoveryRunWhereInput[]
    OR?: DiscoveryRunWhereInput[]
    NOT?: DiscoveryRunWhereInput | DiscoveryRunWhereInput[]
    scheduleId?: StringNullableFilter<"DiscoveryRun"> | string | null
    status?: StringFilter<"DiscoveryRun"> | string
    startTime?: DateTimeFilter<"DiscoveryRun"> | Date | string
    endTime?: DateTimeNullableFilter<"DiscoveryRun"> | Date | string | null
    itemsDiscovered?: IntFilter<"DiscoveryRun"> | number
    itemsUpdated?: IntFilter<"DiscoveryRun"> | number
    itemsCreated?: IntFilter<"DiscoveryRun"> | number
    errors?: JsonNullableFilter<"DiscoveryRun">
    discoveredItems?: DiscoveredItemListRelationFilter
  }, "id">

  export type DiscoveryRunOrderByWithAggregationInput = {
    id?: SortOrder
    scheduleId?: SortOrderInput | SortOrder
    status?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrderInput | SortOrder
    itemsDiscovered?: SortOrder
    itemsUpdated?: SortOrder
    itemsCreated?: SortOrder
    errors?: SortOrderInput | SortOrder
    _count?: DiscoveryRunCountOrderByAggregateInput
    _avg?: DiscoveryRunAvgOrderByAggregateInput
    _max?: DiscoveryRunMaxOrderByAggregateInput
    _min?: DiscoveryRunMinOrderByAggregateInput
    _sum?: DiscoveryRunSumOrderByAggregateInput
  }

  export type DiscoveryRunScalarWhereWithAggregatesInput = {
    AND?: DiscoveryRunScalarWhereWithAggregatesInput | DiscoveryRunScalarWhereWithAggregatesInput[]
    OR?: DiscoveryRunScalarWhereWithAggregatesInput[]
    NOT?: DiscoveryRunScalarWhereWithAggregatesInput | DiscoveryRunScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"DiscoveryRun"> | string
    scheduleId?: StringNullableWithAggregatesFilter<"DiscoveryRun"> | string | null
    status?: StringWithAggregatesFilter<"DiscoveryRun"> | string
    startTime?: DateTimeWithAggregatesFilter<"DiscoveryRun"> | Date | string
    endTime?: DateTimeNullableWithAggregatesFilter<"DiscoveryRun"> | Date | string | null
    itemsDiscovered?: IntWithAggregatesFilter<"DiscoveryRun"> | number
    itemsUpdated?: IntWithAggregatesFilter<"DiscoveryRun"> | number
    itemsCreated?: IntWithAggregatesFilter<"DiscoveryRun"> | number
    errors?: JsonNullableWithAggregatesFilter<"DiscoveryRun">
  }

  export type DiscoveredItemWhereInput = {
    AND?: DiscoveredItemWhereInput | DiscoveredItemWhereInput[]
    OR?: DiscoveredItemWhereInput[]
    NOT?: DiscoveredItemWhereInput | DiscoveredItemWhereInput[]
    id?: StringFilter<"DiscoveredItem"> | string
    runId?: StringFilter<"DiscoveredItem"> | string
    ciId?: StringNullableFilter<"DiscoveredItem"> | string | null
    discoveredData?: JsonFilter<"DiscoveredItem">
    fingerprint?: StringFilter<"DiscoveredItem"> | string
    status?: StringFilter<"DiscoveredItem"> | string
    processingNotes?: StringNullableFilter<"DiscoveredItem"> | string | null
    discoveredAt?: DateTimeFilter<"DiscoveredItem"> | Date | string
    processedAt?: DateTimeNullableFilter<"DiscoveredItem"> | Date | string | null
    discoveryRun?: XOR<DiscoveryRunScalarRelationFilter, DiscoveryRunWhereInput>
  }

  export type DiscoveredItemOrderByWithRelationInput = {
    id?: SortOrder
    runId?: SortOrder
    ciId?: SortOrderInput | SortOrder
    discoveredData?: SortOrder
    fingerprint?: SortOrder
    status?: SortOrder
    processingNotes?: SortOrderInput | SortOrder
    discoveredAt?: SortOrder
    processedAt?: SortOrderInput | SortOrder
    discoveryRun?: DiscoveryRunOrderByWithRelationInput
  }

  export type DiscoveredItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DiscoveredItemWhereInput | DiscoveredItemWhereInput[]
    OR?: DiscoveredItemWhereInput[]
    NOT?: DiscoveredItemWhereInput | DiscoveredItemWhereInput[]
    runId?: StringFilter<"DiscoveredItem"> | string
    ciId?: StringNullableFilter<"DiscoveredItem"> | string | null
    discoveredData?: JsonFilter<"DiscoveredItem">
    fingerprint?: StringFilter<"DiscoveredItem"> | string
    status?: StringFilter<"DiscoveredItem"> | string
    processingNotes?: StringNullableFilter<"DiscoveredItem"> | string | null
    discoveredAt?: DateTimeFilter<"DiscoveredItem"> | Date | string
    processedAt?: DateTimeNullableFilter<"DiscoveredItem"> | Date | string | null
    discoveryRun?: XOR<DiscoveryRunScalarRelationFilter, DiscoveryRunWhereInput>
  }, "id">

  export type DiscoveredItemOrderByWithAggregationInput = {
    id?: SortOrder
    runId?: SortOrder
    ciId?: SortOrderInput | SortOrder
    discoveredData?: SortOrder
    fingerprint?: SortOrder
    status?: SortOrder
    processingNotes?: SortOrderInput | SortOrder
    discoveredAt?: SortOrder
    processedAt?: SortOrderInput | SortOrder
    _count?: DiscoveredItemCountOrderByAggregateInput
    _max?: DiscoveredItemMaxOrderByAggregateInput
    _min?: DiscoveredItemMinOrderByAggregateInput
  }

  export type DiscoveredItemScalarWhereWithAggregatesInput = {
    AND?: DiscoveredItemScalarWhereWithAggregatesInput | DiscoveredItemScalarWhereWithAggregatesInput[]
    OR?: DiscoveredItemScalarWhereWithAggregatesInput[]
    NOT?: DiscoveredItemScalarWhereWithAggregatesInput | DiscoveredItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"DiscoveredItem"> | string
    runId?: StringWithAggregatesFilter<"DiscoveredItem"> | string
    ciId?: StringNullableWithAggregatesFilter<"DiscoveredItem"> | string | null
    discoveredData?: JsonWithAggregatesFilter<"DiscoveredItem">
    fingerprint?: StringWithAggregatesFilter<"DiscoveredItem"> | string
    status?: StringWithAggregatesFilter<"DiscoveredItem"> | string
    processingNotes?: StringNullableWithAggregatesFilter<"DiscoveredItem"> | string | null
    discoveredAt?: DateTimeWithAggregatesFilter<"DiscoveredItem"> | Date | string
    processedAt?: DateTimeNullableWithAggregatesFilter<"DiscoveredItem"> | Date | string | null
  }

  export type CmdbHealthWhereInput = {
    AND?: CmdbHealthWhereInput | CmdbHealthWhereInput[]
    OR?: CmdbHealthWhereInput[]
    NOT?: CmdbHealthWhereInput | CmdbHealthWhereInput[]
    id?: StringFilter<"CmdbHealth"> | string
    metricDate?: DateTimeFilter<"CmdbHealth"> | Date | string
    totalCis?: IntFilter<"CmdbHealth"> | number
    activeCis?: IntFilter<"CmdbHealth"> | number
    staleCis?: IntFilter<"CmdbHealth"> | number
    orphanedCis?: IntFilter<"CmdbHealth"> | number
    totalRelationships?: IntFilter<"CmdbHealth"> | number
    discoveredRelationships?: IntFilter<"CmdbHealth"> | number
    manualRelationships?: IntFilter<"CmdbHealth"> | number
    discoveredCis?: IntFilter<"CmdbHealth"> | number
    manualCis?: IntFilter<"CmdbHealth"> | number
    completenessScore?: DecimalFilter<"CmdbHealth"> | Decimal | DecimalJsLike | number | string
    accuracyScore?: DecimalFilter<"CmdbHealth"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"CmdbHealth"> | Date | string
  }

  export type CmdbHealthOrderByWithRelationInput = {
    id?: SortOrder
    metricDate?: SortOrder
    totalCis?: SortOrder
    activeCis?: SortOrder
    staleCis?: SortOrder
    orphanedCis?: SortOrder
    totalRelationships?: SortOrder
    discoveredRelationships?: SortOrder
    manualRelationships?: SortOrder
    discoveredCis?: SortOrder
    manualCis?: SortOrder
    completenessScore?: SortOrder
    accuracyScore?: SortOrder
    createdAt?: SortOrder
  }

  export type CmdbHealthWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CmdbHealthWhereInput | CmdbHealthWhereInput[]
    OR?: CmdbHealthWhereInput[]
    NOT?: CmdbHealthWhereInput | CmdbHealthWhereInput[]
    metricDate?: DateTimeFilter<"CmdbHealth"> | Date | string
    totalCis?: IntFilter<"CmdbHealth"> | number
    activeCis?: IntFilter<"CmdbHealth"> | number
    staleCis?: IntFilter<"CmdbHealth"> | number
    orphanedCis?: IntFilter<"CmdbHealth"> | number
    totalRelationships?: IntFilter<"CmdbHealth"> | number
    discoveredRelationships?: IntFilter<"CmdbHealth"> | number
    manualRelationships?: IntFilter<"CmdbHealth"> | number
    discoveredCis?: IntFilter<"CmdbHealth"> | number
    manualCis?: IntFilter<"CmdbHealth"> | number
    completenessScore?: DecimalFilter<"CmdbHealth"> | Decimal | DecimalJsLike | number | string
    accuracyScore?: DecimalFilter<"CmdbHealth"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"CmdbHealth"> | Date | string
  }, "id">

  export type CmdbHealthOrderByWithAggregationInput = {
    id?: SortOrder
    metricDate?: SortOrder
    totalCis?: SortOrder
    activeCis?: SortOrder
    staleCis?: SortOrder
    orphanedCis?: SortOrder
    totalRelationships?: SortOrder
    discoveredRelationships?: SortOrder
    manualRelationships?: SortOrder
    discoveredCis?: SortOrder
    manualCis?: SortOrder
    completenessScore?: SortOrder
    accuracyScore?: SortOrder
    createdAt?: SortOrder
    _count?: CmdbHealthCountOrderByAggregateInput
    _avg?: CmdbHealthAvgOrderByAggregateInput
    _max?: CmdbHealthMaxOrderByAggregateInput
    _min?: CmdbHealthMinOrderByAggregateInput
    _sum?: CmdbHealthSumOrderByAggregateInput
  }

  export type CmdbHealthScalarWhereWithAggregatesInput = {
    AND?: CmdbHealthScalarWhereWithAggregatesInput | CmdbHealthScalarWhereWithAggregatesInput[]
    OR?: CmdbHealthScalarWhereWithAggregatesInput[]
    NOT?: CmdbHealthScalarWhereWithAggregatesInput | CmdbHealthScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CmdbHealth"> | string
    metricDate?: DateTimeWithAggregatesFilter<"CmdbHealth"> | Date | string
    totalCis?: IntWithAggregatesFilter<"CmdbHealth"> | number
    activeCis?: IntWithAggregatesFilter<"CmdbHealth"> | number
    staleCis?: IntWithAggregatesFilter<"CmdbHealth"> | number
    orphanedCis?: IntWithAggregatesFilter<"CmdbHealth"> | number
    totalRelationships?: IntWithAggregatesFilter<"CmdbHealth"> | number
    discoveredRelationships?: IntWithAggregatesFilter<"CmdbHealth"> | number
    manualRelationships?: IntWithAggregatesFilter<"CmdbHealth"> | number
    discoveredCis?: IntWithAggregatesFilter<"CmdbHealth"> | number
    manualCis?: IntWithAggregatesFilter<"CmdbHealth"> | number
    completenessScore?: DecimalWithAggregatesFilter<"CmdbHealth"> | Decimal | DecimalJsLike | number | string
    accuracyScore?: DecimalWithAggregatesFilter<"CmdbHealth"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"CmdbHealth"> | Date | string
  }

  export type CiAuditLogWhereInput = {
    AND?: CiAuditLogWhereInput | CiAuditLogWhereInput[]
    OR?: CiAuditLogWhereInput[]
    NOT?: CiAuditLogWhereInput | CiAuditLogWhereInput[]
    id?: StringFilter<"CiAuditLog"> | string
    ciId?: StringFilter<"CiAuditLog"> | string
    operation?: StringFilter<"CiAuditLog"> | string
    fieldName?: StringNullableFilter<"CiAuditLog"> | string | null
    oldValue?: StringNullableFilter<"CiAuditLog"> | string | null
    newValue?: StringNullableFilter<"CiAuditLog"> | string | null
    changedBy?: StringNullableFilter<"CiAuditLog"> | string | null
    changeReason?: StringNullableFilter<"CiAuditLog"> | string | null
    changeTicket?: StringNullableFilter<"CiAuditLog"> | string | null
    timestamp?: DateTimeFilter<"CiAuditLog"> | Date | string
  }

  export type CiAuditLogOrderByWithRelationInput = {
    id?: SortOrder
    ciId?: SortOrder
    operation?: SortOrder
    fieldName?: SortOrderInput | SortOrder
    oldValue?: SortOrderInput | SortOrder
    newValue?: SortOrderInput | SortOrder
    changedBy?: SortOrderInput | SortOrder
    changeReason?: SortOrderInput | SortOrder
    changeTicket?: SortOrderInput | SortOrder
    timestamp?: SortOrder
  }

  export type CiAuditLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CiAuditLogWhereInput | CiAuditLogWhereInput[]
    OR?: CiAuditLogWhereInput[]
    NOT?: CiAuditLogWhereInput | CiAuditLogWhereInput[]
    ciId?: StringFilter<"CiAuditLog"> | string
    operation?: StringFilter<"CiAuditLog"> | string
    fieldName?: StringNullableFilter<"CiAuditLog"> | string | null
    oldValue?: StringNullableFilter<"CiAuditLog"> | string | null
    newValue?: StringNullableFilter<"CiAuditLog"> | string | null
    changedBy?: StringNullableFilter<"CiAuditLog"> | string | null
    changeReason?: StringNullableFilter<"CiAuditLog"> | string | null
    changeTicket?: StringNullableFilter<"CiAuditLog"> | string | null
    timestamp?: DateTimeFilter<"CiAuditLog"> | Date | string
  }, "id">

  export type CiAuditLogOrderByWithAggregationInput = {
    id?: SortOrder
    ciId?: SortOrder
    operation?: SortOrder
    fieldName?: SortOrderInput | SortOrder
    oldValue?: SortOrderInput | SortOrder
    newValue?: SortOrderInput | SortOrder
    changedBy?: SortOrderInput | SortOrder
    changeReason?: SortOrderInput | SortOrder
    changeTicket?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    _count?: CiAuditLogCountOrderByAggregateInput
    _max?: CiAuditLogMaxOrderByAggregateInput
    _min?: CiAuditLogMinOrderByAggregateInput
  }

  export type CiAuditLogScalarWhereWithAggregatesInput = {
    AND?: CiAuditLogScalarWhereWithAggregatesInput | CiAuditLogScalarWhereWithAggregatesInput[]
    OR?: CiAuditLogScalarWhereWithAggregatesInput[]
    NOT?: CiAuditLogScalarWhereWithAggregatesInput | CiAuditLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CiAuditLog"> | string
    ciId?: StringWithAggregatesFilter<"CiAuditLog"> | string
    operation?: StringWithAggregatesFilter<"CiAuditLog"> | string
    fieldName?: StringNullableWithAggregatesFilter<"CiAuditLog"> | string | null
    oldValue?: StringNullableWithAggregatesFilter<"CiAuditLog"> | string | null
    newValue?: StringNullableWithAggregatesFilter<"CiAuditLog"> | string | null
    changedBy?: StringNullableWithAggregatesFilter<"CiAuditLog"> | string | null
    changeReason?: StringNullableWithAggregatesFilter<"CiAuditLog"> | string | null
    changeTicket?: StringNullableWithAggregatesFilter<"CiAuditLog"> | string | null
    timestamp?: DateTimeWithAggregatesFilter<"CiAuditLog"> | Date | string
  }

  export type SupportGroupWhereInput = {
    AND?: SupportGroupWhereInput | SupportGroupWhereInput[]
    OR?: SupportGroupWhereInput[]
    NOT?: SupportGroupWhereInput | SupportGroupWhereInput[]
    id?: StringFilter<"SupportGroup"> | string
    name?: StringFilter<"SupportGroup"> | string
    description?: StringNullableFilter<"SupportGroup"> | string | null
    type?: StringFilter<"SupportGroup"> | string
    email?: StringNullableFilter<"SupportGroup"> | string | null
    phone?: StringNullableFilter<"SupportGroup"> | string | null
    manager?: StringNullableFilter<"SupportGroup"> | string | null
    escalationGroup?: StringNullableFilter<"SupportGroup"> | string | null
    isActive?: BoolFilter<"SupportGroup"> | boolean
    businessHours?: JsonNullableFilter<"SupportGroup">
    slaTarget?: IntNullableFilter<"SupportGroup"> | number | null
    externalId?: StringNullableFilter<"SupportGroup"> | string | null
    adGroupDn?: StringNullableFilter<"SupportGroup"> | string | null
    createdAt?: DateTimeFilter<"SupportGroup"> | Date | string
    updatedAt?: DateTimeFilter<"SupportGroup"> | Date | string
    createdBy?: StringNullableFilter<"SupportGroup"> | string | null
    updatedBy?: StringNullableFilter<"SupportGroup"> | string | null
    members?: SupportGroupMemberListRelationFilter
    permissions?: SupportGroupPermissionListRelationFilter
    configurationItems?: ConfigurationItemListRelationFilter
    ownerships?: CiOwnershipListRelationFilter
    escalationTarget?: SupportGroupListRelationFilter
    escalationSource?: XOR<SupportGroupNullableScalarRelationFilter, SupportGroupWhereInput> | null
  }

  export type SupportGroupOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    type?: SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    manager?: SortOrderInput | SortOrder
    escalationGroup?: SortOrderInput | SortOrder
    isActive?: SortOrder
    businessHours?: SortOrderInput | SortOrder
    slaTarget?: SortOrderInput | SortOrder
    externalId?: SortOrderInput | SortOrder
    adGroupDn?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    members?: SupportGroupMemberOrderByRelationAggregateInput
    permissions?: SupportGroupPermissionOrderByRelationAggregateInput
    configurationItems?: ConfigurationItemOrderByRelationAggregateInput
    ownerships?: CiOwnershipOrderByRelationAggregateInput
    escalationTarget?: SupportGroupOrderByRelationAggregateInput
    escalationSource?: SupportGroupOrderByWithRelationInput
  }

  export type SupportGroupWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: SupportGroupWhereInput | SupportGroupWhereInput[]
    OR?: SupportGroupWhereInput[]
    NOT?: SupportGroupWhereInput | SupportGroupWhereInput[]
    description?: StringNullableFilter<"SupportGroup"> | string | null
    type?: StringFilter<"SupportGroup"> | string
    email?: StringNullableFilter<"SupportGroup"> | string | null
    phone?: StringNullableFilter<"SupportGroup"> | string | null
    manager?: StringNullableFilter<"SupportGroup"> | string | null
    escalationGroup?: StringNullableFilter<"SupportGroup"> | string | null
    isActive?: BoolFilter<"SupportGroup"> | boolean
    businessHours?: JsonNullableFilter<"SupportGroup">
    slaTarget?: IntNullableFilter<"SupportGroup"> | number | null
    externalId?: StringNullableFilter<"SupportGroup"> | string | null
    adGroupDn?: StringNullableFilter<"SupportGroup"> | string | null
    createdAt?: DateTimeFilter<"SupportGroup"> | Date | string
    updatedAt?: DateTimeFilter<"SupportGroup"> | Date | string
    createdBy?: StringNullableFilter<"SupportGroup"> | string | null
    updatedBy?: StringNullableFilter<"SupportGroup"> | string | null
    members?: SupportGroupMemberListRelationFilter
    permissions?: SupportGroupPermissionListRelationFilter
    configurationItems?: ConfigurationItemListRelationFilter
    ownerships?: CiOwnershipListRelationFilter
    escalationTarget?: SupportGroupListRelationFilter
    escalationSource?: XOR<SupportGroupNullableScalarRelationFilter, SupportGroupWhereInput> | null
  }, "id" | "name">

  export type SupportGroupOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    type?: SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    manager?: SortOrderInput | SortOrder
    escalationGroup?: SortOrderInput | SortOrder
    isActive?: SortOrder
    businessHours?: SortOrderInput | SortOrder
    slaTarget?: SortOrderInput | SortOrder
    externalId?: SortOrderInput | SortOrder
    adGroupDn?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: SupportGroupCountOrderByAggregateInput
    _avg?: SupportGroupAvgOrderByAggregateInput
    _max?: SupportGroupMaxOrderByAggregateInput
    _min?: SupportGroupMinOrderByAggregateInput
    _sum?: SupportGroupSumOrderByAggregateInput
  }

  export type SupportGroupScalarWhereWithAggregatesInput = {
    AND?: SupportGroupScalarWhereWithAggregatesInput | SupportGroupScalarWhereWithAggregatesInput[]
    OR?: SupportGroupScalarWhereWithAggregatesInput[]
    NOT?: SupportGroupScalarWhereWithAggregatesInput | SupportGroupScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SupportGroup"> | string
    name?: StringWithAggregatesFilter<"SupportGroup"> | string
    description?: StringNullableWithAggregatesFilter<"SupportGroup"> | string | null
    type?: StringWithAggregatesFilter<"SupportGroup"> | string
    email?: StringNullableWithAggregatesFilter<"SupportGroup"> | string | null
    phone?: StringNullableWithAggregatesFilter<"SupportGroup"> | string | null
    manager?: StringNullableWithAggregatesFilter<"SupportGroup"> | string | null
    escalationGroup?: StringNullableWithAggregatesFilter<"SupportGroup"> | string | null
    isActive?: BoolWithAggregatesFilter<"SupportGroup"> | boolean
    businessHours?: JsonNullableWithAggregatesFilter<"SupportGroup">
    slaTarget?: IntNullableWithAggregatesFilter<"SupportGroup"> | number | null
    externalId?: StringNullableWithAggregatesFilter<"SupportGroup"> | string | null
    adGroupDn?: StringNullableWithAggregatesFilter<"SupportGroup"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"SupportGroup"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SupportGroup"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"SupportGroup"> | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"SupportGroup"> | string | null
  }

  export type SupportGroupMemberWhereInput = {
    AND?: SupportGroupMemberWhereInput | SupportGroupMemberWhereInput[]
    OR?: SupportGroupMemberWhereInput[]
    NOT?: SupportGroupMemberWhereInput | SupportGroupMemberWhereInput[]
    id?: StringFilter<"SupportGroupMember"> | string
    supportGroupId?: StringFilter<"SupportGroupMember"> | string
    userId?: StringFilter<"SupportGroupMember"> | string
    role?: StringFilter<"SupportGroupMember"> | string
    isPrimary?: BoolFilter<"SupportGroupMember"> | boolean
    isActive?: BoolFilter<"SupportGroupMember"> | boolean
    startDate?: DateTimeNullableFilter<"SupportGroupMember"> | Date | string | null
    endDate?: DateTimeNullableFilter<"SupportGroupMember"> | Date | string | null
    assignedAt?: DateTimeFilter<"SupportGroupMember"> | Date | string
    assignedBy?: StringNullableFilter<"SupportGroupMember"> | string | null
    supportGroup?: XOR<SupportGroupScalarRelationFilter, SupportGroupWhereInput>
  }

  export type SupportGroupMemberOrderByWithRelationInput = {
    id?: SortOrder
    supportGroupId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    isPrimary?: SortOrder
    isActive?: SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    assignedAt?: SortOrder
    assignedBy?: SortOrderInput | SortOrder
    supportGroup?: SupportGroupOrderByWithRelationInput
  }

  export type SupportGroupMemberWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    supportGroupId_userId?: SupportGroupMemberSupportGroupIdUserIdCompoundUniqueInput
    AND?: SupportGroupMemberWhereInput | SupportGroupMemberWhereInput[]
    OR?: SupportGroupMemberWhereInput[]
    NOT?: SupportGroupMemberWhereInput | SupportGroupMemberWhereInput[]
    supportGroupId?: StringFilter<"SupportGroupMember"> | string
    userId?: StringFilter<"SupportGroupMember"> | string
    role?: StringFilter<"SupportGroupMember"> | string
    isPrimary?: BoolFilter<"SupportGroupMember"> | boolean
    isActive?: BoolFilter<"SupportGroupMember"> | boolean
    startDate?: DateTimeNullableFilter<"SupportGroupMember"> | Date | string | null
    endDate?: DateTimeNullableFilter<"SupportGroupMember"> | Date | string | null
    assignedAt?: DateTimeFilter<"SupportGroupMember"> | Date | string
    assignedBy?: StringNullableFilter<"SupportGroupMember"> | string | null
    supportGroup?: XOR<SupportGroupScalarRelationFilter, SupportGroupWhereInput>
  }, "id" | "supportGroupId_userId">

  export type SupportGroupMemberOrderByWithAggregationInput = {
    id?: SortOrder
    supportGroupId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    isPrimary?: SortOrder
    isActive?: SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    assignedAt?: SortOrder
    assignedBy?: SortOrderInput | SortOrder
    _count?: SupportGroupMemberCountOrderByAggregateInput
    _max?: SupportGroupMemberMaxOrderByAggregateInput
    _min?: SupportGroupMemberMinOrderByAggregateInput
  }

  export type SupportGroupMemberScalarWhereWithAggregatesInput = {
    AND?: SupportGroupMemberScalarWhereWithAggregatesInput | SupportGroupMemberScalarWhereWithAggregatesInput[]
    OR?: SupportGroupMemberScalarWhereWithAggregatesInput[]
    NOT?: SupportGroupMemberScalarWhereWithAggregatesInput | SupportGroupMemberScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SupportGroupMember"> | string
    supportGroupId?: StringWithAggregatesFilter<"SupportGroupMember"> | string
    userId?: StringWithAggregatesFilter<"SupportGroupMember"> | string
    role?: StringWithAggregatesFilter<"SupportGroupMember"> | string
    isPrimary?: BoolWithAggregatesFilter<"SupportGroupMember"> | boolean
    isActive?: BoolWithAggregatesFilter<"SupportGroupMember"> | boolean
    startDate?: DateTimeNullableWithAggregatesFilter<"SupportGroupMember"> | Date | string | null
    endDate?: DateTimeNullableWithAggregatesFilter<"SupportGroupMember"> | Date | string | null
    assignedAt?: DateTimeWithAggregatesFilter<"SupportGroupMember"> | Date | string
    assignedBy?: StringNullableWithAggregatesFilter<"SupportGroupMember"> | string | null
  }

  export type SupportGroupPermissionWhereInput = {
    AND?: SupportGroupPermissionWhereInput | SupportGroupPermissionWhereInput[]
    OR?: SupportGroupPermissionWhereInput[]
    NOT?: SupportGroupPermissionWhereInput | SupportGroupPermissionWhereInput[]
    id?: StringFilter<"SupportGroupPermission"> | string
    supportGroupId?: StringFilter<"SupportGroupPermission"> | string
    resource?: StringFilter<"SupportGroupPermission"> | string
    action?: StringFilter<"SupportGroupPermission"> | string
    scope?: StringNullableFilter<"SupportGroupPermission"> | string | null
    conditions?: JsonNullableFilter<"SupportGroupPermission">
    isActive?: BoolFilter<"SupportGroupPermission"> | boolean
    grantedAt?: DateTimeFilter<"SupportGroupPermission"> | Date | string
    grantedBy?: StringNullableFilter<"SupportGroupPermission"> | string | null
    supportGroup?: XOR<SupportGroupScalarRelationFilter, SupportGroupWhereInput>
  }

  export type SupportGroupPermissionOrderByWithRelationInput = {
    id?: SortOrder
    supportGroupId?: SortOrder
    resource?: SortOrder
    action?: SortOrder
    scope?: SortOrderInput | SortOrder
    conditions?: SortOrderInput | SortOrder
    isActive?: SortOrder
    grantedAt?: SortOrder
    grantedBy?: SortOrderInput | SortOrder
    supportGroup?: SupportGroupOrderByWithRelationInput
  }

  export type SupportGroupPermissionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    supportGroupId_resource_action?: SupportGroupPermissionSupportGroupIdResourceActionCompoundUniqueInput
    AND?: SupportGroupPermissionWhereInput | SupportGroupPermissionWhereInput[]
    OR?: SupportGroupPermissionWhereInput[]
    NOT?: SupportGroupPermissionWhereInput | SupportGroupPermissionWhereInput[]
    supportGroupId?: StringFilter<"SupportGroupPermission"> | string
    resource?: StringFilter<"SupportGroupPermission"> | string
    action?: StringFilter<"SupportGroupPermission"> | string
    scope?: StringNullableFilter<"SupportGroupPermission"> | string | null
    conditions?: JsonNullableFilter<"SupportGroupPermission">
    isActive?: BoolFilter<"SupportGroupPermission"> | boolean
    grantedAt?: DateTimeFilter<"SupportGroupPermission"> | Date | string
    grantedBy?: StringNullableFilter<"SupportGroupPermission"> | string | null
    supportGroup?: XOR<SupportGroupScalarRelationFilter, SupportGroupWhereInput>
  }, "id" | "supportGroupId_resource_action">

  export type SupportGroupPermissionOrderByWithAggregationInput = {
    id?: SortOrder
    supportGroupId?: SortOrder
    resource?: SortOrder
    action?: SortOrder
    scope?: SortOrderInput | SortOrder
    conditions?: SortOrderInput | SortOrder
    isActive?: SortOrder
    grantedAt?: SortOrder
    grantedBy?: SortOrderInput | SortOrder
    _count?: SupportGroupPermissionCountOrderByAggregateInput
    _max?: SupportGroupPermissionMaxOrderByAggregateInput
    _min?: SupportGroupPermissionMinOrderByAggregateInput
  }

  export type SupportGroupPermissionScalarWhereWithAggregatesInput = {
    AND?: SupportGroupPermissionScalarWhereWithAggregatesInput | SupportGroupPermissionScalarWhereWithAggregatesInput[]
    OR?: SupportGroupPermissionScalarWhereWithAggregatesInput[]
    NOT?: SupportGroupPermissionScalarWhereWithAggregatesInput | SupportGroupPermissionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SupportGroupPermission"> | string
    supportGroupId?: StringWithAggregatesFilter<"SupportGroupPermission"> | string
    resource?: StringWithAggregatesFilter<"SupportGroupPermission"> | string
    action?: StringWithAggregatesFilter<"SupportGroupPermission"> | string
    scope?: StringNullableWithAggregatesFilter<"SupportGroupPermission"> | string | null
    conditions?: JsonNullableWithAggregatesFilter<"SupportGroupPermission">
    isActive?: BoolWithAggregatesFilter<"SupportGroupPermission"> | boolean
    grantedAt?: DateTimeWithAggregatesFilter<"SupportGroupPermission"> | Date | string
    grantedBy?: StringNullableWithAggregatesFilter<"SupportGroupPermission"> | string | null
  }

  export type CiOwnershipWhereInput = {
    AND?: CiOwnershipWhereInput | CiOwnershipWhereInput[]
    OR?: CiOwnershipWhereInput[]
    NOT?: CiOwnershipWhereInput | CiOwnershipWhereInput[]
    id?: StringFilter<"CiOwnership"> | string
    ciId?: StringFilter<"CiOwnership"> | string
    ownershipType?: StringFilter<"CiOwnership"> | string
    userId?: StringFilter<"CiOwnership"> | string
    supportGroupId?: StringNullableFilter<"CiOwnership"> | string | null
    isPrimary?: BoolFilter<"CiOwnership"> | boolean
    isActive?: BoolFilter<"CiOwnership"> | boolean
    startDate?: DateTimeNullableFilter<"CiOwnership"> | Date | string | null
    endDate?: DateTimeNullableFilter<"CiOwnership"> | Date | string | null
    responsibilities?: StringNullableListFilter<"CiOwnership">
    assignedAt?: DateTimeFilter<"CiOwnership"> | Date | string
    assignedBy?: StringNullableFilter<"CiOwnership"> | string | null
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
    supportGroup?: XOR<SupportGroupNullableScalarRelationFilter, SupportGroupWhereInput> | null
  }

  export type CiOwnershipOrderByWithRelationInput = {
    id?: SortOrder
    ciId?: SortOrder
    ownershipType?: SortOrder
    userId?: SortOrder
    supportGroupId?: SortOrderInput | SortOrder
    isPrimary?: SortOrder
    isActive?: SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    responsibilities?: SortOrder
    assignedAt?: SortOrder
    assignedBy?: SortOrderInput | SortOrder
    configurationItem?: ConfigurationItemOrderByWithRelationInput
    supportGroup?: SupportGroupOrderByWithRelationInput
  }

  export type CiOwnershipWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    ciId_ownershipType_userId?: CiOwnershipCiIdOwnershipTypeUserIdCompoundUniqueInput
    AND?: CiOwnershipWhereInput | CiOwnershipWhereInput[]
    OR?: CiOwnershipWhereInput[]
    NOT?: CiOwnershipWhereInput | CiOwnershipWhereInput[]
    ciId?: StringFilter<"CiOwnership"> | string
    ownershipType?: StringFilter<"CiOwnership"> | string
    userId?: StringFilter<"CiOwnership"> | string
    supportGroupId?: StringNullableFilter<"CiOwnership"> | string | null
    isPrimary?: BoolFilter<"CiOwnership"> | boolean
    isActive?: BoolFilter<"CiOwnership"> | boolean
    startDate?: DateTimeNullableFilter<"CiOwnership"> | Date | string | null
    endDate?: DateTimeNullableFilter<"CiOwnership"> | Date | string | null
    responsibilities?: StringNullableListFilter<"CiOwnership">
    assignedAt?: DateTimeFilter<"CiOwnership"> | Date | string
    assignedBy?: StringNullableFilter<"CiOwnership"> | string | null
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
    supportGroup?: XOR<SupportGroupNullableScalarRelationFilter, SupportGroupWhereInput> | null
  }, "id" | "ciId_ownershipType_userId">

  export type CiOwnershipOrderByWithAggregationInput = {
    id?: SortOrder
    ciId?: SortOrder
    ownershipType?: SortOrder
    userId?: SortOrder
    supportGroupId?: SortOrderInput | SortOrder
    isPrimary?: SortOrder
    isActive?: SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    responsibilities?: SortOrder
    assignedAt?: SortOrder
    assignedBy?: SortOrderInput | SortOrder
    _count?: CiOwnershipCountOrderByAggregateInput
    _max?: CiOwnershipMaxOrderByAggregateInput
    _min?: CiOwnershipMinOrderByAggregateInput
  }

  export type CiOwnershipScalarWhereWithAggregatesInput = {
    AND?: CiOwnershipScalarWhereWithAggregatesInput | CiOwnershipScalarWhereWithAggregatesInput[]
    OR?: CiOwnershipScalarWhereWithAggregatesInput[]
    NOT?: CiOwnershipScalarWhereWithAggregatesInput | CiOwnershipScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CiOwnership"> | string
    ciId?: StringWithAggregatesFilter<"CiOwnership"> | string
    ownershipType?: StringWithAggregatesFilter<"CiOwnership"> | string
    userId?: StringWithAggregatesFilter<"CiOwnership"> | string
    supportGroupId?: StringNullableWithAggregatesFilter<"CiOwnership"> | string | null
    isPrimary?: BoolWithAggregatesFilter<"CiOwnership"> | boolean
    isActive?: BoolWithAggregatesFilter<"CiOwnership"> | boolean
    startDate?: DateTimeNullableWithAggregatesFilter<"CiOwnership"> | Date | string | null
    endDate?: DateTimeNullableWithAggregatesFilter<"CiOwnership"> | Date | string | null
    responsibilities?: StringNullableListFilter<"CiOwnership">
    assignedAt?: DateTimeWithAggregatesFilter<"CiOwnership"> | Date | string
    assignedBy?: StringNullableWithAggregatesFilter<"CiOwnership"> | string | null
  }

  export type CmdbInventoryMappingWhereInput = {
    AND?: CmdbInventoryMappingWhereInput | CmdbInventoryMappingWhereInput[]
    OR?: CmdbInventoryMappingWhereInput[]
    NOT?: CmdbInventoryMappingWhereInput | CmdbInventoryMappingWhereInput[]
    id?: StringFilter<"CmdbInventoryMapping"> | string
    ciId?: StringFilter<"CmdbInventoryMapping"> | string
    inventoryAssetId?: IntFilter<"CmdbInventoryMapping"> | number
    mappingType?: StringFilter<"CmdbInventoryMapping"> | string
    relationship?: StringNullableFilter<"CmdbInventoryMapping"> | string | null
    syncEnabled?: BoolFilter<"CmdbInventoryMapping"> | boolean
    lastSyncAt?: DateTimeNullableFilter<"CmdbInventoryMapping"> | Date | string | null
    syncStatus?: StringNullableFilter<"CmdbInventoryMapping"> | string | null
    syncErrors?: StringNullableFilter<"CmdbInventoryMapping"> | string | null
    conflictResolution?: StringFilter<"CmdbInventoryMapping"> | string
    fieldMapping?: JsonNullableFilter<"CmdbInventoryMapping">
    createdAt?: DateTimeFilter<"CmdbInventoryMapping"> | Date | string
    updatedAt?: DateTimeFilter<"CmdbInventoryMapping"> | Date | string
    createdBy?: StringNullableFilter<"CmdbInventoryMapping"> | string | null
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }

  export type CmdbInventoryMappingOrderByWithRelationInput = {
    id?: SortOrder
    ciId?: SortOrder
    inventoryAssetId?: SortOrder
    mappingType?: SortOrder
    relationship?: SortOrderInput | SortOrder
    syncEnabled?: SortOrder
    lastSyncAt?: SortOrderInput | SortOrder
    syncStatus?: SortOrderInput | SortOrder
    syncErrors?: SortOrderInput | SortOrder
    conflictResolution?: SortOrder
    fieldMapping?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    configurationItem?: ConfigurationItemOrderByWithRelationInput
  }

  export type CmdbInventoryMappingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    ciId_inventoryAssetId?: CmdbInventoryMappingCiIdInventoryAssetIdCompoundUniqueInput
    AND?: CmdbInventoryMappingWhereInput | CmdbInventoryMappingWhereInput[]
    OR?: CmdbInventoryMappingWhereInput[]
    NOT?: CmdbInventoryMappingWhereInput | CmdbInventoryMappingWhereInput[]
    ciId?: StringFilter<"CmdbInventoryMapping"> | string
    inventoryAssetId?: IntFilter<"CmdbInventoryMapping"> | number
    mappingType?: StringFilter<"CmdbInventoryMapping"> | string
    relationship?: StringNullableFilter<"CmdbInventoryMapping"> | string | null
    syncEnabled?: BoolFilter<"CmdbInventoryMapping"> | boolean
    lastSyncAt?: DateTimeNullableFilter<"CmdbInventoryMapping"> | Date | string | null
    syncStatus?: StringNullableFilter<"CmdbInventoryMapping"> | string | null
    syncErrors?: StringNullableFilter<"CmdbInventoryMapping"> | string | null
    conflictResolution?: StringFilter<"CmdbInventoryMapping"> | string
    fieldMapping?: JsonNullableFilter<"CmdbInventoryMapping">
    createdAt?: DateTimeFilter<"CmdbInventoryMapping"> | Date | string
    updatedAt?: DateTimeFilter<"CmdbInventoryMapping"> | Date | string
    createdBy?: StringNullableFilter<"CmdbInventoryMapping"> | string | null
    configurationItem?: XOR<ConfigurationItemScalarRelationFilter, ConfigurationItemWhereInput>
  }, "id" | "ciId_inventoryAssetId">

  export type CmdbInventoryMappingOrderByWithAggregationInput = {
    id?: SortOrder
    ciId?: SortOrder
    inventoryAssetId?: SortOrder
    mappingType?: SortOrder
    relationship?: SortOrderInput | SortOrder
    syncEnabled?: SortOrder
    lastSyncAt?: SortOrderInput | SortOrder
    syncStatus?: SortOrderInput | SortOrder
    syncErrors?: SortOrderInput | SortOrder
    conflictResolution?: SortOrder
    fieldMapping?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    _count?: CmdbInventoryMappingCountOrderByAggregateInput
    _avg?: CmdbInventoryMappingAvgOrderByAggregateInput
    _max?: CmdbInventoryMappingMaxOrderByAggregateInput
    _min?: CmdbInventoryMappingMinOrderByAggregateInput
    _sum?: CmdbInventoryMappingSumOrderByAggregateInput
  }

  export type CmdbInventoryMappingScalarWhereWithAggregatesInput = {
    AND?: CmdbInventoryMappingScalarWhereWithAggregatesInput | CmdbInventoryMappingScalarWhereWithAggregatesInput[]
    OR?: CmdbInventoryMappingScalarWhereWithAggregatesInput[]
    NOT?: CmdbInventoryMappingScalarWhereWithAggregatesInput | CmdbInventoryMappingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CmdbInventoryMapping"> | string
    ciId?: StringWithAggregatesFilter<"CmdbInventoryMapping"> | string
    inventoryAssetId?: IntWithAggregatesFilter<"CmdbInventoryMapping"> | number
    mappingType?: StringWithAggregatesFilter<"CmdbInventoryMapping"> | string
    relationship?: StringNullableWithAggregatesFilter<"CmdbInventoryMapping"> | string | null
    syncEnabled?: BoolWithAggregatesFilter<"CmdbInventoryMapping"> | boolean
    lastSyncAt?: DateTimeNullableWithAggregatesFilter<"CmdbInventoryMapping"> | Date | string | null
    syncStatus?: StringNullableWithAggregatesFilter<"CmdbInventoryMapping"> | string | null
    syncErrors?: StringNullableWithAggregatesFilter<"CmdbInventoryMapping"> | string | null
    conflictResolution?: StringWithAggregatesFilter<"CmdbInventoryMapping"> | string
    fieldMapping?: JsonNullableWithAggregatesFilter<"CmdbInventoryMapping">
    createdAt?: DateTimeWithAggregatesFilter<"CmdbInventoryMapping"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CmdbInventoryMapping"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"CmdbInventoryMapping"> | string | null
  }

  export type ConfigurationItemCreateInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    ciType_rel: CiTypeCreateNestedOneWithoutConfigurationItemsInput
    outgoingRelationships?: CiRelationshipCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ciType_rel?: CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput
    outgoingRelationships?: CiRelationshipUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemCreateManyInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type ConfigurationItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ConfigurationItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiTypeCreateInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    category: string
    icon?: string | null
    color?: string | null
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: string | null
    allowedStatuses?: CiTypeCreateallowedStatusesInput | string[]
    discoveryEnabled?: boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    parentType?: CiTypeCreateNestedOneWithoutChildTypesInput
    childTypes?: CiTypeCreateNestedManyWithoutParentTypeInput
    configurationItems?: ConfigurationItemCreateNestedManyWithoutCiType_relInput
    allowedRelationships?: CiRelationshipTypeCreateNestedManyWithoutSourceCiTypeInput
    targetRelationships?: CiRelationshipTypeCreateNestedManyWithoutTargetCiTypeInput
  }

  export type CiTypeUncheckedCreateInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    category: string
    icon?: string | null
    color?: string | null
    parentTypeId?: string | null
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: string | null
    allowedStatuses?: CiTypeCreateallowedStatusesInput | string[]
    discoveryEnabled?: boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    childTypes?: CiTypeUncheckedCreateNestedManyWithoutParentTypeInput
    configurationItems?: ConfigurationItemUncheckedCreateNestedManyWithoutCiType_relInput
    allowedRelationships?: CiRelationshipTypeUncheckedCreateNestedManyWithoutSourceCiTypeInput
    targetRelationships?: CiRelationshipTypeUncheckedCreateNestedManyWithoutTargetCiTypeInput
  }

  export type CiTypeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isAbstract?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: NullableStringFieldUpdateOperationsInput | string | null
    allowedStatuses?: CiTypeUpdateallowedStatusesInput | string[]
    discoveryEnabled?: BoolFieldUpdateOperationsInput | boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parentType?: CiTypeUpdateOneWithoutChildTypesNestedInput
    childTypes?: CiTypeUpdateManyWithoutParentTypeNestedInput
    configurationItems?: ConfigurationItemUpdateManyWithoutCiType_relNestedInput
    allowedRelationships?: CiRelationshipTypeUpdateManyWithoutSourceCiTypeNestedInput
    targetRelationships?: CiRelationshipTypeUpdateManyWithoutTargetCiTypeNestedInput
  }

  export type CiTypeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    parentTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    isAbstract?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: NullableStringFieldUpdateOperationsInput | string | null
    allowedStatuses?: CiTypeUpdateallowedStatusesInput | string[]
    discoveryEnabled?: BoolFieldUpdateOperationsInput | boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    childTypes?: CiTypeUncheckedUpdateManyWithoutParentTypeNestedInput
    configurationItems?: ConfigurationItemUncheckedUpdateManyWithoutCiType_relNestedInput
    allowedRelationships?: CiRelationshipTypeUncheckedUpdateManyWithoutSourceCiTypeNestedInput
    targetRelationships?: CiRelationshipTypeUncheckedUpdateManyWithoutTargetCiTypeNestedInput
  }

  export type CiTypeCreateManyInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    category: string
    icon?: string | null
    color?: string | null
    parentTypeId?: string | null
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: string | null
    allowedStatuses?: CiTypeCreateallowedStatusesInput | string[]
    discoveryEnabled?: boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CiTypeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isAbstract?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: NullableStringFieldUpdateOperationsInput | string | null
    allowedStatuses?: CiTypeUpdateallowedStatusesInput | string[]
    discoveryEnabled?: BoolFieldUpdateOperationsInput | boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiTypeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    parentTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    isAbstract?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: NullableStringFieldUpdateOperationsInput | string | null
    allowedStatuses?: CiTypeUpdateallowedStatusesInput | string[]
    discoveryEnabled?: BoolFieldUpdateOperationsInput | boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiRelationshipTypeCreateInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    isDirectional?: boolean
    category?: string | null
    allowMultiple?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    sourceCiType?: CiTypeCreateNestedOneWithoutAllowedRelationshipsInput
    targetCiType?: CiTypeCreateNestedOneWithoutTargetRelationshipsInput
    relationships?: CiRelationshipCreateNestedManyWithoutRelationshipTypeInput
  }

  export type CiRelationshipTypeUncheckedCreateInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    isDirectional?: boolean
    category?: string | null
    sourceCiTypeId?: string | null
    targetCiTypeId?: string | null
    allowMultiple?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    relationships?: CiRelationshipUncheckedCreateNestedManyWithoutRelationshipTypeInput
  }

  export type CiRelationshipTypeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isDirectional?: BoolFieldUpdateOperationsInput | boolean
    category?: NullableStringFieldUpdateOperationsInput | string | null
    allowMultiple?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sourceCiType?: CiTypeUpdateOneWithoutAllowedRelationshipsNestedInput
    targetCiType?: CiTypeUpdateOneWithoutTargetRelationshipsNestedInput
    relationships?: CiRelationshipUpdateManyWithoutRelationshipTypeNestedInput
  }

  export type CiRelationshipTypeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isDirectional?: BoolFieldUpdateOperationsInput | boolean
    category?: NullableStringFieldUpdateOperationsInput | string | null
    sourceCiTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    targetCiTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    allowMultiple?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    relationships?: CiRelationshipUncheckedUpdateManyWithoutRelationshipTypeNestedInput
  }

  export type CiRelationshipTypeCreateManyInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    isDirectional?: boolean
    category?: string | null
    sourceCiTypeId?: string | null
    targetCiTypeId?: string | null
    allowMultiple?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CiRelationshipTypeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isDirectional?: BoolFieldUpdateOperationsInput | boolean
    category?: NullableStringFieldUpdateOperationsInput | string | null
    allowMultiple?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiRelationshipTypeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isDirectional?: BoolFieldUpdateOperationsInput | boolean
    category?: NullableStringFieldUpdateOperationsInput | string | null
    sourceCiTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    targetCiTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    allowMultiple?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiRelationshipCreateInput = {
    id?: string
    strength?: string | null
    criticality?: string | null
    description?: string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    discoveredDate?: Date | string | null
    isDiscovered?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    sourceCi: ConfigurationItemCreateNestedOneWithoutOutgoingRelationshipsInput
    targetCi: ConfigurationItemCreateNestedOneWithoutIncomingRelationshipsInput
    relationshipType: CiRelationshipTypeCreateNestedOneWithoutRelationshipsInput
  }

  export type CiRelationshipUncheckedCreateInput = {
    id?: string
    sourceCiId: string
    targetCiId: string
    relationshipTypeId: string
    strength?: string | null
    criticality?: string | null
    description?: string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    discoveredDate?: Date | string | null
    isDiscovered?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type CiRelationshipUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    strength?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    sourceCi?: ConfigurationItemUpdateOneRequiredWithoutOutgoingRelationshipsNestedInput
    targetCi?: ConfigurationItemUpdateOneRequiredWithoutIncomingRelationshipsNestedInput
    relationshipType?: CiRelationshipTypeUpdateOneRequiredWithoutRelationshipsNestedInput
  }

  export type CiRelationshipUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sourceCiId?: StringFieldUpdateOperationsInput | string
    targetCiId?: StringFieldUpdateOperationsInput | string
    relationshipTypeId?: StringFieldUpdateOperationsInput | string
    strength?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiRelationshipCreateManyInput = {
    id?: string
    sourceCiId: string
    targetCiId: string
    relationshipTypeId: string
    strength?: string | null
    criticality?: string | null
    description?: string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    discoveredDate?: Date | string | null
    isDiscovered?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type CiRelationshipUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    strength?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiRelationshipUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sourceCiId?: StringFieldUpdateOperationsInput | string
    targetCiId?: StringFieldUpdateOperationsInput | string
    relationshipTypeId?: StringFieldUpdateOperationsInput | string
    strength?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HardwareCiCreateInput = {
    processorType?: string | null
    processorSpeed?: string | null
    coreCount?: number | null
    memorySize?: string | null
    storageSize?: string | null
    storageType?: string | null
    macAddress?: string | null
    ipAddress?: string | null
    portCount?: number | null
    formFactor?: string | null
    dimensions?: string | null
    weight?: string | null
    powerRequirements?: string | null
    configurationItem: ConfigurationItemCreateNestedOneWithoutHardwareDetailsInput
  }

  export type HardwareCiUncheckedCreateInput = {
    ciId: string
    processorType?: string | null
    processorSpeed?: string | null
    coreCount?: number | null
    memorySize?: string | null
    storageSize?: string | null
    storageType?: string | null
    macAddress?: string | null
    ipAddress?: string | null
    portCount?: number | null
    formFactor?: string | null
    dimensions?: string | null
    weight?: string | null
    powerRequirements?: string | null
  }

  export type HardwareCiUpdateInput = {
    processorType?: NullableStringFieldUpdateOperationsInput | string | null
    processorSpeed?: NullableStringFieldUpdateOperationsInput | string | null
    coreCount?: NullableIntFieldUpdateOperationsInput | number | null
    memorySize?: NullableStringFieldUpdateOperationsInput | string | null
    storageSize?: NullableStringFieldUpdateOperationsInput | string | null
    storageType?: NullableStringFieldUpdateOperationsInput | string | null
    macAddress?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    portCount?: NullableIntFieldUpdateOperationsInput | number | null
    formFactor?: NullableStringFieldUpdateOperationsInput | string | null
    dimensions?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    powerRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    configurationItem?: ConfigurationItemUpdateOneRequiredWithoutHardwareDetailsNestedInput
  }

  export type HardwareCiUncheckedUpdateInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    processorType?: NullableStringFieldUpdateOperationsInput | string | null
    processorSpeed?: NullableStringFieldUpdateOperationsInput | string | null
    coreCount?: NullableIntFieldUpdateOperationsInput | number | null
    memorySize?: NullableStringFieldUpdateOperationsInput | string | null
    storageSize?: NullableStringFieldUpdateOperationsInput | string | null
    storageType?: NullableStringFieldUpdateOperationsInput | string | null
    macAddress?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    portCount?: NullableIntFieldUpdateOperationsInput | number | null
    formFactor?: NullableStringFieldUpdateOperationsInput | string | null
    dimensions?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    powerRequirements?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HardwareCiCreateManyInput = {
    ciId: string
    processorType?: string | null
    processorSpeed?: string | null
    coreCount?: number | null
    memorySize?: string | null
    storageSize?: string | null
    storageType?: string | null
    macAddress?: string | null
    ipAddress?: string | null
    portCount?: number | null
    formFactor?: string | null
    dimensions?: string | null
    weight?: string | null
    powerRequirements?: string | null
  }

  export type HardwareCiUpdateManyMutationInput = {
    processorType?: NullableStringFieldUpdateOperationsInput | string | null
    processorSpeed?: NullableStringFieldUpdateOperationsInput | string | null
    coreCount?: NullableIntFieldUpdateOperationsInput | number | null
    memorySize?: NullableStringFieldUpdateOperationsInput | string | null
    storageSize?: NullableStringFieldUpdateOperationsInput | string | null
    storageType?: NullableStringFieldUpdateOperationsInput | string | null
    macAddress?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    portCount?: NullableIntFieldUpdateOperationsInput | number | null
    formFactor?: NullableStringFieldUpdateOperationsInput | string | null
    dimensions?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    powerRequirements?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HardwareCiUncheckedUpdateManyInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    processorType?: NullableStringFieldUpdateOperationsInput | string | null
    processorSpeed?: NullableStringFieldUpdateOperationsInput | string | null
    coreCount?: NullableIntFieldUpdateOperationsInput | number | null
    memorySize?: NullableStringFieldUpdateOperationsInput | string | null
    storageSize?: NullableStringFieldUpdateOperationsInput | string | null
    storageType?: NullableStringFieldUpdateOperationsInput | string | null
    macAddress?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    portCount?: NullableIntFieldUpdateOperationsInput | number | null
    formFactor?: NullableStringFieldUpdateOperationsInput | string | null
    dimensions?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    powerRequirements?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SoftwareCiCreateInput = {
    version?: string | null
    edition?: string | null
    architecture?: string | null
    licenseType?: string | null
    licenseKey?: string | null
    licenseCount?: number | null
    installPath?: string | null
    installDate?: Date | string | null
    installedBy?: string | null
    isLatestVersion?: boolean | null
    patchLevel?: string | null
    supportEndDate?: Date | string | null
    configurationItem: ConfigurationItemCreateNestedOneWithoutSoftwareDetailsInput
  }

  export type SoftwareCiUncheckedCreateInput = {
    ciId: string
    version?: string | null
    edition?: string | null
    architecture?: string | null
    licenseType?: string | null
    licenseKey?: string | null
    licenseCount?: number | null
    installPath?: string | null
    installDate?: Date | string | null
    installedBy?: string | null
    isLatestVersion?: boolean | null
    patchLevel?: string | null
    supportEndDate?: Date | string | null
  }

  export type SoftwareCiUpdateInput = {
    version?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    architecture?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    licenseKey?: NullableStringFieldUpdateOperationsInput | string | null
    licenseCount?: NullableIntFieldUpdateOperationsInput | number | null
    installPath?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    installedBy?: NullableStringFieldUpdateOperationsInput | string | null
    isLatestVersion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    patchLevel?: NullableStringFieldUpdateOperationsInput | string | null
    supportEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    configurationItem?: ConfigurationItemUpdateOneRequiredWithoutSoftwareDetailsNestedInput
  }

  export type SoftwareCiUncheckedUpdateInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    version?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    architecture?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    licenseKey?: NullableStringFieldUpdateOperationsInput | string | null
    licenseCount?: NullableIntFieldUpdateOperationsInput | number | null
    installPath?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    installedBy?: NullableStringFieldUpdateOperationsInput | string | null
    isLatestVersion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    patchLevel?: NullableStringFieldUpdateOperationsInput | string | null
    supportEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SoftwareCiCreateManyInput = {
    ciId: string
    version?: string | null
    edition?: string | null
    architecture?: string | null
    licenseType?: string | null
    licenseKey?: string | null
    licenseCount?: number | null
    installPath?: string | null
    installDate?: Date | string | null
    installedBy?: string | null
    isLatestVersion?: boolean | null
    patchLevel?: string | null
    supportEndDate?: Date | string | null
  }

  export type SoftwareCiUpdateManyMutationInput = {
    version?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    architecture?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    licenseKey?: NullableStringFieldUpdateOperationsInput | string | null
    licenseCount?: NullableIntFieldUpdateOperationsInput | number | null
    installPath?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    installedBy?: NullableStringFieldUpdateOperationsInput | string | null
    isLatestVersion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    patchLevel?: NullableStringFieldUpdateOperationsInput | string | null
    supportEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SoftwareCiUncheckedUpdateManyInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    version?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    architecture?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    licenseKey?: NullableStringFieldUpdateOperationsInput | string | null
    licenseCount?: NullableIntFieldUpdateOperationsInput | number | null
    installPath?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    installedBy?: NullableStringFieldUpdateOperationsInput | string | null
    isLatestVersion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    patchLevel?: NullableStringFieldUpdateOperationsInput | string | null
    supportEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ApplicationCiCreateInput = {
    applicationUrl?: string | null
    applicationPort?: number | null
    applicationProtocol?: string | null
    businessFunction?: string | null
    userCount?: number | null
    dataClassification?: string | null
    programmingLanguage?: string | null
    framework?: string | null
    databaseType?: string | null
    slaTarget?: string | null
    availabilityTarget?: Decimal | DecimalJsLike | number | string | null
    configurationItem: ConfigurationItemCreateNestedOneWithoutApplicationDetailsInput
  }

  export type ApplicationCiUncheckedCreateInput = {
    ciId: string
    applicationUrl?: string | null
    applicationPort?: number | null
    applicationProtocol?: string | null
    businessFunction?: string | null
    userCount?: number | null
    dataClassification?: string | null
    programmingLanguage?: string | null
    framework?: string | null
    databaseType?: string | null
    slaTarget?: string | null
    availabilityTarget?: Decimal | DecimalJsLike | number | string | null
  }

  export type ApplicationCiUpdateInput = {
    applicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    applicationPort?: NullableIntFieldUpdateOperationsInput | number | null
    applicationProtocol?: NullableStringFieldUpdateOperationsInput | string | null
    businessFunction?: NullableStringFieldUpdateOperationsInput | string | null
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    dataClassification?: NullableStringFieldUpdateOperationsInput | string | null
    programmingLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    framework?: NullableStringFieldUpdateOperationsInput | string | null
    databaseType?: NullableStringFieldUpdateOperationsInput | string | null
    slaTarget?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    configurationItem?: ConfigurationItemUpdateOneRequiredWithoutApplicationDetailsNestedInput
  }

  export type ApplicationCiUncheckedUpdateInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    applicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    applicationPort?: NullableIntFieldUpdateOperationsInput | number | null
    applicationProtocol?: NullableStringFieldUpdateOperationsInput | string | null
    businessFunction?: NullableStringFieldUpdateOperationsInput | string | null
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    dataClassification?: NullableStringFieldUpdateOperationsInput | string | null
    programmingLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    framework?: NullableStringFieldUpdateOperationsInput | string | null
    databaseType?: NullableStringFieldUpdateOperationsInput | string | null
    slaTarget?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type ApplicationCiCreateManyInput = {
    ciId: string
    applicationUrl?: string | null
    applicationPort?: number | null
    applicationProtocol?: string | null
    businessFunction?: string | null
    userCount?: number | null
    dataClassification?: string | null
    programmingLanguage?: string | null
    framework?: string | null
    databaseType?: string | null
    slaTarget?: string | null
    availabilityTarget?: Decimal | DecimalJsLike | number | string | null
  }

  export type ApplicationCiUpdateManyMutationInput = {
    applicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    applicationPort?: NullableIntFieldUpdateOperationsInput | number | null
    applicationProtocol?: NullableStringFieldUpdateOperationsInput | string | null
    businessFunction?: NullableStringFieldUpdateOperationsInput | string | null
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    dataClassification?: NullableStringFieldUpdateOperationsInput | string | null
    programmingLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    framework?: NullableStringFieldUpdateOperationsInput | string | null
    databaseType?: NullableStringFieldUpdateOperationsInput | string | null
    slaTarget?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type ApplicationCiUncheckedUpdateManyInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    applicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    applicationPort?: NullableIntFieldUpdateOperationsInput | number | null
    applicationProtocol?: NullableStringFieldUpdateOperationsInput | string | null
    businessFunction?: NullableStringFieldUpdateOperationsInput | string | null
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    dataClassification?: NullableStringFieldUpdateOperationsInput | string | null
    programmingLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    framework?: NullableStringFieldUpdateOperationsInput | string | null
    databaseType?: NullableStringFieldUpdateOperationsInput | string | null
    slaTarget?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type NetworkCiCreateInput = {
    ipAddress?: string | null
    subnetMask?: string | null
    gateway?: string | null
    vlanId?: string | null
    portConfiguration?: NullableJsonNullValueInput | InputJsonValue
    routingTable?: NullableJsonNullValueInput | InputJsonValue
    firewallRules?: NullableJsonNullValueInput | InputJsonValue
    configurationItem: ConfigurationItemCreateNestedOneWithoutNetworkDetailsInput
  }

  export type NetworkCiUncheckedCreateInput = {
    ciId: string
    ipAddress?: string | null
    subnetMask?: string | null
    gateway?: string | null
    vlanId?: string | null
    portConfiguration?: NullableJsonNullValueInput | InputJsonValue
    routingTable?: NullableJsonNullValueInput | InputJsonValue
    firewallRules?: NullableJsonNullValueInput | InputJsonValue
  }

  export type NetworkCiUpdateInput = {
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subnetMask?: NullableStringFieldUpdateOperationsInput | string | null
    gateway?: NullableStringFieldUpdateOperationsInput | string | null
    vlanId?: NullableStringFieldUpdateOperationsInput | string | null
    portConfiguration?: NullableJsonNullValueInput | InputJsonValue
    routingTable?: NullableJsonNullValueInput | InputJsonValue
    firewallRules?: NullableJsonNullValueInput | InputJsonValue
    configurationItem?: ConfigurationItemUpdateOneRequiredWithoutNetworkDetailsNestedInput
  }

  export type NetworkCiUncheckedUpdateInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subnetMask?: NullableStringFieldUpdateOperationsInput | string | null
    gateway?: NullableStringFieldUpdateOperationsInput | string | null
    vlanId?: NullableStringFieldUpdateOperationsInput | string | null
    portConfiguration?: NullableJsonNullValueInput | InputJsonValue
    routingTable?: NullableJsonNullValueInput | InputJsonValue
    firewallRules?: NullableJsonNullValueInput | InputJsonValue
  }

  export type NetworkCiCreateManyInput = {
    ciId: string
    ipAddress?: string | null
    subnetMask?: string | null
    gateway?: string | null
    vlanId?: string | null
    portConfiguration?: NullableJsonNullValueInput | InputJsonValue
    routingTable?: NullableJsonNullValueInput | InputJsonValue
    firewallRules?: NullableJsonNullValueInput | InputJsonValue
  }

  export type NetworkCiUpdateManyMutationInput = {
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subnetMask?: NullableStringFieldUpdateOperationsInput | string | null
    gateway?: NullableStringFieldUpdateOperationsInput | string | null
    vlanId?: NullableStringFieldUpdateOperationsInput | string | null
    portConfiguration?: NullableJsonNullValueInput | InputJsonValue
    routingTable?: NullableJsonNullValueInput | InputJsonValue
    firewallRules?: NullableJsonNullValueInput | InputJsonValue
  }

  export type NetworkCiUncheckedUpdateManyInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subnetMask?: NullableStringFieldUpdateOperationsInput | string | null
    gateway?: NullableStringFieldUpdateOperationsInput | string | null
    vlanId?: NullableStringFieldUpdateOperationsInput | string | null
    portConfiguration?: NullableJsonNullValueInput | InputJsonValue
    routingTable?: NullableJsonNullValueInput | InputJsonValue
    firewallRules?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ServiceCiCreateInput = {
    serviceType?: string | null
    serviceLevel?: string | null
    businessOwner?: string | null
    slaDocument?: string | null
    availabilityTarget?: Decimal | DecimalJsLike | number | string | null
    performanceTarget?: string | null
    serviceHours?: NullableJsonNullValueInput | InputJsonValue
    maintenanceWindow?: NullableJsonNullValueInput | InputJsonValue
    configurationItem: ConfigurationItemCreateNestedOneWithoutServiceDetailsInput
  }

  export type ServiceCiUncheckedCreateInput = {
    ciId: string
    serviceType?: string | null
    serviceLevel?: string | null
    businessOwner?: string | null
    slaDocument?: string | null
    availabilityTarget?: Decimal | DecimalJsLike | number | string | null
    performanceTarget?: string | null
    serviceHours?: NullableJsonNullValueInput | InputJsonValue
    maintenanceWindow?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ServiceCiUpdateInput = {
    serviceType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceLevel?: NullableStringFieldUpdateOperationsInput | string | null
    businessOwner?: NullableStringFieldUpdateOperationsInput | string | null
    slaDocument?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: NullableStringFieldUpdateOperationsInput | string | null
    serviceHours?: NullableJsonNullValueInput | InputJsonValue
    maintenanceWindow?: NullableJsonNullValueInput | InputJsonValue
    configurationItem?: ConfigurationItemUpdateOneRequiredWithoutServiceDetailsNestedInput
  }

  export type ServiceCiUncheckedUpdateInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    serviceType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceLevel?: NullableStringFieldUpdateOperationsInput | string | null
    businessOwner?: NullableStringFieldUpdateOperationsInput | string | null
    slaDocument?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: NullableStringFieldUpdateOperationsInput | string | null
    serviceHours?: NullableJsonNullValueInput | InputJsonValue
    maintenanceWindow?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ServiceCiCreateManyInput = {
    ciId: string
    serviceType?: string | null
    serviceLevel?: string | null
    businessOwner?: string | null
    slaDocument?: string | null
    availabilityTarget?: Decimal | DecimalJsLike | number | string | null
    performanceTarget?: string | null
    serviceHours?: NullableJsonNullValueInput | InputJsonValue
    maintenanceWindow?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ServiceCiUpdateManyMutationInput = {
    serviceType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceLevel?: NullableStringFieldUpdateOperationsInput | string | null
    businessOwner?: NullableStringFieldUpdateOperationsInput | string | null
    slaDocument?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: NullableStringFieldUpdateOperationsInput | string | null
    serviceHours?: NullableJsonNullValueInput | InputJsonValue
    maintenanceWindow?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ServiceCiUncheckedUpdateManyInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    serviceType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceLevel?: NullableStringFieldUpdateOperationsInput | string | null
    businessOwner?: NullableStringFieldUpdateOperationsInput | string | null
    slaDocument?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: NullableStringFieldUpdateOperationsInput | string | null
    serviceHours?: NullableJsonNullValueInput | InputJsonValue
    maintenanceWindow?: NullableJsonNullValueInput | InputJsonValue
  }

  export type DatabaseCiCreateInput = {
    databaseType?: string | null
    databaseVersion?: string | null
    databaseSize?: string | null
    connectionString?: string | null
    port?: number | null
    schemaCount?: number | null
    backupSchedule?: NullableJsonNullValueInput | InputJsonValue
    lastBackupDate?: Date | string | null
    configurationItem: ConfigurationItemCreateNestedOneWithoutDatabaseDetailsInput
  }

  export type DatabaseCiUncheckedCreateInput = {
    ciId: string
    databaseType?: string | null
    databaseVersion?: string | null
    databaseSize?: string | null
    connectionString?: string | null
    port?: number | null
    schemaCount?: number | null
    backupSchedule?: NullableJsonNullValueInput | InputJsonValue
    lastBackupDate?: Date | string | null
  }

  export type DatabaseCiUpdateInput = {
    databaseType?: NullableStringFieldUpdateOperationsInput | string | null
    databaseVersion?: NullableStringFieldUpdateOperationsInput | string | null
    databaseSize?: NullableStringFieldUpdateOperationsInput | string | null
    connectionString?: NullableStringFieldUpdateOperationsInput | string | null
    port?: NullableIntFieldUpdateOperationsInput | number | null
    schemaCount?: NullableIntFieldUpdateOperationsInput | number | null
    backupSchedule?: NullableJsonNullValueInput | InputJsonValue
    lastBackupDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    configurationItem?: ConfigurationItemUpdateOneRequiredWithoutDatabaseDetailsNestedInput
  }

  export type DatabaseCiUncheckedUpdateInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    databaseType?: NullableStringFieldUpdateOperationsInput | string | null
    databaseVersion?: NullableStringFieldUpdateOperationsInput | string | null
    databaseSize?: NullableStringFieldUpdateOperationsInput | string | null
    connectionString?: NullableStringFieldUpdateOperationsInput | string | null
    port?: NullableIntFieldUpdateOperationsInput | number | null
    schemaCount?: NullableIntFieldUpdateOperationsInput | number | null
    backupSchedule?: NullableJsonNullValueInput | InputJsonValue
    lastBackupDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DatabaseCiCreateManyInput = {
    ciId: string
    databaseType?: string | null
    databaseVersion?: string | null
    databaseSize?: string | null
    connectionString?: string | null
    port?: number | null
    schemaCount?: number | null
    backupSchedule?: NullableJsonNullValueInput | InputJsonValue
    lastBackupDate?: Date | string | null
  }

  export type DatabaseCiUpdateManyMutationInput = {
    databaseType?: NullableStringFieldUpdateOperationsInput | string | null
    databaseVersion?: NullableStringFieldUpdateOperationsInput | string | null
    databaseSize?: NullableStringFieldUpdateOperationsInput | string | null
    connectionString?: NullableStringFieldUpdateOperationsInput | string | null
    port?: NullableIntFieldUpdateOperationsInput | number | null
    schemaCount?: NullableIntFieldUpdateOperationsInput | number | null
    backupSchedule?: NullableJsonNullValueInput | InputJsonValue
    lastBackupDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DatabaseCiUncheckedUpdateManyInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    databaseType?: NullableStringFieldUpdateOperationsInput | string | null
    databaseVersion?: NullableStringFieldUpdateOperationsInput | string | null
    databaseSize?: NullableStringFieldUpdateOperationsInput | string | null
    connectionString?: NullableStringFieldUpdateOperationsInput | string | null
    port?: NullableIntFieldUpdateOperationsInput | number | null
    schemaCount?: NullableIntFieldUpdateOperationsInput | number | null
    backupSchedule?: NullableJsonNullValueInput | InputJsonValue
    lastBackupDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type VirtualCiCreateInput = {
    hypervisorType?: string | null
    hostCiId?: string | null
    allocatedCpu?: number | null
    allocatedMemory?: string | null
    allocatedStorage?: string | null
    virtualNetworks?: NullableJsonNullValueInput | InputJsonValue
    configurationItem: ConfigurationItemCreateNestedOneWithoutVirtualDetailsInput
  }

  export type VirtualCiUncheckedCreateInput = {
    ciId: string
    hypervisorType?: string | null
    hostCiId?: string | null
    allocatedCpu?: number | null
    allocatedMemory?: string | null
    allocatedStorage?: string | null
    virtualNetworks?: NullableJsonNullValueInput | InputJsonValue
  }

  export type VirtualCiUpdateInput = {
    hypervisorType?: NullableStringFieldUpdateOperationsInput | string | null
    hostCiId?: NullableStringFieldUpdateOperationsInput | string | null
    allocatedCpu?: NullableIntFieldUpdateOperationsInput | number | null
    allocatedMemory?: NullableStringFieldUpdateOperationsInput | string | null
    allocatedStorage?: NullableStringFieldUpdateOperationsInput | string | null
    virtualNetworks?: NullableJsonNullValueInput | InputJsonValue
    configurationItem?: ConfigurationItemUpdateOneRequiredWithoutVirtualDetailsNestedInput
  }

  export type VirtualCiUncheckedUpdateInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    hypervisorType?: NullableStringFieldUpdateOperationsInput | string | null
    hostCiId?: NullableStringFieldUpdateOperationsInput | string | null
    allocatedCpu?: NullableIntFieldUpdateOperationsInput | number | null
    allocatedMemory?: NullableStringFieldUpdateOperationsInput | string | null
    allocatedStorage?: NullableStringFieldUpdateOperationsInput | string | null
    virtualNetworks?: NullableJsonNullValueInput | InputJsonValue
  }

  export type VirtualCiCreateManyInput = {
    ciId: string
    hypervisorType?: string | null
    hostCiId?: string | null
    allocatedCpu?: number | null
    allocatedMemory?: string | null
    allocatedStorage?: string | null
    virtualNetworks?: NullableJsonNullValueInput | InputJsonValue
  }

  export type VirtualCiUpdateManyMutationInput = {
    hypervisorType?: NullableStringFieldUpdateOperationsInput | string | null
    hostCiId?: NullableStringFieldUpdateOperationsInput | string | null
    allocatedCpu?: NullableIntFieldUpdateOperationsInput | number | null
    allocatedMemory?: NullableStringFieldUpdateOperationsInput | string | null
    allocatedStorage?: NullableStringFieldUpdateOperationsInput | string | null
    virtualNetworks?: NullableJsonNullValueInput | InputJsonValue
  }

  export type VirtualCiUncheckedUpdateManyInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    hypervisorType?: NullableStringFieldUpdateOperationsInput | string | null
    hostCiId?: NullableStringFieldUpdateOperationsInput | string | null
    allocatedCpu?: NullableIntFieldUpdateOperationsInput | number | null
    allocatedMemory?: NullableStringFieldUpdateOperationsInput | string | null
    allocatedStorage?: NullableStringFieldUpdateOperationsInput | string | null
    virtualNetworks?: NullableJsonNullValueInput | InputJsonValue
  }

  export type FacilityCiCreateInput = {
    facilityType?: string | null
    address?: string | null
    coordinates?: string | null
    squareFootage?: number | null
    capacity?: number | null
    powerCapacity?: string | null
    coolingCapacity?: string | null
    configurationItem: ConfigurationItemCreateNestedOneWithoutFacilityDetailsInput
  }

  export type FacilityCiUncheckedCreateInput = {
    ciId: string
    facilityType?: string | null
    address?: string | null
    coordinates?: string | null
    squareFootage?: number | null
    capacity?: number | null
    powerCapacity?: string | null
    coolingCapacity?: string | null
  }

  export type FacilityCiUpdateInput = {
    facilityType?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    coordinates?: NullableStringFieldUpdateOperationsInput | string | null
    squareFootage?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    powerCapacity?: NullableStringFieldUpdateOperationsInput | string | null
    coolingCapacity?: NullableStringFieldUpdateOperationsInput | string | null
    configurationItem?: ConfigurationItemUpdateOneRequiredWithoutFacilityDetailsNestedInput
  }

  export type FacilityCiUncheckedUpdateInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    facilityType?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    coordinates?: NullableStringFieldUpdateOperationsInput | string | null
    squareFootage?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    powerCapacity?: NullableStringFieldUpdateOperationsInput | string | null
    coolingCapacity?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FacilityCiCreateManyInput = {
    ciId: string
    facilityType?: string | null
    address?: string | null
    coordinates?: string | null
    squareFootage?: number | null
    capacity?: number | null
    powerCapacity?: string | null
    coolingCapacity?: string | null
  }

  export type FacilityCiUpdateManyMutationInput = {
    facilityType?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    coordinates?: NullableStringFieldUpdateOperationsInput | string | null
    squareFootage?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    powerCapacity?: NullableStringFieldUpdateOperationsInput | string | null
    coolingCapacity?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FacilityCiUncheckedUpdateManyInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    facilityType?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    coordinates?: NullableStringFieldUpdateOperationsInput | string | null
    squareFootage?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    powerCapacity?: NullableStringFieldUpdateOperationsInput | string | null
    coolingCapacity?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BusinessServiceCreateInput = {
    id?: string
    name: string
    description?: string | null
    businessOwner?: string | null
    technicalOwner?: string | null
    criticality?: string | null
    availabilityTarget?: Decimal | DecimalJsLike | number | string | null
    performanceTarget?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    configurationItems?: CiBusinessServiceCreateNestedManyWithoutBusinessServiceInput
  }

  export type BusinessServiceUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    businessOwner?: string | null
    technicalOwner?: string | null
    criticality?: string | null
    availabilityTarget?: Decimal | DecimalJsLike | number | string | null
    performanceTarget?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    configurationItems?: CiBusinessServiceUncheckedCreateNestedManyWithoutBusinessServiceInput
  }

  export type BusinessServiceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    businessOwner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    configurationItems?: CiBusinessServiceUpdateManyWithoutBusinessServiceNestedInput
  }

  export type BusinessServiceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    businessOwner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    configurationItems?: CiBusinessServiceUncheckedUpdateManyWithoutBusinessServiceNestedInput
  }

  export type BusinessServiceCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    businessOwner?: string | null
    technicalOwner?: string | null
    criticality?: string | null
    availabilityTarget?: Decimal | DecimalJsLike | number | string | null
    performanceTarget?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BusinessServiceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    businessOwner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessServiceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    businessOwner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiBusinessServiceCreateInput = {
    relationshipType: string
    criticality?: string | null
    createdAt?: Date | string
    configurationItem: ConfigurationItemCreateNestedOneWithoutBusinessServicesInput
    businessService: BusinessServiceCreateNestedOneWithoutConfigurationItemsInput
  }

  export type CiBusinessServiceUncheckedCreateInput = {
    ciId: string
    businessServiceId: string
    relationshipType: string
    criticality?: string | null
    createdAt?: Date | string
  }

  export type CiBusinessServiceUpdateInput = {
    relationshipType?: StringFieldUpdateOperationsInput | string
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    configurationItem?: ConfigurationItemUpdateOneRequiredWithoutBusinessServicesNestedInput
    businessService?: BusinessServiceUpdateOneRequiredWithoutConfigurationItemsNestedInput
  }

  export type CiBusinessServiceUncheckedUpdateInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    businessServiceId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiBusinessServiceCreateManyInput = {
    ciId: string
    businessServiceId: string
    relationshipType: string
    criticality?: string | null
    createdAt?: Date | string
  }

  export type CiBusinessServiceUpdateManyMutationInput = {
    relationshipType?: StringFieldUpdateOperationsInput | string
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiBusinessServiceUncheckedUpdateManyInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    businessServiceId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiIncidentCreateInput = {
    incidentId: string
    relationshipType: string
    createdAt?: Date | string
    configurationItem: ConfigurationItemCreateNestedOneWithoutIncidentsInput
  }

  export type CiIncidentUncheckedCreateInput = {
    ciId: string
    incidentId: string
    relationshipType: string
    createdAt?: Date | string
  }

  export type CiIncidentUpdateInput = {
    incidentId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    configurationItem?: ConfigurationItemUpdateOneRequiredWithoutIncidentsNestedInput
  }

  export type CiIncidentUncheckedUpdateInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    incidentId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiIncidentCreateManyInput = {
    ciId: string
    incidentId: string
    relationshipType: string
    createdAt?: Date | string
  }

  export type CiIncidentUpdateManyMutationInput = {
    incidentId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiIncidentUncheckedUpdateManyInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    incidentId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiChangeCreateInput = {
    changeId: string
    relationshipType: string
    createdAt?: Date | string
    configurationItem: ConfigurationItemCreateNestedOneWithoutChangesInput
  }

  export type CiChangeUncheckedCreateInput = {
    ciId: string
    changeId: string
    relationshipType: string
    createdAt?: Date | string
  }

  export type CiChangeUpdateInput = {
    changeId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    configurationItem?: ConfigurationItemUpdateOneRequiredWithoutChangesNestedInput
  }

  export type CiChangeUncheckedUpdateInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    changeId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiChangeCreateManyInput = {
    ciId: string
    changeId: string
    relationshipType: string
    createdAt?: Date | string
  }

  export type CiChangeUpdateManyMutationInput = {
    changeId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiChangeUncheckedUpdateManyInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    changeId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscoveryScheduleCreateInput = {
    id?: string
    name: string
    description?: string | null
    isActive?: boolean
    cronExpression: string
    nextRunDate?: Date | string | null
    lastRunDate?: Date | string | null
    discoveryType: string
    scopeConfiguration: JsonNullValueInput | InputJsonValue
    credentialIds?: DiscoveryScheduleCreatecredentialIdsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type DiscoveryScheduleUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    isActive?: boolean
    cronExpression: string
    nextRunDate?: Date | string | null
    lastRunDate?: Date | string | null
    discoveryType: string
    scopeConfiguration: JsonNullValueInput | InputJsonValue
    credentialIds?: DiscoveryScheduleCreatecredentialIdsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type DiscoveryScheduleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    cronExpression?: StringFieldUpdateOperationsInput | string
    nextRunDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastRunDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveryType?: StringFieldUpdateOperationsInput | string
    scopeConfiguration?: JsonNullValueInput | InputJsonValue
    credentialIds?: DiscoveryScheduleUpdatecredentialIdsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DiscoveryScheduleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    cronExpression?: StringFieldUpdateOperationsInput | string
    nextRunDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastRunDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveryType?: StringFieldUpdateOperationsInput | string
    scopeConfiguration?: JsonNullValueInput | InputJsonValue
    credentialIds?: DiscoveryScheduleUpdatecredentialIdsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DiscoveryScheduleCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    isActive?: boolean
    cronExpression: string
    nextRunDate?: Date | string | null
    lastRunDate?: Date | string | null
    discoveryType: string
    scopeConfiguration: JsonNullValueInput | InputJsonValue
    credentialIds?: DiscoveryScheduleCreatecredentialIdsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type DiscoveryScheduleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    cronExpression?: StringFieldUpdateOperationsInput | string
    nextRunDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastRunDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveryType?: StringFieldUpdateOperationsInput | string
    scopeConfiguration?: JsonNullValueInput | InputJsonValue
    credentialIds?: DiscoveryScheduleUpdatecredentialIdsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DiscoveryScheduleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    cronExpression?: StringFieldUpdateOperationsInput | string
    nextRunDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastRunDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveryType?: StringFieldUpdateOperationsInput | string
    scopeConfiguration?: JsonNullValueInput | InputJsonValue
    credentialIds?: DiscoveryScheduleUpdatecredentialIdsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DiscoveryRunCreateInput = {
    id?: string
    scheduleId?: string | null
    status: string
    startTime: Date | string
    endTime?: Date | string | null
    itemsDiscovered?: number
    itemsUpdated?: number
    itemsCreated?: number
    errors?: NullableJsonNullValueInput | InputJsonValue
    discoveredItems?: DiscoveredItemCreateNestedManyWithoutDiscoveryRunInput
  }

  export type DiscoveryRunUncheckedCreateInput = {
    id?: string
    scheduleId?: string | null
    status: string
    startTime: Date | string
    endTime?: Date | string | null
    itemsDiscovered?: number
    itemsUpdated?: number
    itemsCreated?: number
    errors?: NullableJsonNullValueInput | InputJsonValue
    discoveredItems?: DiscoveredItemUncheckedCreateNestedManyWithoutDiscoveryRunInput
  }

  export type DiscoveryRunUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    itemsDiscovered?: IntFieldUpdateOperationsInput | number
    itemsUpdated?: IntFieldUpdateOperationsInput | number
    itemsCreated?: IntFieldUpdateOperationsInput | number
    errors?: NullableJsonNullValueInput | InputJsonValue
    discoveredItems?: DiscoveredItemUpdateManyWithoutDiscoveryRunNestedInput
  }

  export type DiscoveryRunUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    itemsDiscovered?: IntFieldUpdateOperationsInput | number
    itemsUpdated?: IntFieldUpdateOperationsInput | number
    itemsCreated?: IntFieldUpdateOperationsInput | number
    errors?: NullableJsonNullValueInput | InputJsonValue
    discoveredItems?: DiscoveredItemUncheckedUpdateManyWithoutDiscoveryRunNestedInput
  }

  export type DiscoveryRunCreateManyInput = {
    id?: string
    scheduleId?: string | null
    status: string
    startTime: Date | string
    endTime?: Date | string | null
    itemsDiscovered?: number
    itemsUpdated?: number
    itemsCreated?: number
    errors?: NullableJsonNullValueInput | InputJsonValue
  }

  export type DiscoveryRunUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    itemsDiscovered?: IntFieldUpdateOperationsInput | number
    itemsUpdated?: IntFieldUpdateOperationsInput | number
    itemsCreated?: IntFieldUpdateOperationsInput | number
    errors?: NullableJsonNullValueInput | InputJsonValue
  }

  export type DiscoveryRunUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    itemsDiscovered?: IntFieldUpdateOperationsInput | number
    itemsUpdated?: IntFieldUpdateOperationsInput | number
    itemsCreated?: IntFieldUpdateOperationsInput | number
    errors?: NullableJsonNullValueInput | InputJsonValue
  }

  export type DiscoveredItemCreateInput = {
    id?: string
    ciId?: string | null
    discoveredData: JsonNullValueInput | InputJsonValue
    fingerprint: string
    status: string
    processingNotes?: string | null
    discoveredAt?: Date | string
    processedAt?: Date | string | null
    discoveryRun: DiscoveryRunCreateNestedOneWithoutDiscoveredItemsInput
  }

  export type DiscoveredItemUncheckedCreateInput = {
    id?: string
    runId: string
    ciId?: string | null
    discoveredData: JsonNullValueInput | InputJsonValue
    fingerprint: string
    status: string
    processingNotes?: string | null
    discoveredAt?: Date | string
    processedAt?: Date | string | null
  }

  export type DiscoveredItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: NullableStringFieldUpdateOperationsInput | string | null
    discoveredData?: JsonNullValueInput | InputJsonValue
    fingerprint?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    processingNotes?: NullableStringFieldUpdateOperationsInput | string | null
    discoveredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveryRun?: DiscoveryRunUpdateOneRequiredWithoutDiscoveredItemsNestedInput
  }

  export type DiscoveredItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    runId?: StringFieldUpdateOperationsInput | string
    ciId?: NullableStringFieldUpdateOperationsInput | string | null
    discoveredData?: JsonNullValueInput | InputJsonValue
    fingerprint?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    processingNotes?: NullableStringFieldUpdateOperationsInput | string | null
    discoveredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DiscoveredItemCreateManyInput = {
    id?: string
    runId: string
    ciId?: string | null
    discoveredData: JsonNullValueInput | InputJsonValue
    fingerprint: string
    status: string
    processingNotes?: string | null
    discoveredAt?: Date | string
    processedAt?: Date | string | null
  }

  export type DiscoveredItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: NullableStringFieldUpdateOperationsInput | string | null
    discoveredData?: JsonNullValueInput | InputJsonValue
    fingerprint?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    processingNotes?: NullableStringFieldUpdateOperationsInput | string | null
    discoveredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DiscoveredItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    runId?: StringFieldUpdateOperationsInput | string
    ciId?: NullableStringFieldUpdateOperationsInput | string | null
    discoveredData?: JsonNullValueInput | InputJsonValue
    fingerprint?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    processingNotes?: NullableStringFieldUpdateOperationsInput | string | null
    discoveredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CmdbHealthCreateInput = {
    id?: string
    metricDate: Date | string
    totalCis: number
    activeCis: number
    staleCis: number
    orphanedCis: number
    totalRelationships: number
    discoveredRelationships: number
    manualRelationships: number
    discoveredCis: number
    manualCis: number
    completenessScore: Decimal | DecimalJsLike | number | string
    accuracyScore: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
  }

  export type CmdbHealthUncheckedCreateInput = {
    id?: string
    metricDate: Date | string
    totalCis: number
    activeCis: number
    staleCis: number
    orphanedCis: number
    totalRelationships: number
    discoveredRelationships: number
    manualRelationships: number
    discoveredCis: number
    manualCis: number
    completenessScore: Decimal | DecimalJsLike | number | string
    accuracyScore: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
  }

  export type CmdbHealthUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    metricDate?: DateTimeFieldUpdateOperationsInput | Date | string
    totalCis?: IntFieldUpdateOperationsInput | number
    activeCis?: IntFieldUpdateOperationsInput | number
    staleCis?: IntFieldUpdateOperationsInput | number
    orphanedCis?: IntFieldUpdateOperationsInput | number
    totalRelationships?: IntFieldUpdateOperationsInput | number
    discoveredRelationships?: IntFieldUpdateOperationsInput | number
    manualRelationships?: IntFieldUpdateOperationsInput | number
    discoveredCis?: IntFieldUpdateOperationsInput | number
    manualCis?: IntFieldUpdateOperationsInput | number
    completenessScore?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    accuracyScore?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CmdbHealthUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    metricDate?: DateTimeFieldUpdateOperationsInput | Date | string
    totalCis?: IntFieldUpdateOperationsInput | number
    activeCis?: IntFieldUpdateOperationsInput | number
    staleCis?: IntFieldUpdateOperationsInput | number
    orphanedCis?: IntFieldUpdateOperationsInput | number
    totalRelationships?: IntFieldUpdateOperationsInput | number
    discoveredRelationships?: IntFieldUpdateOperationsInput | number
    manualRelationships?: IntFieldUpdateOperationsInput | number
    discoveredCis?: IntFieldUpdateOperationsInput | number
    manualCis?: IntFieldUpdateOperationsInput | number
    completenessScore?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    accuracyScore?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CmdbHealthCreateManyInput = {
    id?: string
    metricDate: Date | string
    totalCis: number
    activeCis: number
    staleCis: number
    orphanedCis: number
    totalRelationships: number
    discoveredRelationships: number
    manualRelationships: number
    discoveredCis: number
    manualCis: number
    completenessScore: Decimal | DecimalJsLike | number | string
    accuracyScore: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
  }

  export type CmdbHealthUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    metricDate?: DateTimeFieldUpdateOperationsInput | Date | string
    totalCis?: IntFieldUpdateOperationsInput | number
    activeCis?: IntFieldUpdateOperationsInput | number
    staleCis?: IntFieldUpdateOperationsInput | number
    orphanedCis?: IntFieldUpdateOperationsInput | number
    totalRelationships?: IntFieldUpdateOperationsInput | number
    discoveredRelationships?: IntFieldUpdateOperationsInput | number
    manualRelationships?: IntFieldUpdateOperationsInput | number
    discoveredCis?: IntFieldUpdateOperationsInput | number
    manualCis?: IntFieldUpdateOperationsInput | number
    completenessScore?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    accuracyScore?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CmdbHealthUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    metricDate?: DateTimeFieldUpdateOperationsInput | Date | string
    totalCis?: IntFieldUpdateOperationsInput | number
    activeCis?: IntFieldUpdateOperationsInput | number
    staleCis?: IntFieldUpdateOperationsInput | number
    orphanedCis?: IntFieldUpdateOperationsInput | number
    totalRelationships?: IntFieldUpdateOperationsInput | number
    discoveredRelationships?: IntFieldUpdateOperationsInput | number
    manualRelationships?: IntFieldUpdateOperationsInput | number
    discoveredCis?: IntFieldUpdateOperationsInput | number
    manualCis?: IntFieldUpdateOperationsInput | number
    completenessScore?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    accuracyScore?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiAuditLogCreateInput = {
    id?: string
    ciId: string
    operation: string
    fieldName?: string | null
    oldValue?: string | null
    newValue?: string | null
    changedBy?: string | null
    changeReason?: string | null
    changeTicket?: string | null
    timestamp?: Date | string
  }

  export type CiAuditLogUncheckedCreateInput = {
    id?: string
    ciId: string
    operation: string
    fieldName?: string | null
    oldValue?: string | null
    newValue?: string | null
    changedBy?: string | null
    changeReason?: string | null
    changeTicket?: string | null
    timestamp?: Date | string
  }

  export type CiAuditLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    operation?: StringFieldUpdateOperationsInput | string
    fieldName?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changeReason?: NullableStringFieldUpdateOperationsInput | string | null
    changeTicket?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiAuditLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    operation?: StringFieldUpdateOperationsInput | string
    fieldName?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changeReason?: NullableStringFieldUpdateOperationsInput | string | null
    changeTicket?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiAuditLogCreateManyInput = {
    id?: string
    ciId: string
    operation: string
    fieldName?: string | null
    oldValue?: string | null
    newValue?: string | null
    changedBy?: string | null
    changeReason?: string | null
    changeTicket?: string | null
    timestamp?: Date | string
  }

  export type CiAuditLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    operation?: StringFieldUpdateOperationsInput | string
    fieldName?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changeReason?: NullableStringFieldUpdateOperationsInput | string | null
    changeTicket?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiAuditLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    operation?: StringFieldUpdateOperationsInput | string
    fieldName?: NullableStringFieldUpdateOperationsInput | string | null
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changeReason?: NullableStringFieldUpdateOperationsInput | string | null
    changeTicket?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SupportGroupCreateInput = {
    id?: string
    name: string
    description?: string | null
    type?: string
    email?: string | null
    phone?: string | null
    manager?: string | null
    isActive?: boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: number | null
    externalId?: string | null
    adGroupDn?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    members?: SupportGroupMemberCreateNestedManyWithoutSupportGroupInput
    permissions?: SupportGroupPermissionCreateNestedManyWithoutSupportGroupInput
    configurationItems?: ConfigurationItemCreateNestedManyWithoutSupportGroupsInput
    ownerships?: CiOwnershipCreateNestedManyWithoutSupportGroupInput
    escalationTarget?: SupportGroupCreateNestedManyWithoutEscalationSourceInput
    escalationSource?: SupportGroupCreateNestedOneWithoutEscalationTargetInput
  }

  export type SupportGroupUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    type?: string
    email?: string | null
    phone?: string | null
    manager?: string | null
    escalationGroup?: string | null
    isActive?: boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: number | null
    externalId?: string | null
    adGroupDn?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    members?: SupportGroupMemberUncheckedCreateNestedManyWithoutSupportGroupInput
    permissions?: SupportGroupPermissionUncheckedCreateNestedManyWithoutSupportGroupInput
    configurationItems?: ConfigurationItemUncheckedCreateNestedManyWithoutSupportGroupsInput
    ownerships?: CiOwnershipUncheckedCreateNestedManyWithoutSupportGroupInput
    escalationTarget?: SupportGroupUncheckedCreateNestedManyWithoutEscalationSourceInput
  }

  export type SupportGroupUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    members?: SupportGroupMemberUpdateManyWithoutSupportGroupNestedInput
    permissions?: SupportGroupPermissionUpdateManyWithoutSupportGroupNestedInput
    configurationItems?: ConfigurationItemUpdateManyWithoutSupportGroupsNestedInput
    ownerships?: CiOwnershipUpdateManyWithoutSupportGroupNestedInput
    escalationTarget?: SupportGroupUpdateManyWithoutEscalationSourceNestedInput
    escalationSource?: SupportGroupUpdateOneWithoutEscalationTargetNestedInput
  }

  export type SupportGroupUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    escalationGroup?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    members?: SupportGroupMemberUncheckedUpdateManyWithoutSupportGroupNestedInput
    permissions?: SupportGroupPermissionUncheckedUpdateManyWithoutSupportGroupNestedInput
    configurationItems?: ConfigurationItemUncheckedUpdateManyWithoutSupportGroupsNestedInput
    ownerships?: CiOwnershipUncheckedUpdateManyWithoutSupportGroupNestedInput
    escalationTarget?: SupportGroupUncheckedUpdateManyWithoutEscalationSourceNestedInput
  }

  export type SupportGroupCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    type?: string
    email?: string | null
    phone?: string | null
    manager?: string | null
    escalationGroup?: string | null
    isActive?: boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: number | null
    externalId?: string | null
    adGroupDn?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type SupportGroupUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportGroupUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    escalationGroup?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportGroupMemberCreateInput = {
    id?: string
    userId: string
    role?: string
    isPrimary?: boolean
    isActive?: boolean
    startDate?: Date | string | null
    endDate?: Date | string | null
    assignedAt?: Date | string
    assignedBy?: string | null
    supportGroup: SupportGroupCreateNestedOneWithoutMembersInput
  }

  export type SupportGroupMemberUncheckedCreateInput = {
    id?: string
    supportGroupId: string
    userId: string
    role?: string
    isPrimary?: boolean
    isActive?: boolean
    startDate?: Date | string | null
    endDate?: Date | string | null
    assignedAt?: Date | string
    assignedBy?: string | null
  }

  export type SupportGroupMemberUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: SupportGroupUpdateOneRequiredWithoutMembersNestedInput
  }

  export type SupportGroupMemberUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    supportGroupId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportGroupMemberCreateManyInput = {
    id?: string
    supportGroupId: string
    userId: string
    role?: string
    isPrimary?: boolean
    isActive?: boolean
    startDate?: Date | string | null
    endDate?: Date | string | null
    assignedAt?: Date | string
    assignedBy?: string | null
  }

  export type SupportGroupMemberUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportGroupMemberUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    supportGroupId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportGroupPermissionCreateInput = {
    id?: string
    resource: string
    action: string
    scope?: string | null
    conditions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    grantedAt?: Date | string
    grantedBy?: string | null
    supportGroup: SupportGroupCreateNestedOneWithoutPermissionsInput
  }

  export type SupportGroupPermissionUncheckedCreateInput = {
    id?: string
    supportGroupId: string
    resource: string
    action: string
    scope?: string | null
    conditions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    grantedAt?: Date | string
    grantedBy?: string | null
  }

  export type SupportGroupPermissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    conditions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    grantedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grantedBy?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: SupportGroupUpdateOneRequiredWithoutPermissionsNestedInput
  }

  export type SupportGroupPermissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    supportGroupId?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    conditions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    grantedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grantedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportGroupPermissionCreateManyInput = {
    id?: string
    supportGroupId: string
    resource: string
    action: string
    scope?: string | null
    conditions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    grantedAt?: Date | string
    grantedBy?: string | null
  }

  export type SupportGroupPermissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    conditions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    grantedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grantedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportGroupPermissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    supportGroupId?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    conditions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    grantedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grantedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiOwnershipCreateInput = {
    id?: string
    ownershipType: string
    userId: string
    isPrimary?: boolean
    isActive?: boolean
    startDate?: Date | string | null
    endDate?: Date | string | null
    responsibilities?: CiOwnershipCreateresponsibilitiesInput | string[]
    assignedAt?: Date | string
    assignedBy?: string | null
    configurationItem: ConfigurationItemCreateNestedOneWithoutOwnershipInput
    supportGroup?: SupportGroupCreateNestedOneWithoutOwnershipsInput
  }

  export type CiOwnershipUncheckedCreateInput = {
    id?: string
    ciId: string
    ownershipType: string
    userId: string
    supportGroupId?: string | null
    isPrimary?: boolean
    isActive?: boolean
    startDate?: Date | string | null
    endDate?: Date | string | null
    responsibilities?: CiOwnershipCreateresponsibilitiesInput | string[]
    assignedAt?: Date | string
    assignedBy?: string | null
  }

  export type CiOwnershipUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownershipType?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responsibilities?: CiOwnershipUpdateresponsibilitiesInput | string[]
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: NullableStringFieldUpdateOperationsInput | string | null
    configurationItem?: ConfigurationItemUpdateOneRequiredWithoutOwnershipNestedInput
    supportGroup?: SupportGroupUpdateOneWithoutOwnershipsNestedInput
  }

  export type CiOwnershipUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    ownershipType?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    supportGroupId?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responsibilities?: CiOwnershipUpdateresponsibilitiesInput | string[]
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiOwnershipCreateManyInput = {
    id?: string
    ciId: string
    ownershipType: string
    userId: string
    supportGroupId?: string | null
    isPrimary?: boolean
    isActive?: boolean
    startDate?: Date | string | null
    endDate?: Date | string | null
    responsibilities?: CiOwnershipCreateresponsibilitiesInput | string[]
    assignedAt?: Date | string
    assignedBy?: string | null
  }

  export type CiOwnershipUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownershipType?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responsibilities?: CiOwnershipUpdateresponsibilitiesInput | string[]
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiOwnershipUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    ownershipType?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    supportGroupId?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responsibilities?: CiOwnershipUpdateresponsibilitiesInput | string[]
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CmdbInventoryMappingCreateInput = {
    id?: string
    inventoryAssetId: number
    mappingType: string
    relationship?: string | null
    syncEnabled?: boolean
    lastSyncAt?: Date | string | null
    syncStatus?: string | null
    syncErrors?: string | null
    conflictResolution?: string
    fieldMapping?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    configurationItem: ConfigurationItemCreateNestedOneWithoutInventoryMappingInput
  }

  export type CmdbInventoryMappingUncheckedCreateInput = {
    id?: string
    ciId: string
    inventoryAssetId: number
    mappingType: string
    relationship?: string | null
    syncEnabled?: boolean
    lastSyncAt?: Date | string | null
    syncStatus?: string | null
    syncErrors?: string | null
    conflictResolution?: string
    fieldMapping?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type CmdbInventoryMappingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    inventoryAssetId?: IntFieldUpdateOperationsInput | number
    mappingType?: StringFieldUpdateOperationsInput | string
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    syncEnabled?: BoolFieldUpdateOperationsInput | boolean
    lastSyncAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncStatus?: NullableStringFieldUpdateOperationsInput | string | null
    syncErrors?: NullableStringFieldUpdateOperationsInput | string | null
    conflictResolution?: StringFieldUpdateOperationsInput | string
    fieldMapping?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    configurationItem?: ConfigurationItemUpdateOneRequiredWithoutInventoryMappingNestedInput
  }

  export type CmdbInventoryMappingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    inventoryAssetId?: IntFieldUpdateOperationsInput | number
    mappingType?: StringFieldUpdateOperationsInput | string
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    syncEnabled?: BoolFieldUpdateOperationsInput | boolean
    lastSyncAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncStatus?: NullableStringFieldUpdateOperationsInput | string | null
    syncErrors?: NullableStringFieldUpdateOperationsInput | string | null
    conflictResolution?: StringFieldUpdateOperationsInput | string
    fieldMapping?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CmdbInventoryMappingCreateManyInput = {
    id?: string
    ciId: string
    inventoryAssetId: number
    mappingType: string
    relationship?: string | null
    syncEnabled?: boolean
    lastSyncAt?: Date | string | null
    syncStatus?: string | null
    syncErrors?: string | null
    conflictResolution?: string
    fieldMapping?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type CmdbInventoryMappingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    inventoryAssetId?: IntFieldUpdateOperationsInput | number
    mappingType?: StringFieldUpdateOperationsInput | string
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    syncEnabled?: BoolFieldUpdateOperationsInput | boolean
    lastSyncAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncStatus?: NullableStringFieldUpdateOperationsInput | string | null
    syncErrors?: NullableStringFieldUpdateOperationsInput | string | null
    conflictResolution?: StringFieldUpdateOperationsInput | string
    fieldMapping?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CmdbInventoryMappingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    inventoryAssetId?: IntFieldUpdateOperationsInput | number
    mappingType?: StringFieldUpdateOperationsInput | string
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    syncEnabled?: BoolFieldUpdateOperationsInput | boolean
    lastSyncAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncStatus?: NullableStringFieldUpdateOperationsInput | string | null
    syncErrors?: NullableStringFieldUpdateOperationsInput | string | null
    conflictResolution?: StringFieldUpdateOperationsInput | string
    fieldMapping?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type CiTypeScalarRelationFilter = {
    is?: CiTypeWhereInput
    isNot?: CiTypeWhereInput
  }

  export type CiRelationshipListRelationFilter = {
    every?: CiRelationshipWhereInput
    some?: CiRelationshipWhereInput
    none?: CiRelationshipWhereInput
  }

  export type CiIncidentListRelationFilter = {
    every?: CiIncidentWhereInput
    some?: CiIncidentWhereInput
    none?: CiIncidentWhereInput
  }

  export type CiChangeListRelationFilter = {
    every?: CiChangeWhereInput
    some?: CiChangeWhereInput
    none?: CiChangeWhereInput
  }

  export type CiBusinessServiceListRelationFilter = {
    every?: CiBusinessServiceWhereInput
    some?: CiBusinessServiceWhereInput
    none?: CiBusinessServiceWhereInput
  }

  export type CiOwnershipListRelationFilter = {
    every?: CiOwnershipWhereInput
    some?: CiOwnershipWhereInput
    none?: CiOwnershipWhereInput
  }

  export type CmdbInventoryMappingListRelationFilter = {
    every?: CmdbInventoryMappingWhereInput
    some?: CmdbInventoryMappingWhereInput
    none?: CmdbInventoryMappingWhereInput
  }

  export type SupportGroupListRelationFilter = {
    every?: SupportGroupWhereInput
    some?: SupportGroupWhereInput
    none?: SupportGroupWhereInput
  }

  export type HardwareCiNullableScalarRelationFilter = {
    is?: HardwareCiWhereInput | null
    isNot?: HardwareCiWhereInput | null
  }

  export type SoftwareCiNullableScalarRelationFilter = {
    is?: SoftwareCiWhereInput | null
    isNot?: SoftwareCiWhereInput | null
  }

  export type ApplicationCiNullableScalarRelationFilter = {
    is?: ApplicationCiWhereInput | null
    isNot?: ApplicationCiWhereInput | null
  }

  export type NetworkCiNullableScalarRelationFilter = {
    is?: NetworkCiWhereInput | null
    isNot?: NetworkCiWhereInput | null
  }

  export type ServiceCiNullableScalarRelationFilter = {
    is?: ServiceCiWhereInput | null
    isNot?: ServiceCiWhereInput | null
  }

  export type DatabaseCiNullableScalarRelationFilter = {
    is?: DatabaseCiWhereInput | null
    isNot?: DatabaseCiWhereInput | null
  }

  export type VirtualCiNullableScalarRelationFilter = {
    is?: VirtualCiWhereInput | null
    isNot?: VirtualCiWhereInput | null
  }

  export type FacilityCiNullableScalarRelationFilter = {
    is?: FacilityCiWhereInput | null
    isNot?: FacilityCiWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CiRelationshipOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CiIncidentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CiChangeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CiBusinessServiceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CiOwnershipOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CmdbInventoryMappingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupportGroupOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ConfigurationItemCountOrderByAggregateInput = {
    id?: SortOrder
    ciId?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    ciType?: SortOrder
    ciSubType?: SortOrder
    ciStatus?: SortOrder
    operationalStatus?: SortOrder
    environment?: SortOrder
    criticality?: SortOrder
    businessService?: SortOrder
    owner?: SortOrder
    technicalOwner?: SortOrder
    supportGroup?: SortOrder
    location?: SortOrder
    site?: SortOrder
    building?: SortOrder
    floor?: SortOrder
    room?: SortOrder
    rack?: SortOrder
    rackPosition?: SortOrder
    department?: SortOrder
    costCenter?: SortOrder
    installDate?: SortOrder
    firstDiscoveredDate?: SortOrder
    lastDiscoveredDate?: SortOrder
    warrantyExpiryDate?: SortOrder
    maintenanceExpiryDate?: SortOrder
    retirementDate?: SortOrder
    discoverySource?: SortOrder
    isDiscovered?: SortOrder
    lastScanDate?: SortOrder
    purchasePrice?: SortOrder
    currentValue?: SortOrder
    vendor?: SortOrder
    manufacturer?: SortOrder
    model?: SortOrder
    serialNumber?: SortOrder
    assetTag?: SortOrder
    customFields?: SortOrder
    attributes?: SortOrder
    tags?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ConfigurationItemAvgOrderByAggregateInput = {
    purchasePrice?: SortOrder
    currentValue?: SortOrder
  }

  export type ConfigurationItemMaxOrderByAggregateInput = {
    id?: SortOrder
    ciId?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    ciType?: SortOrder
    ciSubType?: SortOrder
    ciStatus?: SortOrder
    operationalStatus?: SortOrder
    environment?: SortOrder
    criticality?: SortOrder
    businessService?: SortOrder
    owner?: SortOrder
    technicalOwner?: SortOrder
    supportGroup?: SortOrder
    location?: SortOrder
    site?: SortOrder
    building?: SortOrder
    floor?: SortOrder
    room?: SortOrder
    rack?: SortOrder
    rackPosition?: SortOrder
    department?: SortOrder
    costCenter?: SortOrder
    installDate?: SortOrder
    firstDiscoveredDate?: SortOrder
    lastDiscoveredDate?: SortOrder
    warrantyExpiryDate?: SortOrder
    maintenanceExpiryDate?: SortOrder
    retirementDate?: SortOrder
    discoverySource?: SortOrder
    isDiscovered?: SortOrder
    lastScanDate?: SortOrder
    purchasePrice?: SortOrder
    currentValue?: SortOrder
    vendor?: SortOrder
    manufacturer?: SortOrder
    model?: SortOrder
    serialNumber?: SortOrder
    assetTag?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ConfigurationItemMinOrderByAggregateInput = {
    id?: SortOrder
    ciId?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    ciType?: SortOrder
    ciSubType?: SortOrder
    ciStatus?: SortOrder
    operationalStatus?: SortOrder
    environment?: SortOrder
    criticality?: SortOrder
    businessService?: SortOrder
    owner?: SortOrder
    technicalOwner?: SortOrder
    supportGroup?: SortOrder
    location?: SortOrder
    site?: SortOrder
    building?: SortOrder
    floor?: SortOrder
    room?: SortOrder
    rack?: SortOrder
    rackPosition?: SortOrder
    department?: SortOrder
    costCenter?: SortOrder
    installDate?: SortOrder
    firstDiscoveredDate?: SortOrder
    lastDiscoveredDate?: SortOrder
    warrantyExpiryDate?: SortOrder
    maintenanceExpiryDate?: SortOrder
    retirementDate?: SortOrder
    discoverySource?: SortOrder
    isDiscovered?: SortOrder
    lastScanDate?: SortOrder
    purchasePrice?: SortOrder
    currentValue?: SortOrder
    vendor?: SortOrder
    manufacturer?: SortOrder
    model?: SortOrder
    serialNumber?: SortOrder
    assetTag?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ConfigurationItemSumOrderByAggregateInput = {
    purchasePrice?: SortOrder
    currentValue?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type CiTypeNullableScalarRelationFilter = {
    is?: CiTypeWhereInput | null
    isNot?: CiTypeWhereInput | null
  }

  export type CiTypeListRelationFilter = {
    every?: CiTypeWhereInput
    some?: CiTypeWhereInput
    none?: CiTypeWhereInput
  }

  export type ConfigurationItemListRelationFilter = {
    every?: ConfigurationItemWhereInput
    some?: ConfigurationItemWhereInput
    none?: ConfigurationItemWhereInput
  }

  export type CiRelationshipTypeListRelationFilter = {
    every?: CiRelationshipTypeWhereInput
    some?: CiRelationshipTypeWhereInput
    none?: CiRelationshipTypeWhereInput
  }

  export type CiTypeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ConfigurationItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CiRelationshipTypeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CiTypeCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    category?: SortOrder
    icon?: SortOrder
    color?: SortOrder
    parentTypeId?: SortOrder
    isAbstract?: SortOrder
    isActive?: SortOrder
    attributeSchema?: SortOrder
    validationRules?: SortOrder
    defaultStatus?: SortOrder
    allowedStatuses?: SortOrder
    discoveryEnabled?: SortOrder
    discoveryRules?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CiTypeMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    category?: SortOrder
    icon?: SortOrder
    color?: SortOrder
    parentTypeId?: SortOrder
    isAbstract?: SortOrder
    isActive?: SortOrder
    defaultStatus?: SortOrder
    discoveryEnabled?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CiTypeMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    category?: SortOrder
    icon?: SortOrder
    color?: SortOrder
    parentTypeId?: SortOrder
    isAbstract?: SortOrder
    isActive?: SortOrder
    defaultStatus?: SortOrder
    discoveryEnabled?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CiRelationshipTypeCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    isDirectional?: SortOrder
    category?: SortOrder
    sourceCiTypeId?: SortOrder
    targetCiTypeId?: SortOrder
    allowMultiple?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CiRelationshipTypeMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    isDirectional?: SortOrder
    category?: SortOrder
    sourceCiTypeId?: SortOrder
    targetCiTypeId?: SortOrder
    allowMultiple?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CiRelationshipTypeMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    displayName?: SortOrder
    description?: SortOrder
    isDirectional?: SortOrder
    category?: SortOrder
    sourceCiTypeId?: SortOrder
    targetCiTypeId?: SortOrder
    allowMultiple?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConfigurationItemScalarRelationFilter = {
    is?: ConfigurationItemWhereInput
    isNot?: ConfigurationItemWhereInput
  }

  export type CiRelationshipTypeScalarRelationFilter = {
    is?: CiRelationshipTypeWhereInput
    isNot?: CiRelationshipTypeWhereInput
  }

  export type CiRelationshipSourceCiIdTargetCiIdRelationshipTypeIdCompoundUniqueInput = {
    sourceCiId: string
    targetCiId: string
    relationshipTypeId: string
  }

  export type CiRelationshipCountOrderByAggregateInput = {
    id?: SortOrder
    sourceCiId?: SortOrder
    targetCiId?: SortOrder
    relationshipTypeId?: SortOrder
    strength?: SortOrder
    criticality?: SortOrder
    description?: SortOrder
    attributes?: SortOrder
    isActive?: SortOrder
    validFrom?: SortOrder
    validTo?: SortOrder
    discoveredDate?: SortOrder
    isDiscovered?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type CiRelationshipMaxOrderByAggregateInput = {
    id?: SortOrder
    sourceCiId?: SortOrder
    targetCiId?: SortOrder
    relationshipTypeId?: SortOrder
    strength?: SortOrder
    criticality?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    validFrom?: SortOrder
    validTo?: SortOrder
    discoveredDate?: SortOrder
    isDiscovered?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type CiRelationshipMinOrderByAggregateInput = {
    id?: SortOrder
    sourceCiId?: SortOrder
    targetCiId?: SortOrder
    relationshipTypeId?: SortOrder
    strength?: SortOrder
    criticality?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    validFrom?: SortOrder
    validTo?: SortOrder
    discoveredDate?: SortOrder
    isDiscovered?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type HardwareCiCountOrderByAggregateInput = {
    ciId?: SortOrder
    processorType?: SortOrder
    processorSpeed?: SortOrder
    coreCount?: SortOrder
    memorySize?: SortOrder
    storageSize?: SortOrder
    storageType?: SortOrder
    macAddress?: SortOrder
    ipAddress?: SortOrder
    portCount?: SortOrder
    formFactor?: SortOrder
    dimensions?: SortOrder
    weight?: SortOrder
    powerRequirements?: SortOrder
  }

  export type HardwareCiAvgOrderByAggregateInput = {
    coreCount?: SortOrder
    portCount?: SortOrder
  }

  export type HardwareCiMaxOrderByAggregateInput = {
    ciId?: SortOrder
    processorType?: SortOrder
    processorSpeed?: SortOrder
    coreCount?: SortOrder
    memorySize?: SortOrder
    storageSize?: SortOrder
    storageType?: SortOrder
    macAddress?: SortOrder
    ipAddress?: SortOrder
    portCount?: SortOrder
    formFactor?: SortOrder
    dimensions?: SortOrder
    weight?: SortOrder
    powerRequirements?: SortOrder
  }

  export type HardwareCiMinOrderByAggregateInput = {
    ciId?: SortOrder
    processorType?: SortOrder
    processorSpeed?: SortOrder
    coreCount?: SortOrder
    memorySize?: SortOrder
    storageSize?: SortOrder
    storageType?: SortOrder
    macAddress?: SortOrder
    ipAddress?: SortOrder
    portCount?: SortOrder
    formFactor?: SortOrder
    dimensions?: SortOrder
    weight?: SortOrder
    powerRequirements?: SortOrder
  }

  export type HardwareCiSumOrderByAggregateInput = {
    coreCount?: SortOrder
    portCount?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type SoftwareCiCountOrderByAggregateInput = {
    ciId?: SortOrder
    version?: SortOrder
    edition?: SortOrder
    architecture?: SortOrder
    licenseType?: SortOrder
    licenseKey?: SortOrder
    licenseCount?: SortOrder
    installPath?: SortOrder
    installDate?: SortOrder
    installedBy?: SortOrder
    isLatestVersion?: SortOrder
    patchLevel?: SortOrder
    supportEndDate?: SortOrder
  }

  export type SoftwareCiAvgOrderByAggregateInput = {
    licenseCount?: SortOrder
  }

  export type SoftwareCiMaxOrderByAggregateInput = {
    ciId?: SortOrder
    version?: SortOrder
    edition?: SortOrder
    architecture?: SortOrder
    licenseType?: SortOrder
    licenseKey?: SortOrder
    licenseCount?: SortOrder
    installPath?: SortOrder
    installDate?: SortOrder
    installedBy?: SortOrder
    isLatestVersion?: SortOrder
    patchLevel?: SortOrder
    supportEndDate?: SortOrder
  }

  export type SoftwareCiMinOrderByAggregateInput = {
    ciId?: SortOrder
    version?: SortOrder
    edition?: SortOrder
    architecture?: SortOrder
    licenseType?: SortOrder
    licenseKey?: SortOrder
    licenseCount?: SortOrder
    installPath?: SortOrder
    installDate?: SortOrder
    installedBy?: SortOrder
    isLatestVersion?: SortOrder
    patchLevel?: SortOrder
    supportEndDate?: SortOrder
  }

  export type SoftwareCiSumOrderByAggregateInput = {
    licenseCount?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type ApplicationCiCountOrderByAggregateInput = {
    ciId?: SortOrder
    applicationUrl?: SortOrder
    applicationPort?: SortOrder
    applicationProtocol?: SortOrder
    businessFunction?: SortOrder
    userCount?: SortOrder
    dataClassification?: SortOrder
    programmingLanguage?: SortOrder
    framework?: SortOrder
    databaseType?: SortOrder
    slaTarget?: SortOrder
    availabilityTarget?: SortOrder
  }

  export type ApplicationCiAvgOrderByAggregateInput = {
    applicationPort?: SortOrder
    userCount?: SortOrder
    availabilityTarget?: SortOrder
  }

  export type ApplicationCiMaxOrderByAggregateInput = {
    ciId?: SortOrder
    applicationUrl?: SortOrder
    applicationPort?: SortOrder
    applicationProtocol?: SortOrder
    businessFunction?: SortOrder
    userCount?: SortOrder
    dataClassification?: SortOrder
    programmingLanguage?: SortOrder
    framework?: SortOrder
    databaseType?: SortOrder
    slaTarget?: SortOrder
    availabilityTarget?: SortOrder
  }

  export type ApplicationCiMinOrderByAggregateInput = {
    ciId?: SortOrder
    applicationUrl?: SortOrder
    applicationPort?: SortOrder
    applicationProtocol?: SortOrder
    businessFunction?: SortOrder
    userCount?: SortOrder
    dataClassification?: SortOrder
    programmingLanguage?: SortOrder
    framework?: SortOrder
    databaseType?: SortOrder
    slaTarget?: SortOrder
    availabilityTarget?: SortOrder
  }

  export type ApplicationCiSumOrderByAggregateInput = {
    applicationPort?: SortOrder
    userCount?: SortOrder
    availabilityTarget?: SortOrder
  }

  export type NetworkCiCountOrderByAggregateInput = {
    ciId?: SortOrder
    ipAddress?: SortOrder
    subnetMask?: SortOrder
    gateway?: SortOrder
    vlanId?: SortOrder
    portConfiguration?: SortOrder
    routingTable?: SortOrder
    firewallRules?: SortOrder
  }

  export type NetworkCiMaxOrderByAggregateInput = {
    ciId?: SortOrder
    ipAddress?: SortOrder
    subnetMask?: SortOrder
    gateway?: SortOrder
    vlanId?: SortOrder
  }

  export type NetworkCiMinOrderByAggregateInput = {
    ciId?: SortOrder
    ipAddress?: SortOrder
    subnetMask?: SortOrder
    gateway?: SortOrder
    vlanId?: SortOrder
  }

  export type ServiceCiCountOrderByAggregateInput = {
    ciId?: SortOrder
    serviceType?: SortOrder
    serviceLevel?: SortOrder
    businessOwner?: SortOrder
    slaDocument?: SortOrder
    availabilityTarget?: SortOrder
    performanceTarget?: SortOrder
    serviceHours?: SortOrder
    maintenanceWindow?: SortOrder
  }

  export type ServiceCiAvgOrderByAggregateInput = {
    availabilityTarget?: SortOrder
  }

  export type ServiceCiMaxOrderByAggregateInput = {
    ciId?: SortOrder
    serviceType?: SortOrder
    serviceLevel?: SortOrder
    businessOwner?: SortOrder
    slaDocument?: SortOrder
    availabilityTarget?: SortOrder
    performanceTarget?: SortOrder
  }

  export type ServiceCiMinOrderByAggregateInput = {
    ciId?: SortOrder
    serviceType?: SortOrder
    serviceLevel?: SortOrder
    businessOwner?: SortOrder
    slaDocument?: SortOrder
    availabilityTarget?: SortOrder
    performanceTarget?: SortOrder
  }

  export type ServiceCiSumOrderByAggregateInput = {
    availabilityTarget?: SortOrder
  }

  export type DatabaseCiCountOrderByAggregateInput = {
    ciId?: SortOrder
    databaseType?: SortOrder
    databaseVersion?: SortOrder
    databaseSize?: SortOrder
    connectionString?: SortOrder
    port?: SortOrder
    schemaCount?: SortOrder
    backupSchedule?: SortOrder
    lastBackupDate?: SortOrder
  }

  export type DatabaseCiAvgOrderByAggregateInput = {
    port?: SortOrder
    schemaCount?: SortOrder
  }

  export type DatabaseCiMaxOrderByAggregateInput = {
    ciId?: SortOrder
    databaseType?: SortOrder
    databaseVersion?: SortOrder
    databaseSize?: SortOrder
    connectionString?: SortOrder
    port?: SortOrder
    schemaCount?: SortOrder
    lastBackupDate?: SortOrder
  }

  export type DatabaseCiMinOrderByAggregateInput = {
    ciId?: SortOrder
    databaseType?: SortOrder
    databaseVersion?: SortOrder
    databaseSize?: SortOrder
    connectionString?: SortOrder
    port?: SortOrder
    schemaCount?: SortOrder
    lastBackupDate?: SortOrder
  }

  export type DatabaseCiSumOrderByAggregateInput = {
    port?: SortOrder
    schemaCount?: SortOrder
  }

  export type VirtualCiCountOrderByAggregateInput = {
    ciId?: SortOrder
    hypervisorType?: SortOrder
    hostCiId?: SortOrder
    allocatedCpu?: SortOrder
    allocatedMemory?: SortOrder
    allocatedStorage?: SortOrder
    virtualNetworks?: SortOrder
  }

  export type VirtualCiAvgOrderByAggregateInput = {
    allocatedCpu?: SortOrder
  }

  export type VirtualCiMaxOrderByAggregateInput = {
    ciId?: SortOrder
    hypervisorType?: SortOrder
    hostCiId?: SortOrder
    allocatedCpu?: SortOrder
    allocatedMemory?: SortOrder
    allocatedStorage?: SortOrder
  }

  export type VirtualCiMinOrderByAggregateInput = {
    ciId?: SortOrder
    hypervisorType?: SortOrder
    hostCiId?: SortOrder
    allocatedCpu?: SortOrder
    allocatedMemory?: SortOrder
    allocatedStorage?: SortOrder
  }

  export type VirtualCiSumOrderByAggregateInput = {
    allocatedCpu?: SortOrder
  }

  export type FacilityCiCountOrderByAggregateInput = {
    ciId?: SortOrder
    facilityType?: SortOrder
    address?: SortOrder
    coordinates?: SortOrder
    squareFootage?: SortOrder
    capacity?: SortOrder
    powerCapacity?: SortOrder
    coolingCapacity?: SortOrder
  }

  export type FacilityCiAvgOrderByAggregateInput = {
    squareFootage?: SortOrder
    capacity?: SortOrder
  }

  export type FacilityCiMaxOrderByAggregateInput = {
    ciId?: SortOrder
    facilityType?: SortOrder
    address?: SortOrder
    coordinates?: SortOrder
    squareFootage?: SortOrder
    capacity?: SortOrder
    powerCapacity?: SortOrder
    coolingCapacity?: SortOrder
  }

  export type FacilityCiMinOrderByAggregateInput = {
    ciId?: SortOrder
    facilityType?: SortOrder
    address?: SortOrder
    coordinates?: SortOrder
    squareFootage?: SortOrder
    capacity?: SortOrder
    powerCapacity?: SortOrder
    coolingCapacity?: SortOrder
  }

  export type FacilityCiSumOrderByAggregateInput = {
    squareFootage?: SortOrder
    capacity?: SortOrder
  }

  export type BusinessServiceCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    businessOwner?: SortOrder
    technicalOwner?: SortOrder
    criticality?: SortOrder
    availabilityTarget?: SortOrder
    performanceTarget?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessServiceAvgOrderByAggregateInput = {
    availabilityTarget?: SortOrder
  }

  export type BusinessServiceMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    businessOwner?: SortOrder
    technicalOwner?: SortOrder
    criticality?: SortOrder
    availabilityTarget?: SortOrder
    performanceTarget?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessServiceMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    businessOwner?: SortOrder
    technicalOwner?: SortOrder
    criticality?: SortOrder
    availabilityTarget?: SortOrder
    performanceTarget?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessServiceSumOrderByAggregateInput = {
    availabilityTarget?: SortOrder
  }

  export type BusinessServiceScalarRelationFilter = {
    is?: BusinessServiceWhereInput
    isNot?: BusinessServiceWhereInput
  }

  export type CiBusinessServiceCiIdBusinessServiceIdCompoundUniqueInput = {
    ciId: string
    businessServiceId: string
  }

  export type CiBusinessServiceCountOrderByAggregateInput = {
    ciId?: SortOrder
    businessServiceId?: SortOrder
    relationshipType?: SortOrder
    criticality?: SortOrder
    createdAt?: SortOrder
  }

  export type CiBusinessServiceMaxOrderByAggregateInput = {
    ciId?: SortOrder
    businessServiceId?: SortOrder
    relationshipType?: SortOrder
    criticality?: SortOrder
    createdAt?: SortOrder
  }

  export type CiBusinessServiceMinOrderByAggregateInput = {
    ciId?: SortOrder
    businessServiceId?: SortOrder
    relationshipType?: SortOrder
    criticality?: SortOrder
    createdAt?: SortOrder
  }

  export type CiIncidentCiIdIncidentIdCompoundUniqueInput = {
    ciId: string
    incidentId: string
  }

  export type CiIncidentCountOrderByAggregateInput = {
    ciId?: SortOrder
    incidentId?: SortOrder
    relationshipType?: SortOrder
    createdAt?: SortOrder
  }

  export type CiIncidentMaxOrderByAggregateInput = {
    ciId?: SortOrder
    incidentId?: SortOrder
    relationshipType?: SortOrder
    createdAt?: SortOrder
  }

  export type CiIncidentMinOrderByAggregateInput = {
    ciId?: SortOrder
    incidentId?: SortOrder
    relationshipType?: SortOrder
    createdAt?: SortOrder
  }

  export type CiChangeCiIdChangeIdCompoundUniqueInput = {
    ciId: string
    changeId: string
  }

  export type CiChangeCountOrderByAggregateInput = {
    ciId?: SortOrder
    changeId?: SortOrder
    relationshipType?: SortOrder
    createdAt?: SortOrder
  }

  export type CiChangeMaxOrderByAggregateInput = {
    ciId?: SortOrder
    changeId?: SortOrder
    relationshipType?: SortOrder
    createdAt?: SortOrder
  }

  export type CiChangeMinOrderByAggregateInput = {
    ciId?: SortOrder
    changeId?: SortOrder
    relationshipType?: SortOrder
    createdAt?: SortOrder
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DiscoveryScheduleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    cronExpression?: SortOrder
    nextRunDate?: SortOrder
    lastRunDate?: SortOrder
    discoveryType?: SortOrder
    scopeConfiguration?: SortOrder
    credentialIds?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type DiscoveryScheduleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    cronExpression?: SortOrder
    nextRunDate?: SortOrder
    lastRunDate?: SortOrder
    discoveryType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type DiscoveryScheduleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    cronExpression?: SortOrder
    nextRunDate?: SortOrder
    lastRunDate?: SortOrder
    discoveryType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type DiscoveredItemListRelationFilter = {
    every?: DiscoveredItemWhereInput
    some?: DiscoveredItemWhereInput
    none?: DiscoveredItemWhereInput
  }

  export type DiscoveredItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DiscoveryRunCountOrderByAggregateInput = {
    id?: SortOrder
    scheduleId?: SortOrder
    status?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    itemsDiscovered?: SortOrder
    itemsUpdated?: SortOrder
    itemsCreated?: SortOrder
    errors?: SortOrder
  }

  export type DiscoveryRunAvgOrderByAggregateInput = {
    itemsDiscovered?: SortOrder
    itemsUpdated?: SortOrder
    itemsCreated?: SortOrder
  }

  export type DiscoveryRunMaxOrderByAggregateInput = {
    id?: SortOrder
    scheduleId?: SortOrder
    status?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    itemsDiscovered?: SortOrder
    itemsUpdated?: SortOrder
    itemsCreated?: SortOrder
  }

  export type DiscoveryRunMinOrderByAggregateInput = {
    id?: SortOrder
    scheduleId?: SortOrder
    status?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    itemsDiscovered?: SortOrder
    itemsUpdated?: SortOrder
    itemsCreated?: SortOrder
  }

  export type DiscoveryRunSumOrderByAggregateInput = {
    itemsDiscovered?: SortOrder
    itemsUpdated?: SortOrder
    itemsCreated?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DiscoveryRunScalarRelationFilter = {
    is?: DiscoveryRunWhereInput
    isNot?: DiscoveryRunWhereInput
  }

  export type DiscoveredItemCountOrderByAggregateInput = {
    id?: SortOrder
    runId?: SortOrder
    ciId?: SortOrder
    discoveredData?: SortOrder
    fingerprint?: SortOrder
    status?: SortOrder
    processingNotes?: SortOrder
    discoveredAt?: SortOrder
    processedAt?: SortOrder
  }

  export type DiscoveredItemMaxOrderByAggregateInput = {
    id?: SortOrder
    runId?: SortOrder
    ciId?: SortOrder
    fingerprint?: SortOrder
    status?: SortOrder
    processingNotes?: SortOrder
    discoveredAt?: SortOrder
    processedAt?: SortOrder
  }

  export type DiscoveredItemMinOrderByAggregateInput = {
    id?: SortOrder
    runId?: SortOrder
    ciId?: SortOrder
    fingerprint?: SortOrder
    status?: SortOrder
    processingNotes?: SortOrder
    discoveredAt?: SortOrder
    processedAt?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type CmdbHealthCountOrderByAggregateInput = {
    id?: SortOrder
    metricDate?: SortOrder
    totalCis?: SortOrder
    activeCis?: SortOrder
    staleCis?: SortOrder
    orphanedCis?: SortOrder
    totalRelationships?: SortOrder
    discoveredRelationships?: SortOrder
    manualRelationships?: SortOrder
    discoveredCis?: SortOrder
    manualCis?: SortOrder
    completenessScore?: SortOrder
    accuracyScore?: SortOrder
    createdAt?: SortOrder
  }

  export type CmdbHealthAvgOrderByAggregateInput = {
    totalCis?: SortOrder
    activeCis?: SortOrder
    staleCis?: SortOrder
    orphanedCis?: SortOrder
    totalRelationships?: SortOrder
    discoveredRelationships?: SortOrder
    manualRelationships?: SortOrder
    discoveredCis?: SortOrder
    manualCis?: SortOrder
    completenessScore?: SortOrder
    accuracyScore?: SortOrder
  }

  export type CmdbHealthMaxOrderByAggregateInput = {
    id?: SortOrder
    metricDate?: SortOrder
    totalCis?: SortOrder
    activeCis?: SortOrder
    staleCis?: SortOrder
    orphanedCis?: SortOrder
    totalRelationships?: SortOrder
    discoveredRelationships?: SortOrder
    manualRelationships?: SortOrder
    discoveredCis?: SortOrder
    manualCis?: SortOrder
    completenessScore?: SortOrder
    accuracyScore?: SortOrder
    createdAt?: SortOrder
  }

  export type CmdbHealthMinOrderByAggregateInput = {
    id?: SortOrder
    metricDate?: SortOrder
    totalCis?: SortOrder
    activeCis?: SortOrder
    staleCis?: SortOrder
    orphanedCis?: SortOrder
    totalRelationships?: SortOrder
    discoveredRelationships?: SortOrder
    manualRelationships?: SortOrder
    discoveredCis?: SortOrder
    manualCis?: SortOrder
    completenessScore?: SortOrder
    accuracyScore?: SortOrder
    createdAt?: SortOrder
  }

  export type CmdbHealthSumOrderByAggregateInput = {
    totalCis?: SortOrder
    activeCis?: SortOrder
    staleCis?: SortOrder
    orphanedCis?: SortOrder
    totalRelationships?: SortOrder
    discoveredRelationships?: SortOrder
    manualRelationships?: SortOrder
    discoveredCis?: SortOrder
    manualCis?: SortOrder
    completenessScore?: SortOrder
    accuracyScore?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type CiAuditLogCountOrderByAggregateInput = {
    id?: SortOrder
    ciId?: SortOrder
    operation?: SortOrder
    fieldName?: SortOrder
    oldValue?: SortOrder
    newValue?: SortOrder
    changedBy?: SortOrder
    changeReason?: SortOrder
    changeTicket?: SortOrder
    timestamp?: SortOrder
  }

  export type CiAuditLogMaxOrderByAggregateInput = {
    id?: SortOrder
    ciId?: SortOrder
    operation?: SortOrder
    fieldName?: SortOrder
    oldValue?: SortOrder
    newValue?: SortOrder
    changedBy?: SortOrder
    changeReason?: SortOrder
    changeTicket?: SortOrder
    timestamp?: SortOrder
  }

  export type CiAuditLogMinOrderByAggregateInput = {
    id?: SortOrder
    ciId?: SortOrder
    operation?: SortOrder
    fieldName?: SortOrder
    oldValue?: SortOrder
    newValue?: SortOrder
    changedBy?: SortOrder
    changeReason?: SortOrder
    changeTicket?: SortOrder
    timestamp?: SortOrder
  }

  export type SupportGroupMemberListRelationFilter = {
    every?: SupportGroupMemberWhereInput
    some?: SupportGroupMemberWhereInput
    none?: SupportGroupMemberWhereInput
  }

  export type SupportGroupPermissionListRelationFilter = {
    every?: SupportGroupPermissionWhereInput
    some?: SupportGroupPermissionWhereInput
    none?: SupportGroupPermissionWhereInput
  }

  export type SupportGroupNullableScalarRelationFilter = {
    is?: SupportGroupWhereInput | null
    isNot?: SupportGroupWhereInput | null
  }

  export type SupportGroupMemberOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupportGroupPermissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupportGroupCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    manager?: SortOrder
    escalationGroup?: SortOrder
    isActive?: SortOrder
    businessHours?: SortOrder
    slaTarget?: SortOrder
    externalId?: SortOrder
    adGroupDn?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type SupportGroupAvgOrderByAggregateInput = {
    slaTarget?: SortOrder
  }

  export type SupportGroupMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    manager?: SortOrder
    escalationGroup?: SortOrder
    isActive?: SortOrder
    slaTarget?: SortOrder
    externalId?: SortOrder
    adGroupDn?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type SupportGroupMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    manager?: SortOrder
    escalationGroup?: SortOrder
    isActive?: SortOrder
    slaTarget?: SortOrder
    externalId?: SortOrder
    adGroupDn?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type SupportGroupSumOrderByAggregateInput = {
    slaTarget?: SortOrder
  }

  export type SupportGroupScalarRelationFilter = {
    is?: SupportGroupWhereInput
    isNot?: SupportGroupWhereInput
  }

  export type SupportGroupMemberSupportGroupIdUserIdCompoundUniqueInput = {
    supportGroupId: string
    userId: string
  }

  export type SupportGroupMemberCountOrderByAggregateInput = {
    id?: SortOrder
    supportGroupId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    isPrimary?: SortOrder
    isActive?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    assignedAt?: SortOrder
    assignedBy?: SortOrder
  }

  export type SupportGroupMemberMaxOrderByAggregateInput = {
    id?: SortOrder
    supportGroupId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    isPrimary?: SortOrder
    isActive?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    assignedAt?: SortOrder
    assignedBy?: SortOrder
  }

  export type SupportGroupMemberMinOrderByAggregateInput = {
    id?: SortOrder
    supportGroupId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    isPrimary?: SortOrder
    isActive?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    assignedAt?: SortOrder
    assignedBy?: SortOrder
  }

  export type SupportGroupPermissionSupportGroupIdResourceActionCompoundUniqueInput = {
    supportGroupId: string
    resource: string
    action: string
  }

  export type SupportGroupPermissionCountOrderByAggregateInput = {
    id?: SortOrder
    supportGroupId?: SortOrder
    resource?: SortOrder
    action?: SortOrder
    scope?: SortOrder
    conditions?: SortOrder
    isActive?: SortOrder
    grantedAt?: SortOrder
    grantedBy?: SortOrder
  }

  export type SupportGroupPermissionMaxOrderByAggregateInput = {
    id?: SortOrder
    supportGroupId?: SortOrder
    resource?: SortOrder
    action?: SortOrder
    scope?: SortOrder
    isActive?: SortOrder
    grantedAt?: SortOrder
    grantedBy?: SortOrder
  }

  export type SupportGroupPermissionMinOrderByAggregateInput = {
    id?: SortOrder
    supportGroupId?: SortOrder
    resource?: SortOrder
    action?: SortOrder
    scope?: SortOrder
    isActive?: SortOrder
    grantedAt?: SortOrder
    grantedBy?: SortOrder
  }

  export type CiOwnershipCiIdOwnershipTypeUserIdCompoundUniqueInput = {
    ciId: string
    ownershipType: string
    userId: string
  }

  export type CiOwnershipCountOrderByAggregateInput = {
    id?: SortOrder
    ciId?: SortOrder
    ownershipType?: SortOrder
    userId?: SortOrder
    supportGroupId?: SortOrder
    isPrimary?: SortOrder
    isActive?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    responsibilities?: SortOrder
    assignedAt?: SortOrder
    assignedBy?: SortOrder
  }

  export type CiOwnershipMaxOrderByAggregateInput = {
    id?: SortOrder
    ciId?: SortOrder
    ownershipType?: SortOrder
    userId?: SortOrder
    supportGroupId?: SortOrder
    isPrimary?: SortOrder
    isActive?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    assignedAt?: SortOrder
    assignedBy?: SortOrder
  }

  export type CiOwnershipMinOrderByAggregateInput = {
    id?: SortOrder
    ciId?: SortOrder
    ownershipType?: SortOrder
    userId?: SortOrder
    supportGroupId?: SortOrder
    isPrimary?: SortOrder
    isActive?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    assignedAt?: SortOrder
    assignedBy?: SortOrder
  }

  export type CmdbInventoryMappingCiIdInventoryAssetIdCompoundUniqueInput = {
    ciId: string
    inventoryAssetId: number
  }

  export type CmdbInventoryMappingCountOrderByAggregateInput = {
    id?: SortOrder
    ciId?: SortOrder
    inventoryAssetId?: SortOrder
    mappingType?: SortOrder
    relationship?: SortOrder
    syncEnabled?: SortOrder
    lastSyncAt?: SortOrder
    syncStatus?: SortOrder
    syncErrors?: SortOrder
    conflictResolution?: SortOrder
    fieldMapping?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type CmdbInventoryMappingAvgOrderByAggregateInput = {
    inventoryAssetId?: SortOrder
  }

  export type CmdbInventoryMappingMaxOrderByAggregateInput = {
    id?: SortOrder
    ciId?: SortOrder
    inventoryAssetId?: SortOrder
    mappingType?: SortOrder
    relationship?: SortOrder
    syncEnabled?: SortOrder
    lastSyncAt?: SortOrder
    syncStatus?: SortOrder
    syncErrors?: SortOrder
    conflictResolution?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type CmdbInventoryMappingMinOrderByAggregateInput = {
    id?: SortOrder
    ciId?: SortOrder
    inventoryAssetId?: SortOrder
    mappingType?: SortOrder
    relationship?: SortOrder
    syncEnabled?: SortOrder
    lastSyncAt?: SortOrder
    syncStatus?: SortOrder
    syncErrors?: SortOrder
    conflictResolution?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type CmdbInventoryMappingSumOrderByAggregateInput = {
    inventoryAssetId?: SortOrder
  }

  export type ConfigurationItemCreatetagsInput = {
    set: string[]
  }

  export type CiTypeCreateNestedOneWithoutConfigurationItemsInput = {
    create?: XOR<CiTypeCreateWithoutConfigurationItemsInput, CiTypeUncheckedCreateWithoutConfigurationItemsInput>
    connectOrCreate?: CiTypeCreateOrConnectWithoutConfigurationItemsInput
    connect?: CiTypeWhereUniqueInput
  }

  export type CiRelationshipCreateNestedManyWithoutSourceCiInput = {
    create?: XOR<CiRelationshipCreateWithoutSourceCiInput, CiRelationshipUncheckedCreateWithoutSourceCiInput> | CiRelationshipCreateWithoutSourceCiInput[] | CiRelationshipUncheckedCreateWithoutSourceCiInput[]
    connectOrCreate?: CiRelationshipCreateOrConnectWithoutSourceCiInput | CiRelationshipCreateOrConnectWithoutSourceCiInput[]
    createMany?: CiRelationshipCreateManySourceCiInputEnvelope
    connect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
  }

  export type CiRelationshipCreateNestedManyWithoutTargetCiInput = {
    create?: XOR<CiRelationshipCreateWithoutTargetCiInput, CiRelationshipUncheckedCreateWithoutTargetCiInput> | CiRelationshipCreateWithoutTargetCiInput[] | CiRelationshipUncheckedCreateWithoutTargetCiInput[]
    connectOrCreate?: CiRelationshipCreateOrConnectWithoutTargetCiInput | CiRelationshipCreateOrConnectWithoutTargetCiInput[]
    createMany?: CiRelationshipCreateManyTargetCiInputEnvelope
    connect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
  }

  export type CiIncidentCreateNestedManyWithoutConfigurationItemInput = {
    create?: XOR<CiIncidentCreateWithoutConfigurationItemInput, CiIncidentUncheckedCreateWithoutConfigurationItemInput> | CiIncidentCreateWithoutConfigurationItemInput[] | CiIncidentUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CiIncidentCreateOrConnectWithoutConfigurationItemInput | CiIncidentCreateOrConnectWithoutConfigurationItemInput[]
    createMany?: CiIncidentCreateManyConfigurationItemInputEnvelope
    connect?: CiIncidentWhereUniqueInput | CiIncidentWhereUniqueInput[]
  }

  export type CiChangeCreateNestedManyWithoutConfigurationItemInput = {
    create?: XOR<CiChangeCreateWithoutConfigurationItemInput, CiChangeUncheckedCreateWithoutConfigurationItemInput> | CiChangeCreateWithoutConfigurationItemInput[] | CiChangeUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CiChangeCreateOrConnectWithoutConfigurationItemInput | CiChangeCreateOrConnectWithoutConfigurationItemInput[]
    createMany?: CiChangeCreateManyConfigurationItemInputEnvelope
    connect?: CiChangeWhereUniqueInput | CiChangeWhereUniqueInput[]
  }

  export type CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput = {
    create?: XOR<CiBusinessServiceCreateWithoutConfigurationItemInput, CiBusinessServiceUncheckedCreateWithoutConfigurationItemInput> | CiBusinessServiceCreateWithoutConfigurationItemInput[] | CiBusinessServiceUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CiBusinessServiceCreateOrConnectWithoutConfigurationItemInput | CiBusinessServiceCreateOrConnectWithoutConfigurationItemInput[]
    createMany?: CiBusinessServiceCreateManyConfigurationItemInputEnvelope
    connect?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
  }

  export type CiOwnershipCreateNestedManyWithoutConfigurationItemInput = {
    create?: XOR<CiOwnershipCreateWithoutConfigurationItemInput, CiOwnershipUncheckedCreateWithoutConfigurationItemInput> | CiOwnershipCreateWithoutConfigurationItemInput[] | CiOwnershipUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CiOwnershipCreateOrConnectWithoutConfigurationItemInput | CiOwnershipCreateOrConnectWithoutConfigurationItemInput[]
    createMany?: CiOwnershipCreateManyConfigurationItemInputEnvelope
    connect?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
  }

  export type CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput = {
    create?: XOR<CmdbInventoryMappingCreateWithoutConfigurationItemInput, CmdbInventoryMappingUncheckedCreateWithoutConfigurationItemInput> | CmdbInventoryMappingCreateWithoutConfigurationItemInput[] | CmdbInventoryMappingUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CmdbInventoryMappingCreateOrConnectWithoutConfigurationItemInput | CmdbInventoryMappingCreateOrConnectWithoutConfigurationItemInput[]
    createMany?: CmdbInventoryMappingCreateManyConfigurationItemInputEnvelope
    connect?: CmdbInventoryMappingWhereUniqueInput | CmdbInventoryMappingWhereUniqueInput[]
  }

  export type SupportGroupCreateNestedManyWithoutConfigurationItemsInput = {
    create?: XOR<SupportGroupCreateWithoutConfigurationItemsInput, SupportGroupUncheckedCreateWithoutConfigurationItemsInput> | SupportGroupCreateWithoutConfigurationItemsInput[] | SupportGroupUncheckedCreateWithoutConfigurationItemsInput[]
    connectOrCreate?: SupportGroupCreateOrConnectWithoutConfigurationItemsInput | SupportGroupCreateOrConnectWithoutConfigurationItemsInput[]
    connect?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
  }

  export type HardwareCiCreateNestedOneWithoutConfigurationItemInput = {
    create?: XOR<HardwareCiCreateWithoutConfigurationItemInput, HardwareCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: HardwareCiCreateOrConnectWithoutConfigurationItemInput
    connect?: HardwareCiWhereUniqueInput
  }

  export type SoftwareCiCreateNestedOneWithoutConfigurationItemInput = {
    create?: XOR<SoftwareCiCreateWithoutConfigurationItemInput, SoftwareCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: SoftwareCiCreateOrConnectWithoutConfigurationItemInput
    connect?: SoftwareCiWhereUniqueInput
  }

  export type ApplicationCiCreateNestedOneWithoutConfigurationItemInput = {
    create?: XOR<ApplicationCiCreateWithoutConfigurationItemInput, ApplicationCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: ApplicationCiCreateOrConnectWithoutConfigurationItemInput
    connect?: ApplicationCiWhereUniqueInput
  }

  export type NetworkCiCreateNestedOneWithoutConfigurationItemInput = {
    create?: XOR<NetworkCiCreateWithoutConfigurationItemInput, NetworkCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: NetworkCiCreateOrConnectWithoutConfigurationItemInput
    connect?: NetworkCiWhereUniqueInput
  }

  export type ServiceCiCreateNestedOneWithoutConfigurationItemInput = {
    create?: XOR<ServiceCiCreateWithoutConfigurationItemInput, ServiceCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: ServiceCiCreateOrConnectWithoutConfigurationItemInput
    connect?: ServiceCiWhereUniqueInput
  }

  export type DatabaseCiCreateNestedOneWithoutConfigurationItemInput = {
    create?: XOR<DatabaseCiCreateWithoutConfigurationItemInput, DatabaseCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: DatabaseCiCreateOrConnectWithoutConfigurationItemInput
    connect?: DatabaseCiWhereUniqueInput
  }

  export type VirtualCiCreateNestedOneWithoutConfigurationItemInput = {
    create?: XOR<VirtualCiCreateWithoutConfigurationItemInput, VirtualCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: VirtualCiCreateOrConnectWithoutConfigurationItemInput
    connect?: VirtualCiWhereUniqueInput
  }

  export type FacilityCiCreateNestedOneWithoutConfigurationItemInput = {
    create?: XOR<FacilityCiCreateWithoutConfigurationItemInput, FacilityCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: FacilityCiCreateOrConnectWithoutConfigurationItemInput
    connect?: FacilityCiWhereUniqueInput
  }

  export type CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput = {
    create?: XOR<CiRelationshipCreateWithoutSourceCiInput, CiRelationshipUncheckedCreateWithoutSourceCiInput> | CiRelationshipCreateWithoutSourceCiInput[] | CiRelationshipUncheckedCreateWithoutSourceCiInput[]
    connectOrCreate?: CiRelationshipCreateOrConnectWithoutSourceCiInput | CiRelationshipCreateOrConnectWithoutSourceCiInput[]
    createMany?: CiRelationshipCreateManySourceCiInputEnvelope
    connect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
  }

  export type CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput = {
    create?: XOR<CiRelationshipCreateWithoutTargetCiInput, CiRelationshipUncheckedCreateWithoutTargetCiInput> | CiRelationshipCreateWithoutTargetCiInput[] | CiRelationshipUncheckedCreateWithoutTargetCiInput[]
    connectOrCreate?: CiRelationshipCreateOrConnectWithoutTargetCiInput | CiRelationshipCreateOrConnectWithoutTargetCiInput[]
    createMany?: CiRelationshipCreateManyTargetCiInputEnvelope
    connect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
  }

  export type CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput = {
    create?: XOR<CiIncidentCreateWithoutConfigurationItemInput, CiIncidentUncheckedCreateWithoutConfigurationItemInput> | CiIncidentCreateWithoutConfigurationItemInput[] | CiIncidentUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CiIncidentCreateOrConnectWithoutConfigurationItemInput | CiIncidentCreateOrConnectWithoutConfigurationItemInput[]
    createMany?: CiIncidentCreateManyConfigurationItemInputEnvelope
    connect?: CiIncidentWhereUniqueInput | CiIncidentWhereUniqueInput[]
  }

  export type CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput = {
    create?: XOR<CiChangeCreateWithoutConfigurationItemInput, CiChangeUncheckedCreateWithoutConfigurationItemInput> | CiChangeCreateWithoutConfigurationItemInput[] | CiChangeUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CiChangeCreateOrConnectWithoutConfigurationItemInput | CiChangeCreateOrConnectWithoutConfigurationItemInput[]
    createMany?: CiChangeCreateManyConfigurationItemInputEnvelope
    connect?: CiChangeWhereUniqueInput | CiChangeWhereUniqueInput[]
  }

  export type CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput = {
    create?: XOR<CiBusinessServiceCreateWithoutConfigurationItemInput, CiBusinessServiceUncheckedCreateWithoutConfigurationItemInput> | CiBusinessServiceCreateWithoutConfigurationItemInput[] | CiBusinessServiceUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CiBusinessServiceCreateOrConnectWithoutConfigurationItemInput | CiBusinessServiceCreateOrConnectWithoutConfigurationItemInput[]
    createMany?: CiBusinessServiceCreateManyConfigurationItemInputEnvelope
    connect?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
  }

  export type CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput = {
    create?: XOR<CiOwnershipCreateWithoutConfigurationItemInput, CiOwnershipUncheckedCreateWithoutConfigurationItemInput> | CiOwnershipCreateWithoutConfigurationItemInput[] | CiOwnershipUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CiOwnershipCreateOrConnectWithoutConfigurationItemInput | CiOwnershipCreateOrConnectWithoutConfigurationItemInput[]
    createMany?: CiOwnershipCreateManyConfigurationItemInputEnvelope
    connect?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
  }

  export type CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput = {
    create?: XOR<CmdbInventoryMappingCreateWithoutConfigurationItemInput, CmdbInventoryMappingUncheckedCreateWithoutConfigurationItemInput> | CmdbInventoryMappingCreateWithoutConfigurationItemInput[] | CmdbInventoryMappingUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CmdbInventoryMappingCreateOrConnectWithoutConfigurationItemInput | CmdbInventoryMappingCreateOrConnectWithoutConfigurationItemInput[]
    createMany?: CmdbInventoryMappingCreateManyConfigurationItemInputEnvelope
    connect?: CmdbInventoryMappingWhereUniqueInput | CmdbInventoryMappingWhereUniqueInput[]
  }

  export type SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput = {
    create?: XOR<SupportGroupCreateWithoutConfigurationItemsInput, SupportGroupUncheckedCreateWithoutConfigurationItemsInput> | SupportGroupCreateWithoutConfigurationItemsInput[] | SupportGroupUncheckedCreateWithoutConfigurationItemsInput[]
    connectOrCreate?: SupportGroupCreateOrConnectWithoutConfigurationItemsInput | SupportGroupCreateOrConnectWithoutConfigurationItemsInput[]
    connect?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
  }

  export type HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput = {
    create?: XOR<HardwareCiCreateWithoutConfigurationItemInput, HardwareCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: HardwareCiCreateOrConnectWithoutConfigurationItemInput
    connect?: HardwareCiWhereUniqueInput
  }

  export type SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput = {
    create?: XOR<SoftwareCiCreateWithoutConfigurationItemInput, SoftwareCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: SoftwareCiCreateOrConnectWithoutConfigurationItemInput
    connect?: SoftwareCiWhereUniqueInput
  }

  export type ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput = {
    create?: XOR<ApplicationCiCreateWithoutConfigurationItemInput, ApplicationCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: ApplicationCiCreateOrConnectWithoutConfigurationItemInput
    connect?: ApplicationCiWhereUniqueInput
  }

  export type NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput = {
    create?: XOR<NetworkCiCreateWithoutConfigurationItemInput, NetworkCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: NetworkCiCreateOrConnectWithoutConfigurationItemInput
    connect?: NetworkCiWhereUniqueInput
  }

  export type ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput = {
    create?: XOR<ServiceCiCreateWithoutConfigurationItemInput, ServiceCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: ServiceCiCreateOrConnectWithoutConfigurationItemInput
    connect?: ServiceCiWhereUniqueInput
  }

  export type DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput = {
    create?: XOR<DatabaseCiCreateWithoutConfigurationItemInput, DatabaseCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: DatabaseCiCreateOrConnectWithoutConfigurationItemInput
    connect?: DatabaseCiWhereUniqueInput
  }

  export type VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput = {
    create?: XOR<VirtualCiCreateWithoutConfigurationItemInput, VirtualCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: VirtualCiCreateOrConnectWithoutConfigurationItemInput
    connect?: VirtualCiWhereUniqueInput
  }

  export type FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput = {
    create?: XOR<FacilityCiCreateWithoutConfigurationItemInput, FacilityCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: FacilityCiCreateOrConnectWithoutConfigurationItemInput
    connect?: FacilityCiWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type ConfigurationItemUpdatetagsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput = {
    create?: XOR<CiTypeCreateWithoutConfigurationItemsInput, CiTypeUncheckedCreateWithoutConfigurationItemsInput>
    connectOrCreate?: CiTypeCreateOrConnectWithoutConfigurationItemsInput
    upsert?: CiTypeUpsertWithoutConfigurationItemsInput
    connect?: CiTypeWhereUniqueInput
    update?: XOR<XOR<CiTypeUpdateToOneWithWhereWithoutConfigurationItemsInput, CiTypeUpdateWithoutConfigurationItemsInput>, CiTypeUncheckedUpdateWithoutConfigurationItemsInput>
  }

  export type CiRelationshipUpdateManyWithoutSourceCiNestedInput = {
    create?: XOR<CiRelationshipCreateWithoutSourceCiInput, CiRelationshipUncheckedCreateWithoutSourceCiInput> | CiRelationshipCreateWithoutSourceCiInput[] | CiRelationshipUncheckedCreateWithoutSourceCiInput[]
    connectOrCreate?: CiRelationshipCreateOrConnectWithoutSourceCiInput | CiRelationshipCreateOrConnectWithoutSourceCiInput[]
    upsert?: CiRelationshipUpsertWithWhereUniqueWithoutSourceCiInput | CiRelationshipUpsertWithWhereUniqueWithoutSourceCiInput[]
    createMany?: CiRelationshipCreateManySourceCiInputEnvelope
    set?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    disconnect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    delete?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    connect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    update?: CiRelationshipUpdateWithWhereUniqueWithoutSourceCiInput | CiRelationshipUpdateWithWhereUniqueWithoutSourceCiInput[]
    updateMany?: CiRelationshipUpdateManyWithWhereWithoutSourceCiInput | CiRelationshipUpdateManyWithWhereWithoutSourceCiInput[]
    deleteMany?: CiRelationshipScalarWhereInput | CiRelationshipScalarWhereInput[]
  }

  export type CiRelationshipUpdateManyWithoutTargetCiNestedInput = {
    create?: XOR<CiRelationshipCreateWithoutTargetCiInput, CiRelationshipUncheckedCreateWithoutTargetCiInput> | CiRelationshipCreateWithoutTargetCiInput[] | CiRelationshipUncheckedCreateWithoutTargetCiInput[]
    connectOrCreate?: CiRelationshipCreateOrConnectWithoutTargetCiInput | CiRelationshipCreateOrConnectWithoutTargetCiInput[]
    upsert?: CiRelationshipUpsertWithWhereUniqueWithoutTargetCiInput | CiRelationshipUpsertWithWhereUniqueWithoutTargetCiInput[]
    createMany?: CiRelationshipCreateManyTargetCiInputEnvelope
    set?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    disconnect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    delete?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    connect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    update?: CiRelationshipUpdateWithWhereUniqueWithoutTargetCiInput | CiRelationshipUpdateWithWhereUniqueWithoutTargetCiInput[]
    updateMany?: CiRelationshipUpdateManyWithWhereWithoutTargetCiInput | CiRelationshipUpdateManyWithWhereWithoutTargetCiInput[]
    deleteMany?: CiRelationshipScalarWhereInput | CiRelationshipScalarWhereInput[]
  }

  export type CiIncidentUpdateManyWithoutConfigurationItemNestedInput = {
    create?: XOR<CiIncidentCreateWithoutConfigurationItemInput, CiIncidentUncheckedCreateWithoutConfigurationItemInput> | CiIncidentCreateWithoutConfigurationItemInput[] | CiIncidentUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CiIncidentCreateOrConnectWithoutConfigurationItemInput | CiIncidentCreateOrConnectWithoutConfigurationItemInput[]
    upsert?: CiIncidentUpsertWithWhereUniqueWithoutConfigurationItemInput | CiIncidentUpsertWithWhereUniqueWithoutConfigurationItemInput[]
    createMany?: CiIncidentCreateManyConfigurationItemInputEnvelope
    set?: CiIncidentWhereUniqueInput | CiIncidentWhereUniqueInput[]
    disconnect?: CiIncidentWhereUniqueInput | CiIncidentWhereUniqueInput[]
    delete?: CiIncidentWhereUniqueInput | CiIncidentWhereUniqueInput[]
    connect?: CiIncidentWhereUniqueInput | CiIncidentWhereUniqueInput[]
    update?: CiIncidentUpdateWithWhereUniqueWithoutConfigurationItemInput | CiIncidentUpdateWithWhereUniqueWithoutConfigurationItemInput[]
    updateMany?: CiIncidentUpdateManyWithWhereWithoutConfigurationItemInput | CiIncidentUpdateManyWithWhereWithoutConfigurationItemInput[]
    deleteMany?: CiIncidentScalarWhereInput | CiIncidentScalarWhereInput[]
  }

  export type CiChangeUpdateManyWithoutConfigurationItemNestedInput = {
    create?: XOR<CiChangeCreateWithoutConfigurationItemInput, CiChangeUncheckedCreateWithoutConfigurationItemInput> | CiChangeCreateWithoutConfigurationItemInput[] | CiChangeUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CiChangeCreateOrConnectWithoutConfigurationItemInput | CiChangeCreateOrConnectWithoutConfigurationItemInput[]
    upsert?: CiChangeUpsertWithWhereUniqueWithoutConfigurationItemInput | CiChangeUpsertWithWhereUniqueWithoutConfigurationItemInput[]
    createMany?: CiChangeCreateManyConfigurationItemInputEnvelope
    set?: CiChangeWhereUniqueInput | CiChangeWhereUniqueInput[]
    disconnect?: CiChangeWhereUniqueInput | CiChangeWhereUniqueInput[]
    delete?: CiChangeWhereUniqueInput | CiChangeWhereUniqueInput[]
    connect?: CiChangeWhereUniqueInput | CiChangeWhereUniqueInput[]
    update?: CiChangeUpdateWithWhereUniqueWithoutConfigurationItemInput | CiChangeUpdateWithWhereUniqueWithoutConfigurationItemInput[]
    updateMany?: CiChangeUpdateManyWithWhereWithoutConfigurationItemInput | CiChangeUpdateManyWithWhereWithoutConfigurationItemInput[]
    deleteMany?: CiChangeScalarWhereInput | CiChangeScalarWhereInput[]
  }

  export type CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput = {
    create?: XOR<CiBusinessServiceCreateWithoutConfigurationItemInput, CiBusinessServiceUncheckedCreateWithoutConfigurationItemInput> | CiBusinessServiceCreateWithoutConfigurationItemInput[] | CiBusinessServiceUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CiBusinessServiceCreateOrConnectWithoutConfigurationItemInput | CiBusinessServiceCreateOrConnectWithoutConfigurationItemInput[]
    upsert?: CiBusinessServiceUpsertWithWhereUniqueWithoutConfigurationItemInput | CiBusinessServiceUpsertWithWhereUniqueWithoutConfigurationItemInput[]
    createMany?: CiBusinessServiceCreateManyConfigurationItemInputEnvelope
    set?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
    disconnect?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
    delete?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
    connect?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
    update?: CiBusinessServiceUpdateWithWhereUniqueWithoutConfigurationItemInput | CiBusinessServiceUpdateWithWhereUniqueWithoutConfigurationItemInput[]
    updateMany?: CiBusinessServiceUpdateManyWithWhereWithoutConfigurationItemInput | CiBusinessServiceUpdateManyWithWhereWithoutConfigurationItemInput[]
    deleteMany?: CiBusinessServiceScalarWhereInput | CiBusinessServiceScalarWhereInput[]
  }

  export type CiOwnershipUpdateManyWithoutConfigurationItemNestedInput = {
    create?: XOR<CiOwnershipCreateWithoutConfigurationItemInput, CiOwnershipUncheckedCreateWithoutConfigurationItemInput> | CiOwnershipCreateWithoutConfigurationItemInput[] | CiOwnershipUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CiOwnershipCreateOrConnectWithoutConfigurationItemInput | CiOwnershipCreateOrConnectWithoutConfigurationItemInput[]
    upsert?: CiOwnershipUpsertWithWhereUniqueWithoutConfigurationItemInput | CiOwnershipUpsertWithWhereUniqueWithoutConfigurationItemInput[]
    createMany?: CiOwnershipCreateManyConfigurationItemInputEnvelope
    set?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
    disconnect?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
    delete?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
    connect?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
    update?: CiOwnershipUpdateWithWhereUniqueWithoutConfigurationItemInput | CiOwnershipUpdateWithWhereUniqueWithoutConfigurationItemInput[]
    updateMany?: CiOwnershipUpdateManyWithWhereWithoutConfigurationItemInput | CiOwnershipUpdateManyWithWhereWithoutConfigurationItemInput[]
    deleteMany?: CiOwnershipScalarWhereInput | CiOwnershipScalarWhereInput[]
  }

  export type CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput = {
    create?: XOR<CmdbInventoryMappingCreateWithoutConfigurationItemInput, CmdbInventoryMappingUncheckedCreateWithoutConfigurationItemInput> | CmdbInventoryMappingCreateWithoutConfigurationItemInput[] | CmdbInventoryMappingUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CmdbInventoryMappingCreateOrConnectWithoutConfigurationItemInput | CmdbInventoryMappingCreateOrConnectWithoutConfigurationItemInput[]
    upsert?: CmdbInventoryMappingUpsertWithWhereUniqueWithoutConfigurationItemInput | CmdbInventoryMappingUpsertWithWhereUniqueWithoutConfigurationItemInput[]
    createMany?: CmdbInventoryMappingCreateManyConfigurationItemInputEnvelope
    set?: CmdbInventoryMappingWhereUniqueInput | CmdbInventoryMappingWhereUniqueInput[]
    disconnect?: CmdbInventoryMappingWhereUniqueInput | CmdbInventoryMappingWhereUniqueInput[]
    delete?: CmdbInventoryMappingWhereUniqueInput | CmdbInventoryMappingWhereUniqueInput[]
    connect?: CmdbInventoryMappingWhereUniqueInput | CmdbInventoryMappingWhereUniqueInput[]
    update?: CmdbInventoryMappingUpdateWithWhereUniqueWithoutConfigurationItemInput | CmdbInventoryMappingUpdateWithWhereUniqueWithoutConfigurationItemInput[]
    updateMany?: CmdbInventoryMappingUpdateManyWithWhereWithoutConfigurationItemInput | CmdbInventoryMappingUpdateManyWithWhereWithoutConfigurationItemInput[]
    deleteMany?: CmdbInventoryMappingScalarWhereInput | CmdbInventoryMappingScalarWhereInput[]
  }

  export type SupportGroupUpdateManyWithoutConfigurationItemsNestedInput = {
    create?: XOR<SupportGroupCreateWithoutConfigurationItemsInput, SupportGroupUncheckedCreateWithoutConfigurationItemsInput> | SupportGroupCreateWithoutConfigurationItemsInput[] | SupportGroupUncheckedCreateWithoutConfigurationItemsInput[]
    connectOrCreate?: SupportGroupCreateOrConnectWithoutConfigurationItemsInput | SupportGroupCreateOrConnectWithoutConfigurationItemsInput[]
    upsert?: SupportGroupUpsertWithWhereUniqueWithoutConfigurationItemsInput | SupportGroupUpsertWithWhereUniqueWithoutConfigurationItemsInput[]
    set?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
    disconnect?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
    delete?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
    connect?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
    update?: SupportGroupUpdateWithWhereUniqueWithoutConfigurationItemsInput | SupportGroupUpdateWithWhereUniqueWithoutConfigurationItemsInput[]
    updateMany?: SupportGroupUpdateManyWithWhereWithoutConfigurationItemsInput | SupportGroupUpdateManyWithWhereWithoutConfigurationItemsInput[]
    deleteMany?: SupportGroupScalarWhereInput | SupportGroupScalarWhereInput[]
  }

  export type HardwareCiUpdateOneWithoutConfigurationItemNestedInput = {
    create?: XOR<HardwareCiCreateWithoutConfigurationItemInput, HardwareCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: HardwareCiCreateOrConnectWithoutConfigurationItemInput
    upsert?: HardwareCiUpsertWithoutConfigurationItemInput
    disconnect?: HardwareCiWhereInput | boolean
    delete?: HardwareCiWhereInput | boolean
    connect?: HardwareCiWhereUniqueInput
    update?: XOR<XOR<HardwareCiUpdateToOneWithWhereWithoutConfigurationItemInput, HardwareCiUpdateWithoutConfigurationItemInput>, HardwareCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type SoftwareCiUpdateOneWithoutConfigurationItemNestedInput = {
    create?: XOR<SoftwareCiCreateWithoutConfigurationItemInput, SoftwareCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: SoftwareCiCreateOrConnectWithoutConfigurationItemInput
    upsert?: SoftwareCiUpsertWithoutConfigurationItemInput
    disconnect?: SoftwareCiWhereInput | boolean
    delete?: SoftwareCiWhereInput | boolean
    connect?: SoftwareCiWhereUniqueInput
    update?: XOR<XOR<SoftwareCiUpdateToOneWithWhereWithoutConfigurationItemInput, SoftwareCiUpdateWithoutConfigurationItemInput>, SoftwareCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type ApplicationCiUpdateOneWithoutConfigurationItemNestedInput = {
    create?: XOR<ApplicationCiCreateWithoutConfigurationItemInput, ApplicationCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: ApplicationCiCreateOrConnectWithoutConfigurationItemInput
    upsert?: ApplicationCiUpsertWithoutConfigurationItemInput
    disconnect?: ApplicationCiWhereInput | boolean
    delete?: ApplicationCiWhereInput | boolean
    connect?: ApplicationCiWhereUniqueInput
    update?: XOR<XOR<ApplicationCiUpdateToOneWithWhereWithoutConfigurationItemInput, ApplicationCiUpdateWithoutConfigurationItemInput>, ApplicationCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type NetworkCiUpdateOneWithoutConfigurationItemNestedInput = {
    create?: XOR<NetworkCiCreateWithoutConfigurationItemInput, NetworkCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: NetworkCiCreateOrConnectWithoutConfigurationItemInput
    upsert?: NetworkCiUpsertWithoutConfigurationItemInput
    disconnect?: NetworkCiWhereInput | boolean
    delete?: NetworkCiWhereInput | boolean
    connect?: NetworkCiWhereUniqueInput
    update?: XOR<XOR<NetworkCiUpdateToOneWithWhereWithoutConfigurationItemInput, NetworkCiUpdateWithoutConfigurationItemInput>, NetworkCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type ServiceCiUpdateOneWithoutConfigurationItemNestedInput = {
    create?: XOR<ServiceCiCreateWithoutConfigurationItemInput, ServiceCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: ServiceCiCreateOrConnectWithoutConfigurationItemInput
    upsert?: ServiceCiUpsertWithoutConfigurationItemInput
    disconnect?: ServiceCiWhereInput | boolean
    delete?: ServiceCiWhereInput | boolean
    connect?: ServiceCiWhereUniqueInput
    update?: XOR<XOR<ServiceCiUpdateToOneWithWhereWithoutConfigurationItemInput, ServiceCiUpdateWithoutConfigurationItemInput>, ServiceCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type DatabaseCiUpdateOneWithoutConfigurationItemNestedInput = {
    create?: XOR<DatabaseCiCreateWithoutConfigurationItemInput, DatabaseCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: DatabaseCiCreateOrConnectWithoutConfigurationItemInput
    upsert?: DatabaseCiUpsertWithoutConfigurationItemInput
    disconnect?: DatabaseCiWhereInput | boolean
    delete?: DatabaseCiWhereInput | boolean
    connect?: DatabaseCiWhereUniqueInput
    update?: XOR<XOR<DatabaseCiUpdateToOneWithWhereWithoutConfigurationItemInput, DatabaseCiUpdateWithoutConfigurationItemInput>, DatabaseCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type VirtualCiUpdateOneWithoutConfigurationItemNestedInput = {
    create?: XOR<VirtualCiCreateWithoutConfigurationItemInput, VirtualCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: VirtualCiCreateOrConnectWithoutConfigurationItemInput
    upsert?: VirtualCiUpsertWithoutConfigurationItemInput
    disconnect?: VirtualCiWhereInput | boolean
    delete?: VirtualCiWhereInput | boolean
    connect?: VirtualCiWhereUniqueInput
    update?: XOR<XOR<VirtualCiUpdateToOneWithWhereWithoutConfigurationItemInput, VirtualCiUpdateWithoutConfigurationItemInput>, VirtualCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type FacilityCiUpdateOneWithoutConfigurationItemNestedInput = {
    create?: XOR<FacilityCiCreateWithoutConfigurationItemInput, FacilityCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: FacilityCiCreateOrConnectWithoutConfigurationItemInput
    upsert?: FacilityCiUpsertWithoutConfigurationItemInput
    disconnect?: FacilityCiWhereInput | boolean
    delete?: FacilityCiWhereInput | boolean
    connect?: FacilityCiWhereUniqueInput
    update?: XOR<XOR<FacilityCiUpdateToOneWithWhereWithoutConfigurationItemInput, FacilityCiUpdateWithoutConfigurationItemInput>, FacilityCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput = {
    create?: XOR<CiRelationshipCreateWithoutSourceCiInput, CiRelationshipUncheckedCreateWithoutSourceCiInput> | CiRelationshipCreateWithoutSourceCiInput[] | CiRelationshipUncheckedCreateWithoutSourceCiInput[]
    connectOrCreate?: CiRelationshipCreateOrConnectWithoutSourceCiInput | CiRelationshipCreateOrConnectWithoutSourceCiInput[]
    upsert?: CiRelationshipUpsertWithWhereUniqueWithoutSourceCiInput | CiRelationshipUpsertWithWhereUniqueWithoutSourceCiInput[]
    createMany?: CiRelationshipCreateManySourceCiInputEnvelope
    set?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    disconnect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    delete?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    connect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    update?: CiRelationshipUpdateWithWhereUniqueWithoutSourceCiInput | CiRelationshipUpdateWithWhereUniqueWithoutSourceCiInput[]
    updateMany?: CiRelationshipUpdateManyWithWhereWithoutSourceCiInput | CiRelationshipUpdateManyWithWhereWithoutSourceCiInput[]
    deleteMany?: CiRelationshipScalarWhereInput | CiRelationshipScalarWhereInput[]
  }

  export type CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput = {
    create?: XOR<CiRelationshipCreateWithoutTargetCiInput, CiRelationshipUncheckedCreateWithoutTargetCiInput> | CiRelationshipCreateWithoutTargetCiInput[] | CiRelationshipUncheckedCreateWithoutTargetCiInput[]
    connectOrCreate?: CiRelationshipCreateOrConnectWithoutTargetCiInput | CiRelationshipCreateOrConnectWithoutTargetCiInput[]
    upsert?: CiRelationshipUpsertWithWhereUniqueWithoutTargetCiInput | CiRelationshipUpsertWithWhereUniqueWithoutTargetCiInput[]
    createMany?: CiRelationshipCreateManyTargetCiInputEnvelope
    set?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    disconnect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    delete?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    connect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    update?: CiRelationshipUpdateWithWhereUniqueWithoutTargetCiInput | CiRelationshipUpdateWithWhereUniqueWithoutTargetCiInput[]
    updateMany?: CiRelationshipUpdateManyWithWhereWithoutTargetCiInput | CiRelationshipUpdateManyWithWhereWithoutTargetCiInput[]
    deleteMany?: CiRelationshipScalarWhereInput | CiRelationshipScalarWhereInput[]
  }

  export type CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput = {
    create?: XOR<CiIncidentCreateWithoutConfigurationItemInput, CiIncidentUncheckedCreateWithoutConfigurationItemInput> | CiIncidentCreateWithoutConfigurationItemInput[] | CiIncidentUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CiIncidentCreateOrConnectWithoutConfigurationItemInput | CiIncidentCreateOrConnectWithoutConfigurationItemInput[]
    upsert?: CiIncidentUpsertWithWhereUniqueWithoutConfigurationItemInput | CiIncidentUpsertWithWhereUniqueWithoutConfigurationItemInput[]
    createMany?: CiIncidentCreateManyConfigurationItemInputEnvelope
    set?: CiIncidentWhereUniqueInput | CiIncidentWhereUniqueInput[]
    disconnect?: CiIncidentWhereUniqueInput | CiIncidentWhereUniqueInput[]
    delete?: CiIncidentWhereUniqueInput | CiIncidentWhereUniqueInput[]
    connect?: CiIncidentWhereUniqueInput | CiIncidentWhereUniqueInput[]
    update?: CiIncidentUpdateWithWhereUniqueWithoutConfigurationItemInput | CiIncidentUpdateWithWhereUniqueWithoutConfigurationItemInput[]
    updateMany?: CiIncidentUpdateManyWithWhereWithoutConfigurationItemInput | CiIncidentUpdateManyWithWhereWithoutConfigurationItemInput[]
    deleteMany?: CiIncidentScalarWhereInput | CiIncidentScalarWhereInput[]
  }

  export type CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput = {
    create?: XOR<CiChangeCreateWithoutConfigurationItemInput, CiChangeUncheckedCreateWithoutConfigurationItemInput> | CiChangeCreateWithoutConfigurationItemInput[] | CiChangeUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CiChangeCreateOrConnectWithoutConfigurationItemInput | CiChangeCreateOrConnectWithoutConfigurationItemInput[]
    upsert?: CiChangeUpsertWithWhereUniqueWithoutConfigurationItemInput | CiChangeUpsertWithWhereUniqueWithoutConfigurationItemInput[]
    createMany?: CiChangeCreateManyConfigurationItemInputEnvelope
    set?: CiChangeWhereUniqueInput | CiChangeWhereUniqueInput[]
    disconnect?: CiChangeWhereUniqueInput | CiChangeWhereUniqueInput[]
    delete?: CiChangeWhereUniqueInput | CiChangeWhereUniqueInput[]
    connect?: CiChangeWhereUniqueInput | CiChangeWhereUniqueInput[]
    update?: CiChangeUpdateWithWhereUniqueWithoutConfigurationItemInput | CiChangeUpdateWithWhereUniqueWithoutConfigurationItemInput[]
    updateMany?: CiChangeUpdateManyWithWhereWithoutConfigurationItemInput | CiChangeUpdateManyWithWhereWithoutConfigurationItemInput[]
    deleteMany?: CiChangeScalarWhereInput | CiChangeScalarWhereInput[]
  }

  export type CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput = {
    create?: XOR<CiBusinessServiceCreateWithoutConfigurationItemInput, CiBusinessServiceUncheckedCreateWithoutConfigurationItemInput> | CiBusinessServiceCreateWithoutConfigurationItemInput[] | CiBusinessServiceUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CiBusinessServiceCreateOrConnectWithoutConfigurationItemInput | CiBusinessServiceCreateOrConnectWithoutConfigurationItemInput[]
    upsert?: CiBusinessServiceUpsertWithWhereUniqueWithoutConfigurationItemInput | CiBusinessServiceUpsertWithWhereUniqueWithoutConfigurationItemInput[]
    createMany?: CiBusinessServiceCreateManyConfigurationItemInputEnvelope
    set?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
    disconnect?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
    delete?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
    connect?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
    update?: CiBusinessServiceUpdateWithWhereUniqueWithoutConfigurationItemInput | CiBusinessServiceUpdateWithWhereUniqueWithoutConfigurationItemInput[]
    updateMany?: CiBusinessServiceUpdateManyWithWhereWithoutConfigurationItemInput | CiBusinessServiceUpdateManyWithWhereWithoutConfigurationItemInput[]
    deleteMany?: CiBusinessServiceScalarWhereInput | CiBusinessServiceScalarWhereInput[]
  }

  export type CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput = {
    create?: XOR<CiOwnershipCreateWithoutConfigurationItemInput, CiOwnershipUncheckedCreateWithoutConfigurationItemInput> | CiOwnershipCreateWithoutConfigurationItemInput[] | CiOwnershipUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CiOwnershipCreateOrConnectWithoutConfigurationItemInput | CiOwnershipCreateOrConnectWithoutConfigurationItemInput[]
    upsert?: CiOwnershipUpsertWithWhereUniqueWithoutConfigurationItemInput | CiOwnershipUpsertWithWhereUniqueWithoutConfigurationItemInput[]
    createMany?: CiOwnershipCreateManyConfigurationItemInputEnvelope
    set?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
    disconnect?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
    delete?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
    connect?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
    update?: CiOwnershipUpdateWithWhereUniqueWithoutConfigurationItemInput | CiOwnershipUpdateWithWhereUniqueWithoutConfigurationItemInput[]
    updateMany?: CiOwnershipUpdateManyWithWhereWithoutConfigurationItemInput | CiOwnershipUpdateManyWithWhereWithoutConfigurationItemInput[]
    deleteMany?: CiOwnershipScalarWhereInput | CiOwnershipScalarWhereInput[]
  }

  export type CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput = {
    create?: XOR<CmdbInventoryMappingCreateWithoutConfigurationItemInput, CmdbInventoryMappingUncheckedCreateWithoutConfigurationItemInput> | CmdbInventoryMappingCreateWithoutConfigurationItemInput[] | CmdbInventoryMappingUncheckedCreateWithoutConfigurationItemInput[]
    connectOrCreate?: CmdbInventoryMappingCreateOrConnectWithoutConfigurationItemInput | CmdbInventoryMappingCreateOrConnectWithoutConfigurationItemInput[]
    upsert?: CmdbInventoryMappingUpsertWithWhereUniqueWithoutConfigurationItemInput | CmdbInventoryMappingUpsertWithWhereUniqueWithoutConfigurationItemInput[]
    createMany?: CmdbInventoryMappingCreateManyConfigurationItemInputEnvelope
    set?: CmdbInventoryMappingWhereUniqueInput | CmdbInventoryMappingWhereUniqueInput[]
    disconnect?: CmdbInventoryMappingWhereUniqueInput | CmdbInventoryMappingWhereUniqueInput[]
    delete?: CmdbInventoryMappingWhereUniqueInput | CmdbInventoryMappingWhereUniqueInput[]
    connect?: CmdbInventoryMappingWhereUniqueInput | CmdbInventoryMappingWhereUniqueInput[]
    update?: CmdbInventoryMappingUpdateWithWhereUniqueWithoutConfigurationItemInput | CmdbInventoryMappingUpdateWithWhereUniqueWithoutConfigurationItemInput[]
    updateMany?: CmdbInventoryMappingUpdateManyWithWhereWithoutConfigurationItemInput | CmdbInventoryMappingUpdateManyWithWhereWithoutConfigurationItemInput[]
    deleteMany?: CmdbInventoryMappingScalarWhereInput | CmdbInventoryMappingScalarWhereInput[]
  }

  export type SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput = {
    create?: XOR<SupportGroupCreateWithoutConfigurationItemsInput, SupportGroupUncheckedCreateWithoutConfigurationItemsInput> | SupportGroupCreateWithoutConfigurationItemsInput[] | SupportGroupUncheckedCreateWithoutConfigurationItemsInput[]
    connectOrCreate?: SupportGroupCreateOrConnectWithoutConfigurationItemsInput | SupportGroupCreateOrConnectWithoutConfigurationItemsInput[]
    upsert?: SupportGroupUpsertWithWhereUniqueWithoutConfigurationItemsInput | SupportGroupUpsertWithWhereUniqueWithoutConfigurationItemsInput[]
    set?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
    disconnect?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
    delete?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
    connect?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
    update?: SupportGroupUpdateWithWhereUniqueWithoutConfigurationItemsInput | SupportGroupUpdateWithWhereUniqueWithoutConfigurationItemsInput[]
    updateMany?: SupportGroupUpdateManyWithWhereWithoutConfigurationItemsInput | SupportGroupUpdateManyWithWhereWithoutConfigurationItemsInput[]
    deleteMany?: SupportGroupScalarWhereInput | SupportGroupScalarWhereInput[]
  }

  export type HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput = {
    create?: XOR<HardwareCiCreateWithoutConfigurationItemInput, HardwareCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: HardwareCiCreateOrConnectWithoutConfigurationItemInput
    upsert?: HardwareCiUpsertWithoutConfigurationItemInput
    disconnect?: HardwareCiWhereInput | boolean
    delete?: HardwareCiWhereInput | boolean
    connect?: HardwareCiWhereUniqueInput
    update?: XOR<XOR<HardwareCiUpdateToOneWithWhereWithoutConfigurationItemInput, HardwareCiUpdateWithoutConfigurationItemInput>, HardwareCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput = {
    create?: XOR<SoftwareCiCreateWithoutConfigurationItemInput, SoftwareCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: SoftwareCiCreateOrConnectWithoutConfigurationItemInput
    upsert?: SoftwareCiUpsertWithoutConfigurationItemInput
    disconnect?: SoftwareCiWhereInput | boolean
    delete?: SoftwareCiWhereInput | boolean
    connect?: SoftwareCiWhereUniqueInput
    update?: XOR<XOR<SoftwareCiUpdateToOneWithWhereWithoutConfigurationItemInput, SoftwareCiUpdateWithoutConfigurationItemInput>, SoftwareCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput = {
    create?: XOR<ApplicationCiCreateWithoutConfigurationItemInput, ApplicationCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: ApplicationCiCreateOrConnectWithoutConfigurationItemInput
    upsert?: ApplicationCiUpsertWithoutConfigurationItemInput
    disconnect?: ApplicationCiWhereInput | boolean
    delete?: ApplicationCiWhereInput | boolean
    connect?: ApplicationCiWhereUniqueInput
    update?: XOR<XOR<ApplicationCiUpdateToOneWithWhereWithoutConfigurationItemInput, ApplicationCiUpdateWithoutConfigurationItemInput>, ApplicationCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput = {
    create?: XOR<NetworkCiCreateWithoutConfigurationItemInput, NetworkCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: NetworkCiCreateOrConnectWithoutConfigurationItemInput
    upsert?: NetworkCiUpsertWithoutConfigurationItemInput
    disconnect?: NetworkCiWhereInput | boolean
    delete?: NetworkCiWhereInput | boolean
    connect?: NetworkCiWhereUniqueInput
    update?: XOR<XOR<NetworkCiUpdateToOneWithWhereWithoutConfigurationItemInput, NetworkCiUpdateWithoutConfigurationItemInput>, NetworkCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput = {
    create?: XOR<ServiceCiCreateWithoutConfigurationItemInput, ServiceCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: ServiceCiCreateOrConnectWithoutConfigurationItemInput
    upsert?: ServiceCiUpsertWithoutConfigurationItemInput
    disconnect?: ServiceCiWhereInput | boolean
    delete?: ServiceCiWhereInput | boolean
    connect?: ServiceCiWhereUniqueInput
    update?: XOR<XOR<ServiceCiUpdateToOneWithWhereWithoutConfigurationItemInput, ServiceCiUpdateWithoutConfigurationItemInput>, ServiceCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput = {
    create?: XOR<DatabaseCiCreateWithoutConfigurationItemInput, DatabaseCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: DatabaseCiCreateOrConnectWithoutConfigurationItemInput
    upsert?: DatabaseCiUpsertWithoutConfigurationItemInput
    disconnect?: DatabaseCiWhereInput | boolean
    delete?: DatabaseCiWhereInput | boolean
    connect?: DatabaseCiWhereUniqueInput
    update?: XOR<XOR<DatabaseCiUpdateToOneWithWhereWithoutConfigurationItemInput, DatabaseCiUpdateWithoutConfigurationItemInput>, DatabaseCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput = {
    create?: XOR<VirtualCiCreateWithoutConfigurationItemInput, VirtualCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: VirtualCiCreateOrConnectWithoutConfigurationItemInput
    upsert?: VirtualCiUpsertWithoutConfigurationItemInput
    disconnect?: VirtualCiWhereInput | boolean
    delete?: VirtualCiWhereInput | boolean
    connect?: VirtualCiWhereUniqueInput
    update?: XOR<XOR<VirtualCiUpdateToOneWithWhereWithoutConfigurationItemInput, VirtualCiUpdateWithoutConfigurationItemInput>, VirtualCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput = {
    create?: XOR<FacilityCiCreateWithoutConfigurationItemInput, FacilityCiUncheckedCreateWithoutConfigurationItemInput>
    connectOrCreate?: FacilityCiCreateOrConnectWithoutConfigurationItemInput
    upsert?: FacilityCiUpsertWithoutConfigurationItemInput
    disconnect?: FacilityCiWhereInput | boolean
    delete?: FacilityCiWhereInput | boolean
    connect?: FacilityCiWhereUniqueInput
    update?: XOR<XOR<FacilityCiUpdateToOneWithWhereWithoutConfigurationItemInput, FacilityCiUpdateWithoutConfigurationItemInput>, FacilityCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type CiTypeCreateallowedStatusesInput = {
    set: string[]
  }

  export type CiTypeCreateNestedOneWithoutChildTypesInput = {
    create?: XOR<CiTypeCreateWithoutChildTypesInput, CiTypeUncheckedCreateWithoutChildTypesInput>
    connectOrCreate?: CiTypeCreateOrConnectWithoutChildTypesInput
    connect?: CiTypeWhereUniqueInput
  }

  export type CiTypeCreateNestedManyWithoutParentTypeInput = {
    create?: XOR<CiTypeCreateWithoutParentTypeInput, CiTypeUncheckedCreateWithoutParentTypeInput> | CiTypeCreateWithoutParentTypeInput[] | CiTypeUncheckedCreateWithoutParentTypeInput[]
    connectOrCreate?: CiTypeCreateOrConnectWithoutParentTypeInput | CiTypeCreateOrConnectWithoutParentTypeInput[]
    createMany?: CiTypeCreateManyParentTypeInputEnvelope
    connect?: CiTypeWhereUniqueInput | CiTypeWhereUniqueInput[]
  }

  export type ConfigurationItemCreateNestedManyWithoutCiType_relInput = {
    create?: XOR<ConfigurationItemCreateWithoutCiType_relInput, ConfigurationItemUncheckedCreateWithoutCiType_relInput> | ConfigurationItemCreateWithoutCiType_relInput[] | ConfigurationItemUncheckedCreateWithoutCiType_relInput[]
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutCiType_relInput | ConfigurationItemCreateOrConnectWithoutCiType_relInput[]
    createMany?: ConfigurationItemCreateManyCiType_relInputEnvelope
    connect?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
  }

  export type CiRelationshipTypeCreateNestedManyWithoutSourceCiTypeInput = {
    create?: XOR<CiRelationshipTypeCreateWithoutSourceCiTypeInput, CiRelationshipTypeUncheckedCreateWithoutSourceCiTypeInput> | CiRelationshipTypeCreateWithoutSourceCiTypeInput[] | CiRelationshipTypeUncheckedCreateWithoutSourceCiTypeInput[]
    connectOrCreate?: CiRelationshipTypeCreateOrConnectWithoutSourceCiTypeInput | CiRelationshipTypeCreateOrConnectWithoutSourceCiTypeInput[]
    createMany?: CiRelationshipTypeCreateManySourceCiTypeInputEnvelope
    connect?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
  }

  export type CiRelationshipTypeCreateNestedManyWithoutTargetCiTypeInput = {
    create?: XOR<CiRelationshipTypeCreateWithoutTargetCiTypeInput, CiRelationshipTypeUncheckedCreateWithoutTargetCiTypeInput> | CiRelationshipTypeCreateWithoutTargetCiTypeInput[] | CiRelationshipTypeUncheckedCreateWithoutTargetCiTypeInput[]
    connectOrCreate?: CiRelationshipTypeCreateOrConnectWithoutTargetCiTypeInput | CiRelationshipTypeCreateOrConnectWithoutTargetCiTypeInput[]
    createMany?: CiRelationshipTypeCreateManyTargetCiTypeInputEnvelope
    connect?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
  }

  export type CiTypeUncheckedCreateNestedManyWithoutParentTypeInput = {
    create?: XOR<CiTypeCreateWithoutParentTypeInput, CiTypeUncheckedCreateWithoutParentTypeInput> | CiTypeCreateWithoutParentTypeInput[] | CiTypeUncheckedCreateWithoutParentTypeInput[]
    connectOrCreate?: CiTypeCreateOrConnectWithoutParentTypeInput | CiTypeCreateOrConnectWithoutParentTypeInput[]
    createMany?: CiTypeCreateManyParentTypeInputEnvelope
    connect?: CiTypeWhereUniqueInput | CiTypeWhereUniqueInput[]
  }

  export type ConfigurationItemUncheckedCreateNestedManyWithoutCiType_relInput = {
    create?: XOR<ConfigurationItemCreateWithoutCiType_relInput, ConfigurationItemUncheckedCreateWithoutCiType_relInput> | ConfigurationItemCreateWithoutCiType_relInput[] | ConfigurationItemUncheckedCreateWithoutCiType_relInput[]
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutCiType_relInput | ConfigurationItemCreateOrConnectWithoutCiType_relInput[]
    createMany?: ConfigurationItemCreateManyCiType_relInputEnvelope
    connect?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
  }

  export type CiRelationshipTypeUncheckedCreateNestedManyWithoutSourceCiTypeInput = {
    create?: XOR<CiRelationshipTypeCreateWithoutSourceCiTypeInput, CiRelationshipTypeUncheckedCreateWithoutSourceCiTypeInput> | CiRelationshipTypeCreateWithoutSourceCiTypeInput[] | CiRelationshipTypeUncheckedCreateWithoutSourceCiTypeInput[]
    connectOrCreate?: CiRelationshipTypeCreateOrConnectWithoutSourceCiTypeInput | CiRelationshipTypeCreateOrConnectWithoutSourceCiTypeInput[]
    createMany?: CiRelationshipTypeCreateManySourceCiTypeInputEnvelope
    connect?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
  }

  export type CiRelationshipTypeUncheckedCreateNestedManyWithoutTargetCiTypeInput = {
    create?: XOR<CiRelationshipTypeCreateWithoutTargetCiTypeInput, CiRelationshipTypeUncheckedCreateWithoutTargetCiTypeInput> | CiRelationshipTypeCreateWithoutTargetCiTypeInput[] | CiRelationshipTypeUncheckedCreateWithoutTargetCiTypeInput[]
    connectOrCreate?: CiRelationshipTypeCreateOrConnectWithoutTargetCiTypeInput | CiRelationshipTypeCreateOrConnectWithoutTargetCiTypeInput[]
    createMany?: CiRelationshipTypeCreateManyTargetCiTypeInputEnvelope
    connect?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
  }

  export type CiTypeUpdateallowedStatusesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type CiTypeUpdateOneWithoutChildTypesNestedInput = {
    create?: XOR<CiTypeCreateWithoutChildTypesInput, CiTypeUncheckedCreateWithoutChildTypesInput>
    connectOrCreate?: CiTypeCreateOrConnectWithoutChildTypesInput
    upsert?: CiTypeUpsertWithoutChildTypesInput
    disconnect?: CiTypeWhereInput | boolean
    delete?: CiTypeWhereInput | boolean
    connect?: CiTypeWhereUniqueInput
    update?: XOR<XOR<CiTypeUpdateToOneWithWhereWithoutChildTypesInput, CiTypeUpdateWithoutChildTypesInput>, CiTypeUncheckedUpdateWithoutChildTypesInput>
  }

  export type CiTypeUpdateManyWithoutParentTypeNestedInput = {
    create?: XOR<CiTypeCreateWithoutParentTypeInput, CiTypeUncheckedCreateWithoutParentTypeInput> | CiTypeCreateWithoutParentTypeInput[] | CiTypeUncheckedCreateWithoutParentTypeInput[]
    connectOrCreate?: CiTypeCreateOrConnectWithoutParentTypeInput | CiTypeCreateOrConnectWithoutParentTypeInput[]
    upsert?: CiTypeUpsertWithWhereUniqueWithoutParentTypeInput | CiTypeUpsertWithWhereUniqueWithoutParentTypeInput[]
    createMany?: CiTypeCreateManyParentTypeInputEnvelope
    set?: CiTypeWhereUniqueInput | CiTypeWhereUniqueInput[]
    disconnect?: CiTypeWhereUniqueInput | CiTypeWhereUniqueInput[]
    delete?: CiTypeWhereUniqueInput | CiTypeWhereUniqueInput[]
    connect?: CiTypeWhereUniqueInput | CiTypeWhereUniqueInput[]
    update?: CiTypeUpdateWithWhereUniqueWithoutParentTypeInput | CiTypeUpdateWithWhereUniqueWithoutParentTypeInput[]
    updateMany?: CiTypeUpdateManyWithWhereWithoutParentTypeInput | CiTypeUpdateManyWithWhereWithoutParentTypeInput[]
    deleteMany?: CiTypeScalarWhereInput | CiTypeScalarWhereInput[]
  }

  export type ConfigurationItemUpdateManyWithoutCiType_relNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutCiType_relInput, ConfigurationItemUncheckedCreateWithoutCiType_relInput> | ConfigurationItemCreateWithoutCiType_relInput[] | ConfigurationItemUncheckedCreateWithoutCiType_relInput[]
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutCiType_relInput | ConfigurationItemCreateOrConnectWithoutCiType_relInput[]
    upsert?: ConfigurationItemUpsertWithWhereUniqueWithoutCiType_relInput | ConfigurationItemUpsertWithWhereUniqueWithoutCiType_relInput[]
    createMany?: ConfigurationItemCreateManyCiType_relInputEnvelope
    set?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
    disconnect?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
    delete?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
    connect?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
    update?: ConfigurationItemUpdateWithWhereUniqueWithoutCiType_relInput | ConfigurationItemUpdateWithWhereUniqueWithoutCiType_relInput[]
    updateMany?: ConfigurationItemUpdateManyWithWhereWithoutCiType_relInput | ConfigurationItemUpdateManyWithWhereWithoutCiType_relInput[]
    deleteMany?: ConfigurationItemScalarWhereInput | ConfigurationItemScalarWhereInput[]
  }

  export type CiRelationshipTypeUpdateManyWithoutSourceCiTypeNestedInput = {
    create?: XOR<CiRelationshipTypeCreateWithoutSourceCiTypeInput, CiRelationshipTypeUncheckedCreateWithoutSourceCiTypeInput> | CiRelationshipTypeCreateWithoutSourceCiTypeInput[] | CiRelationshipTypeUncheckedCreateWithoutSourceCiTypeInput[]
    connectOrCreate?: CiRelationshipTypeCreateOrConnectWithoutSourceCiTypeInput | CiRelationshipTypeCreateOrConnectWithoutSourceCiTypeInput[]
    upsert?: CiRelationshipTypeUpsertWithWhereUniqueWithoutSourceCiTypeInput | CiRelationshipTypeUpsertWithWhereUniqueWithoutSourceCiTypeInput[]
    createMany?: CiRelationshipTypeCreateManySourceCiTypeInputEnvelope
    set?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
    disconnect?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
    delete?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
    connect?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
    update?: CiRelationshipTypeUpdateWithWhereUniqueWithoutSourceCiTypeInput | CiRelationshipTypeUpdateWithWhereUniqueWithoutSourceCiTypeInput[]
    updateMany?: CiRelationshipTypeUpdateManyWithWhereWithoutSourceCiTypeInput | CiRelationshipTypeUpdateManyWithWhereWithoutSourceCiTypeInput[]
    deleteMany?: CiRelationshipTypeScalarWhereInput | CiRelationshipTypeScalarWhereInput[]
  }

  export type CiRelationshipTypeUpdateManyWithoutTargetCiTypeNestedInput = {
    create?: XOR<CiRelationshipTypeCreateWithoutTargetCiTypeInput, CiRelationshipTypeUncheckedCreateWithoutTargetCiTypeInput> | CiRelationshipTypeCreateWithoutTargetCiTypeInput[] | CiRelationshipTypeUncheckedCreateWithoutTargetCiTypeInput[]
    connectOrCreate?: CiRelationshipTypeCreateOrConnectWithoutTargetCiTypeInput | CiRelationshipTypeCreateOrConnectWithoutTargetCiTypeInput[]
    upsert?: CiRelationshipTypeUpsertWithWhereUniqueWithoutTargetCiTypeInput | CiRelationshipTypeUpsertWithWhereUniqueWithoutTargetCiTypeInput[]
    createMany?: CiRelationshipTypeCreateManyTargetCiTypeInputEnvelope
    set?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
    disconnect?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
    delete?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
    connect?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
    update?: CiRelationshipTypeUpdateWithWhereUniqueWithoutTargetCiTypeInput | CiRelationshipTypeUpdateWithWhereUniqueWithoutTargetCiTypeInput[]
    updateMany?: CiRelationshipTypeUpdateManyWithWhereWithoutTargetCiTypeInput | CiRelationshipTypeUpdateManyWithWhereWithoutTargetCiTypeInput[]
    deleteMany?: CiRelationshipTypeScalarWhereInput | CiRelationshipTypeScalarWhereInput[]
  }

  export type CiTypeUncheckedUpdateManyWithoutParentTypeNestedInput = {
    create?: XOR<CiTypeCreateWithoutParentTypeInput, CiTypeUncheckedCreateWithoutParentTypeInput> | CiTypeCreateWithoutParentTypeInput[] | CiTypeUncheckedCreateWithoutParentTypeInput[]
    connectOrCreate?: CiTypeCreateOrConnectWithoutParentTypeInput | CiTypeCreateOrConnectWithoutParentTypeInput[]
    upsert?: CiTypeUpsertWithWhereUniqueWithoutParentTypeInput | CiTypeUpsertWithWhereUniqueWithoutParentTypeInput[]
    createMany?: CiTypeCreateManyParentTypeInputEnvelope
    set?: CiTypeWhereUniqueInput | CiTypeWhereUniqueInput[]
    disconnect?: CiTypeWhereUniqueInput | CiTypeWhereUniqueInput[]
    delete?: CiTypeWhereUniqueInput | CiTypeWhereUniqueInput[]
    connect?: CiTypeWhereUniqueInput | CiTypeWhereUniqueInput[]
    update?: CiTypeUpdateWithWhereUniqueWithoutParentTypeInput | CiTypeUpdateWithWhereUniqueWithoutParentTypeInput[]
    updateMany?: CiTypeUpdateManyWithWhereWithoutParentTypeInput | CiTypeUpdateManyWithWhereWithoutParentTypeInput[]
    deleteMany?: CiTypeScalarWhereInput | CiTypeScalarWhereInput[]
  }

  export type ConfigurationItemUncheckedUpdateManyWithoutCiType_relNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutCiType_relInput, ConfigurationItemUncheckedCreateWithoutCiType_relInput> | ConfigurationItemCreateWithoutCiType_relInput[] | ConfigurationItemUncheckedCreateWithoutCiType_relInput[]
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutCiType_relInput | ConfigurationItemCreateOrConnectWithoutCiType_relInput[]
    upsert?: ConfigurationItemUpsertWithWhereUniqueWithoutCiType_relInput | ConfigurationItemUpsertWithWhereUniqueWithoutCiType_relInput[]
    createMany?: ConfigurationItemCreateManyCiType_relInputEnvelope
    set?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
    disconnect?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
    delete?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
    connect?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
    update?: ConfigurationItemUpdateWithWhereUniqueWithoutCiType_relInput | ConfigurationItemUpdateWithWhereUniqueWithoutCiType_relInput[]
    updateMany?: ConfigurationItemUpdateManyWithWhereWithoutCiType_relInput | ConfigurationItemUpdateManyWithWhereWithoutCiType_relInput[]
    deleteMany?: ConfigurationItemScalarWhereInput | ConfigurationItemScalarWhereInput[]
  }

  export type CiRelationshipTypeUncheckedUpdateManyWithoutSourceCiTypeNestedInput = {
    create?: XOR<CiRelationshipTypeCreateWithoutSourceCiTypeInput, CiRelationshipTypeUncheckedCreateWithoutSourceCiTypeInput> | CiRelationshipTypeCreateWithoutSourceCiTypeInput[] | CiRelationshipTypeUncheckedCreateWithoutSourceCiTypeInput[]
    connectOrCreate?: CiRelationshipTypeCreateOrConnectWithoutSourceCiTypeInput | CiRelationshipTypeCreateOrConnectWithoutSourceCiTypeInput[]
    upsert?: CiRelationshipTypeUpsertWithWhereUniqueWithoutSourceCiTypeInput | CiRelationshipTypeUpsertWithWhereUniqueWithoutSourceCiTypeInput[]
    createMany?: CiRelationshipTypeCreateManySourceCiTypeInputEnvelope
    set?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
    disconnect?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
    delete?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
    connect?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
    update?: CiRelationshipTypeUpdateWithWhereUniqueWithoutSourceCiTypeInput | CiRelationshipTypeUpdateWithWhereUniqueWithoutSourceCiTypeInput[]
    updateMany?: CiRelationshipTypeUpdateManyWithWhereWithoutSourceCiTypeInput | CiRelationshipTypeUpdateManyWithWhereWithoutSourceCiTypeInput[]
    deleteMany?: CiRelationshipTypeScalarWhereInput | CiRelationshipTypeScalarWhereInput[]
  }

  export type CiRelationshipTypeUncheckedUpdateManyWithoutTargetCiTypeNestedInput = {
    create?: XOR<CiRelationshipTypeCreateWithoutTargetCiTypeInput, CiRelationshipTypeUncheckedCreateWithoutTargetCiTypeInput> | CiRelationshipTypeCreateWithoutTargetCiTypeInput[] | CiRelationshipTypeUncheckedCreateWithoutTargetCiTypeInput[]
    connectOrCreate?: CiRelationshipTypeCreateOrConnectWithoutTargetCiTypeInput | CiRelationshipTypeCreateOrConnectWithoutTargetCiTypeInput[]
    upsert?: CiRelationshipTypeUpsertWithWhereUniqueWithoutTargetCiTypeInput | CiRelationshipTypeUpsertWithWhereUniqueWithoutTargetCiTypeInput[]
    createMany?: CiRelationshipTypeCreateManyTargetCiTypeInputEnvelope
    set?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
    disconnect?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
    delete?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
    connect?: CiRelationshipTypeWhereUniqueInput | CiRelationshipTypeWhereUniqueInput[]
    update?: CiRelationshipTypeUpdateWithWhereUniqueWithoutTargetCiTypeInput | CiRelationshipTypeUpdateWithWhereUniqueWithoutTargetCiTypeInput[]
    updateMany?: CiRelationshipTypeUpdateManyWithWhereWithoutTargetCiTypeInput | CiRelationshipTypeUpdateManyWithWhereWithoutTargetCiTypeInput[]
    deleteMany?: CiRelationshipTypeScalarWhereInput | CiRelationshipTypeScalarWhereInput[]
  }

  export type CiTypeCreateNestedOneWithoutAllowedRelationshipsInput = {
    create?: XOR<CiTypeCreateWithoutAllowedRelationshipsInput, CiTypeUncheckedCreateWithoutAllowedRelationshipsInput>
    connectOrCreate?: CiTypeCreateOrConnectWithoutAllowedRelationshipsInput
    connect?: CiTypeWhereUniqueInput
  }

  export type CiTypeCreateNestedOneWithoutTargetRelationshipsInput = {
    create?: XOR<CiTypeCreateWithoutTargetRelationshipsInput, CiTypeUncheckedCreateWithoutTargetRelationshipsInput>
    connectOrCreate?: CiTypeCreateOrConnectWithoutTargetRelationshipsInput
    connect?: CiTypeWhereUniqueInput
  }

  export type CiRelationshipCreateNestedManyWithoutRelationshipTypeInput = {
    create?: XOR<CiRelationshipCreateWithoutRelationshipTypeInput, CiRelationshipUncheckedCreateWithoutRelationshipTypeInput> | CiRelationshipCreateWithoutRelationshipTypeInput[] | CiRelationshipUncheckedCreateWithoutRelationshipTypeInput[]
    connectOrCreate?: CiRelationshipCreateOrConnectWithoutRelationshipTypeInput | CiRelationshipCreateOrConnectWithoutRelationshipTypeInput[]
    createMany?: CiRelationshipCreateManyRelationshipTypeInputEnvelope
    connect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
  }

  export type CiRelationshipUncheckedCreateNestedManyWithoutRelationshipTypeInput = {
    create?: XOR<CiRelationshipCreateWithoutRelationshipTypeInput, CiRelationshipUncheckedCreateWithoutRelationshipTypeInput> | CiRelationshipCreateWithoutRelationshipTypeInput[] | CiRelationshipUncheckedCreateWithoutRelationshipTypeInput[]
    connectOrCreate?: CiRelationshipCreateOrConnectWithoutRelationshipTypeInput | CiRelationshipCreateOrConnectWithoutRelationshipTypeInput[]
    createMany?: CiRelationshipCreateManyRelationshipTypeInputEnvelope
    connect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
  }

  export type CiTypeUpdateOneWithoutAllowedRelationshipsNestedInput = {
    create?: XOR<CiTypeCreateWithoutAllowedRelationshipsInput, CiTypeUncheckedCreateWithoutAllowedRelationshipsInput>
    connectOrCreate?: CiTypeCreateOrConnectWithoutAllowedRelationshipsInput
    upsert?: CiTypeUpsertWithoutAllowedRelationshipsInput
    disconnect?: CiTypeWhereInput | boolean
    delete?: CiTypeWhereInput | boolean
    connect?: CiTypeWhereUniqueInput
    update?: XOR<XOR<CiTypeUpdateToOneWithWhereWithoutAllowedRelationshipsInput, CiTypeUpdateWithoutAllowedRelationshipsInput>, CiTypeUncheckedUpdateWithoutAllowedRelationshipsInput>
  }

  export type CiTypeUpdateOneWithoutTargetRelationshipsNestedInput = {
    create?: XOR<CiTypeCreateWithoutTargetRelationshipsInput, CiTypeUncheckedCreateWithoutTargetRelationshipsInput>
    connectOrCreate?: CiTypeCreateOrConnectWithoutTargetRelationshipsInput
    upsert?: CiTypeUpsertWithoutTargetRelationshipsInput
    disconnect?: CiTypeWhereInput | boolean
    delete?: CiTypeWhereInput | boolean
    connect?: CiTypeWhereUniqueInput
    update?: XOR<XOR<CiTypeUpdateToOneWithWhereWithoutTargetRelationshipsInput, CiTypeUpdateWithoutTargetRelationshipsInput>, CiTypeUncheckedUpdateWithoutTargetRelationshipsInput>
  }

  export type CiRelationshipUpdateManyWithoutRelationshipTypeNestedInput = {
    create?: XOR<CiRelationshipCreateWithoutRelationshipTypeInput, CiRelationshipUncheckedCreateWithoutRelationshipTypeInput> | CiRelationshipCreateWithoutRelationshipTypeInput[] | CiRelationshipUncheckedCreateWithoutRelationshipTypeInput[]
    connectOrCreate?: CiRelationshipCreateOrConnectWithoutRelationshipTypeInput | CiRelationshipCreateOrConnectWithoutRelationshipTypeInput[]
    upsert?: CiRelationshipUpsertWithWhereUniqueWithoutRelationshipTypeInput | CiRelationshipUpsertWithWhereUniqueWithoutRelationshipTypeInput[]
    createMany?: CiRelationshipCreateManyRelationshipTypeInputEnvelope
    set?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    disconnect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    delete?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    connect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    update?: CiRelationshipUpdateWithWhereUniqueWithoutRelationshipTypeInput | CiRelationshipUpdateWithWhereUniqueWithoutRelationshipTypeInput[]
    updateMany?: CiRelationshipUpdateManyWithWhereWithoutRelationshipTypeInput | CiRelationshipUpdateManyWithWhereWithoutRelationshipTypeInput[]
    deleteMany?: CiRelationshipScalarWhereInput | CiRelationshipScalarWhereInput[]
  }

  export type CiRelationshipUncheckedUpdateManyWithoutRelationshipTypeNestedInput = {
    create?: XOR<CiRelationshipCreateWithoutRelationshipTypeInput, CiRelationshipUncheckedCreateWithoutRelationshipTypeInput> | CiRelationshipCreateWithoutRelationshipTypeInput[] | CiRelationshipUncheckedCreateWithoutRelationshipTypeInput[]
    connectOrCreate?: CiRelationshipCreateOrConnectWithoutRelationshipTypeInput | CiRelationshipCreateOrConnectWithoutRelationshipTypeInput[]
    upsert?: CiRelationshipUpsertWithWhereUniqueWithoutRelationshipTypeInput | CiRelationshipUpsertWithWhereUniqueWithoutRelationshipTypeInput[]
    createMany?: CiRelationshipCreateManyRelationshipTypeInputEnvelope
    set?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    disconnect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    delete?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    connect?: CiRelationshipWhereUniqueInput | CiRelationshipWhereUniqueInput[]
    update?: CiRelationshipUpdateWithWhereUniqueWithoutRelationshipTypeInput | CiRelationshipUpdateWithWhereUniqueWithoutRelationshipTypeInput[]
    updateMany?: CiRelationshipUpdateManyWithWhereWithoutRelationshipTypeInput | CiRelationshipUpdateManyWithWhereWithoutRelationshipTypeInput[]
    deleteMany?: CiRelationshipScalarWhereInput | CiRelationshipScalarWhereInput[]
  }

  export type ConfigurationItemCreateNestedOneWithoutOutgoingRelationshipsInput = {
    create?: XOR<ConfigurationItemCreateWithoutOutgoingRelationshipsInput, ConfigurationItemUncheckedCreateWithoutOutgoingRelationshipsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutOutgoingRelationshipsInput
    connect?: ConfigurationItemWhereUniqueInput
  }

  export type ConfigurationItemCreateNestedOneWithoutIncomingRelationshipsInput = {
    create?: XOR<ConfigurationItemCreateWithoutIncomingRelationshipsInput, ConfigurationItemUncheckedCreateWithoutIncomingRelationshipsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutIncomingRelationshipsInput
    connect?: ConfigurationItemWhereUniqueInput
  }

  export type CiRelationshipTypeCreateNestedOneWithoutRelationshipsInput = {
    create?: XOR<CiRelationshipTypeCreateWithoutRelationshipsInput, CiRelationshipTypeUncheckedCreateWithoutRelationshipsInput>
    connectOrCreate?: CiRelationshipTypeCreateOrConnectWithoutRelationshipsInput
    connect?: CiRelationshipTypeWhereUniqueInput
  }

  export type ConfigurationItemUpdateOneRequiredWithoutOutgoingRelationshipsNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutOutgoingRelationshipsInput, ConfigurationItemUncheckedCreateWithoutOutgoingRelationshipsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutOutgoingRelationshipsInput
    upsert?: ConfigurationItemUpsertWithoutOutgoingRelationshipsInput
    connect?: ConfigurationItemWhereUniqueInput
    update?: XOR<XOR<ConfigurationItemUpdateToOneWithWhereWithoutOutgoingRelationshipsInput, ConfigurationItemUpdateWithoutOutgoingRelationshipsInput>, ConfigurationItemUncheckedUpdateWithoutOutgoingRelationshipsInput>
  }

  export type ConfigurationItemUpdateOneRequiredWithoutIncomingRelationshipsNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutIncomingRelationshipsInput, ConfigurationItemUncheckedCreateWithoutIncomingRelationshipsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutIncomingRelationshipsInput
    upsert?: ConfigurationItemUpsertWithoutIncomingRelationshipsInput
    connect?: ConfigurationItemWhereUniqueInput
    update?: XOR<XOR<ConfigurationItemUpdateToOneWithWhereWithoutIncomingRelationshipsInput, ConfigurationItemUpdateWithoutIncomingRelationshipsInput>, ConfigurationItemUncheckedUpdateWithoutIncomingRelationshipsInput>
  }

  export type CiRelationshipTypeUpdateOneRequiredWithoutRelationshipsNestedInput = {
    create?: XOR<CiRelationshipTypeCreateWithoutRelationshipsInput, CiRelationshipTypeUncheckedCreateWithoutRelationshipsInput>
    connectOrCreate?: CiRelationshipTypeCreateOrConnectWithoutRelationshipsInput
    upsert?: CiRelationshipTypeUpsertWithoutRelationshipsInput
    connect?: CiRelationshipTypeWhereUniqueInput
    update?: XOR<XOR<CiRelationshipTypeUpdateToOneWithWhereWithoutRelationshipsInput, CiRelationshipTypeUpdateWithoutRelationshipsInput>, CiRelationshipTypeUncheckedUpdateWithoutRelationshipsInput>
  }

  export type ConfigurationItemCreateNestedOneWithoutHardwareDetailsInput = {
    create?: XOR<ConfigurationItemCreateWithoutHardwareDetailsInput, ConfigurationItemUncheckedCreateWithoutHardwareDetailsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutHardwareDetailsInput
    connect?: ConfigurationItemWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ConfigurationItemUpdateOneRequiredWithoutHardwareDetailsNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutHardwareDetailsInput, ConfigurationItemUncheckedCreateWithoutHardwareDetailsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutHardwareDetailsInput
    upsert?: ConfigurationItemUpsertWithoutHardwareDetailsInput
    connect?: ConfigurationItemWhereUniqueInput
    update?: XOR<XOR<ConfigurationItemUpdateToOneWithWhereWithoutHardwareDetailsInput, ConfigurationItemUpdateWithoutHardwareDetailsInput>, ConfigurationItemUncheckedUpdateWithoutHardwareDetailsInput>
  }

  export type ConfigurationItemCreateNestedOneWithoutSoftwareDetailsInput = {
    create?: XOR<ConfigurationItemCreateWithoutSoftwareDetailsInput, ConfigurationItemUncheckedCreateWithoutSoftwareDetailsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutSoftwareDetailsInput
    connect?: ConfigurationItemWhereUniqueInput
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type ConfigurationItemUpdateOneRequiredWithoutSoftwareDetailsNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutSoftwareDetailsInput, ConfigurationItemUncheckedCreateWithoutSoftwareDetailsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutSoftwareDetailsInput
    upsert?: ConfigurationItemUpsertWithoutSoftwareDetailsInput
    connect?: ConfigurationItemWhereUniqueInput
    update?: XOR<XOR<ConfigurationItemUpdateToOneWithWhereWithoutSoftwareDetailsInput, ConfigurationItemUpdateWithoutSoftwareDetailsInput>, ConfigurationItemUncheckedUpdateWithoutSoftwareDetailsInput>
  }

  export type ConfigurationItemCreateNestedOneWithoutApplicationDetailsInput = {
    create?: XOR<ConfigurationItemCreateWithoutApplicationDetailsInput, ConfigurationItemUncheckedCreateWithoutApplicationDetailsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutApplicationDetailsInput
    connect?: ConfigurationItemWhereUniqueInput
  }

  export type ConfigurationItemUpdateOneRequiredWithoutApplicationDetailsNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutApplicationDetailsInput, ConfigurationItemUncheckedCreateWithoutApplicationDetailsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutApplicationDetailsInput
    upsert?: ConfigurationItemUpsertWithoutApplicationDetailsInput
    connect?: ConfigurationItemWhereUniqueInput
    update?: XOR<XOR<ConfigurationItemUpdateToOneWithWhereWithoutApplicationDetailsInput, ConfigurationItemUpdateWithoutApplicationDetailsInput>, ConfigurationItemUncheckedUpdateWithoutApplicationDetailsInput>
  }

  export type ConfigurationItemCreateNestedOneWithoutNetworkDetailsInput = {
    create?: XOR<ConfigurationItemCreateWithoutNetworkDetailsInput, ConfigurationItemUncheckedCreateWithoutNetworkDetailsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutNetworkDetailsInput
    connect?: ConfigurationItemWhereUniqueInput
  }

  export type ConfigurationItemUpdateOneRequiredWithoutNetworkDetailsNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutNetworkDetailsInput, ConfigurationItemUncheckedCreateWithoutNetworkDetailsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutNetworkDetailsInput
    upsert?: ConfigurationItemUpsertWithoutNetworkDetailsInput
    connect?: ConfigurationItemWhereUniqueInput
    update?: XOR<XOR<ConfigurationItemUpdateToOneWithWhereWithoutNetworkDetailsInput, ConfigurationItemUpdateWithoutNetworkDetailsInput>, ConfigurationItemUncheckedUpdateWithoutNetworkDetailsInput>
  }

  export type ConfigurationItemCreateNestedOneWithoutServiceDetailsInput = {
    create?: XOR<ConfigurationItemCreateWithoutServiceDetailsInput, ConfigurationItemUncheckedCreateWithoutServiceDetailsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutServiceDetailsInput
    connect?: ConfigurationItemWhereUniqueInput
  }

  export type ConfigurationItemUpdateOneRequiredWithoutServiceDetailsNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutServiceDetailsInput, ConfigurationItemUncheckedCreateWithoutServiceDetailsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutServiceDetailsInput
    upsert?: ConfigurationItemUpsertWithoutServiceDetailsInput
    connect?: ConfigurationItemWhereUniqueInput
    update?: XOR<XOR<ConfigurationItemUpdateToOneWithWhereWithoutServiceDetailsInput, ConfigurationItemUpdateWithoutServiceDetailsInput>, ConfigurationItemUncheckedUpdateWithoutServiceDetailsInput>
  }

  export type ConfigurationItemCreateNestedOneWithoutDatabaseDetailsInput = {
    create?: XOR<ConfigurationItemCreateWithoutDatabaseDetailsInput, ConfigurationItemUncheckedCreateWithoutDatabaseDetailsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutDatabaseDetailsInput
    connect?: ConfigurationItemWhereUniqueInput
  }

  export type ConfigurationItemUpdateOneRequiredWithoutDatabaseDetailsNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutDatabaseDetailsInput, ConfigurationItemUncheckedCreateWithoutDatabaseDetailsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutDatabaseDetailsInput
    upsert?: ConfigurationItemUpsertWithoutDatabaseDetailsInput
    connect?: ConfigurationItemWhereUniqueInput
    update?: XOR<XOR<ConfigurationItemUpdateToOneWithWhereWithoutDatabaseDetailsInput, ConfigurationItemUpdateWithoutDatabaseDetailsInput>, ConfigurationItemUncheckedUpdateWithoutDatabaseDetailsInput>
  }

  export type ConfigurationItemCreateNestedOneWithoutVirtualDetailsInput = {
    create?: XOR<ConfigurationItemCreateWithoutVirtualDetailsInput, ConfigurationItemUncheckedCreateWithoutVirtualDetailsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutVirtualDetailsInput
    connect?: ConfigurationItemWhereUniqueInput
  }

  export type ConfigurationItemUpdateOneRequiredWithoutVirtualDetailsNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutVirtualDetailsInput, ConfigurationItemUncheckedCreateWithoutVirtualDetailsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutVirtualDetailsInput
    upsert?: ConfigurationItemUpsertWithoutVirtualDetailsInput
    connect?: ConfigurationItemWhereUniqueInput
    update?: XOR<XOR<ConfigurationItemUpdateToOneWithWhereWithoutVirtualDetailsInput, ConfigurationItemUpdateWithoutVirtualDetailsInput>, ConfigurationItemUncheckedUpdateWithoutVirtualDetailsInput>
  }

  export type ConfigurationItemCreateNestedOneWithoutFacilityDetailsInput = {
    create?: XOR<ConfigurationItemCreateWithoutFacilityDetailsInput, ConfigurationItemUncheckedCreateWithoutFacilityDetailsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutFacilityDetailsInput
    connect?: ConfigurationItemWhereUniqueInput
  }

  export type ConfigurationItemUpdateOneRequiredWithoutFacilityDetailsNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutFacilityDetailsInput, ConfigurationItemUncheckedCreateWithoutFacilityDetailsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutFacilityDetailsInput
    upsert?: ConfigurationItemUpsertWithoutFacilityDetailsInput
    connect?: ConfigurationItemWhereUniqueInput
    update?: XOR<XOR<ConfigurationItemUpdateToOneWithWhereWithoutFacilityDetailsInput, ConfigurationItemUpdateWithoutFacilityDetailsInput>, ConfigurationItemUncheckedUpdateWithoutFacilityDetailsInput>
  }

  export type CiBusinessServiceCreateNestedManyWithoutBusinessServiceInput = {
    create?: XOR<CiBusinessServiceCreateWithoutBusinessServiceInput, CiBusinessServiceUncheckedCreateWithoutBusinessServiceInput> | CiBusinessServiceCreateWithoutBusinessServiceInput[] | CiBusinessServiceUncheckedCreateWithoutBusinessServiceInput[]
    connectOrCreate?: CiBusinessServiceCreateOrConnectWithoutBusinessServiceInput | CiBusinessServiceCreateOrConnectWithoutBusinessServiceInput[]
    createMany?: CiBusinessServiceCreateManyBusinessServiceInputEnvelope
    connect?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
  }

  export type CiBusinessServiceUncheckedCreateNestedManyWithoutBusinessServiceInput = {
    create?: XOR<CiBusinessServiceCreateWithoutBusinessServiceInput, CiBusinessServiceUncheckedCreateWithoutBusinessServiceInput> | CiBusinessServiceCreateWithoutBusinessServiceInput[] | CiBusinessServiceUncheckedCreateWithoutBusinessServiceInput[]
    connectOrCreate?: CiBusinessServiceCreateOrConnectWithoutBusinessServiceInput | CiBusinessServiceCreateOrConnectWithoutBusinessServiceInput[]
    createMany?: CiBusinessServiceCreateManyBusinessServiceInputEnvelope
    connect?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
  }

  export type CiBusinessServiceUpdateManyWithoutBusinessServiceNestedInput = {
    create?: XOR<CiBusinessServiceCreateWithoutBusinessServiceInput, CiBusinessServiceUncheckedCreateWithoutBusinessServiceInput> | CiBusinessServiceCreateWithoutBusinessServiceInput[] | CiBusinessServiceUncheckedCreateWithoutBusinessServiceInput[]
    connectOrCreate?: CiBusinessServiceCreateOrConnectWithoutBusinessServiceInput | CiBusinessServiceCreateOrConnectWithoutBusinessServiceInput[]
    upsert?: CiBusinessServiceUpsertWithWhereUniqueWithoutBusinessServiceInput | CiBusinessServiceUpsertWithWhereUniqueWithoutBusinessServiceInput[]
    createMany?: CiBusinessServiceCreateManyBusinessServiceInputEnvelope
    set?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
    disconnect?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
    delete?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
    connect?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
    update?: CiBusinessServiceUpdateWithWhereUniqueWithoutBusinessServiceInput | CiBusinessServiceUpdateWithWhereUniqueWithoutBusinessServiceInput[]
    updateMany?: CiBusinessServiceUpdateManyWithWhereWithoutBusinessServiceInput | CiBusinessServiceUpdateManyWithWhereWithoutBusinessServiceInput[]
    deleteMany?: CiBusinessServiceScalarWhereInput | CiBusinessServiceScalarWhereInput[]
  }

  export type CiBusinessServiceUncheckedUpdateManyWithoutBusinessServiceNestedInput = {
    create?: XOR<CiBusinessServiceCreateWithoutBusinessServiceInput, CiBusinessServiceUncheckedCreateWithoutBusinessServiceInput> | CiBusinessServiceCreateWithoutBusinessServiceInput[] | CiBusinessServiceUncheckedCreateWithoutBusinessServiceInput[]
    connectOrCreate?: CiBusinessServiceCreateOrConnectWithoutBusinessServiceInput | CiBusinessServiceCreateOrConnectWithoutBusinessServiceInput[]
    upsert?: CiBusinessServiceUpsertWithWhereUniqueWithoutBusinessServiceInput | CiBusinessServiceUpsertWithWhereUniqueWithoutBusinessServiceInput[]
    createMany?: CiBusinessServiceCreateManyBusinessServiceInputEnvelope
    set?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
    disconnect?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
    delete?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
    connect?: CiBusinessServiceWhereUniqueInput | CiBusinessServiceWhereUniqueInput[]
    update?: CiBusinessServiceUpdateWithWhereUniqueWithoutBusinessServiceInput | CiBusinessServiceUpdateWithWhereUniqueWithoutBusinessServiceInput[]
    updateMany?: CiBusinessServiceUpdateManyWithWhereWithoutBusinessServiceInput | CiBusinessServiceUpdateManyWithWhereWithoutBusinessServiceInput[]
    deleteMany?: CiBusinessServiceScalarWhereInput | CiBusinessServiceScalarWhereInput[]
  }

  export type ConfigurationItemCreateNestedOneWithoutBusinessServicesInput = {
    create?: XOR<ConfigurationItemCreateWithoutBusinessServicesInput, ConfigurationItemUncheckedCreateWithoutBusinessServicesInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutBusinessServicesInput
    connect?: ConfigurationItemWhereUniqueInput
  }

  export type BusinessServiceCreateNestedOneWithoutConfigurationItemsInput = {
    create?: XOR<BusinessServiceCreateWithoutConfigurationItemsInput, BusinessServiceUncheckedCreateWithoutConfigurationItemsInput>
    connectOrCreate?: BusinessServiceCreateOrConnectWithoutConfigurationItemsInput
    connect?: BusinessServiceWhereUniqueInput
  }

  export type ConfigurationItemUpdateOneRequiredWithoutBusinessServicesNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutBusinessServicesInput, ConfigurationItemUncheckedCreateWithoutBusinessServicesInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutBusinessServicesInput
    upsert?: ConfigurationItemUpsertWithoutBusinessServicesInput
    connect?: ConfigurationItemWhereUniqueInput
    update?: XOR<XOR<ConfigurationItemUpdateToOneWithWhereWithoutBusinessServicesInput, ConfigurationItemUpdateWithoutBusinessServicesInput>, ConfigurationItemUncheckedUpdateWithoutBusinessServicesInput>
  }

  export type BusinessServiceUpdateOneRequiredWithoutConfigurationItemsNestedInput = {
    create?: XOR<BusinessServiceCreateWithoutConfigurationItemsInput, BusinessServiceUncheckedCreateWithoutConfigurationItemsInput>
    connectOrCreate?: BusinessServiceCreateOrConnectWithoutConfigurationItemsInput
    upsert?: BusinessServiceUpsertWithoutConfigurationItemsInput
    connect?: BusinessServiceWhereUniqueInput
    update?: XOR<XOR<BusinessServiceUpdateToOneWithWhereWithoutConfigurationItemsInput, BusinessServiceUpdateWithoutConfigurationItemsInput>, BusinessServiceUncheckedUpdateWithoutConfigurationItemsInput>
  }

  export type ConfigurationItemCreateNestedOneWithoutIncidentsInput = {
    create?: XOR<ConfigurationItemCreateWithoutIncidentsInput, ConfigurationItemUncheckedCreateWithoutIncidentsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutIncidentsInput
    connect?: ConfigurationItemWhereUniqueInput
  }

  export type ConfigurationItemUpdateOneRequiredWithoutIncidentsNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutIncidentsInput, ConfigurationItemUncheckedCreateWithoutIncidentsInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutIncidentsInput
    upsert?: ConfigurationItemUpsertWithoutIncidentsInput
    connect?: ConfigurationItemWhereUniqueInput
    update?: XOR<XOR<ConfigurationItemUpdateToOneWithWhereWithoutIncidentsInput, ConfigurationItemUpdateWithoutIncidentsInput>, ConfigurationItemUncheckedUpdateWithoutIncidentsInput>
  }

  export type ConfigurationItemCreateNestedOneWithoutChangesInput = {
    create?: XOR<ConfigurationItemCreateWithoutChangesInput, ConfigurationItemUncheckedCreateWithoutChangesInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutChangesInput
    connect?: ConfigurationItemWhereUniqueInput
  }

  export type ConfigurationItemUpdateOneRequiredWithoutChangesNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutChangesInput, ConfigurationItemUncheckedCreateWithoutChangesInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutChangesInput
    upsert?: ConfigurationItemUpsertWithoutChangesInput
    connect?: ConfigurationItemWhereUniqueInput
    update?: XOR<XOR<ConfigurationItemUpdateToOneWithWhereWithoutChangesInput, ConfigurationItemUpdateWithoutChangesInput>, ConfigurationItemUncheckedUpdateWithoutChangesInput>
  }

  export type DiscoveryScheduleCreatecredentialIdsInput = {
    set: string[]
  }

  export type DiscoveryScheduleUpdatecredentialIdsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type DiscoveredItemCreateNestedManyWithoutDiscoveryRunInput = {
    create?: XOR<DiscoveredItemCreateWithoutDiscoveryRunInput, DiscoveredItemUncheckedCreateWithoutDiscoveryRunInput> | DiscoveredItemCreateWithoutDiscoveryRunInput[] | DiscoveredItemUncheckedCreateWithoutDiscoveryRunInput[]
    connectOrCreate?: DiscoveredItemCreateOrConnectWithoutDiscoveryRunInput | DiscoveredItemCreateOrConnectWithoutDiscoveryRunInput[]
    createMany?: DiscoveredItemCreateManyDiscoveryRunInputEnvelope
    connect?: DiscoveredItemWhereUniqueInput | DiscoveredItemWhereUniqueInput[]
  }

  export type DiscoveredItemUncheckedCreateNestedManyWithoutDiscoveryRunInput = {
    create?: XOR<DiscoveredItemCreateWithoutDiscoveryRunInput, DiscoveredItemUncheckedCreateWithoutDiscoveryRunInput> | DiscoveredItemCreateWithoutDiscoveryRunInput[] | DiscoveredItemUncheckedCreateWithoutDiscoveryRunInput[]
    connectOrCreate?: DiscoveredItemCreateOrConnectWithoutDiscoveryRunInput | DiscoveredItemCreateOrConnectWithoutDiscoveryRunInput[]
    createMany?: DiscoveredItemCreateManyDiscoveryRunInputEnvelope
    connect?: DiscoveredItemWhereUniqueInput | DiscoveredItemWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DiscoveredItemUpdateManyWithoutDiscoveryRunNestedInput = {
    create?: XOR<DiscoveredItemCreateWithoutDiscoveryRunInput, DiscoveredItemUncheckedCreateWithoutDiscoveryRunInput> | DiscoveredItemCreateWithoutDiscoveryRunInput[] | DiscoveredItemUncheckedCreateWithoutDiscoveryRunInput[]
    connectOrCreate?: DiscoveredItemCreateOrConnectWithoutDiscoveryRunInput | DiscoveredItemCreateOrConnectWithoutDiscoveryRunInput[]
    upsert?: DiscoveredItemUpsertWithWhereUniqueWithoutDiscoveryRunInput | DiscoveredItemUpsertWithWhereUniqueWithoutDiscoveryRunInput[]
    createMany?: DiscoveredItemCreateManyDiscoveryRunInputEnvelope
    set?: DiscoveredItemWhereUniqueInput | DiscoveredItemWhereUniqueInput[]
    disconnect?: DiscoveredItemWhereUniqueInput | DiscoveredItemWhereUniqueInput[]
    delete?: DiscoveredItemWhereUniqueInput | DiscoveredItemWhereUniqueInput[]
    connect?: DiscoveredItemWhereUniqueInput | DiscoveredItemWhereUniqueInput[]
    update?: DiscoveredItemUpdateWithWhereUniqueWithoutDiscoveryRunInput | DiscoveredItemUpdateWithWhereUniqueWithoutDiscoveryRunInput[]
    updateMany?: DiscoveredItemUpdateManyWithWhereWithoutDiscoveryRunInput | DiscoveredItemUpdateManyWithWhereWithoutDiscoveryRunInput[]
    deleteMany?: DiscoveredItemScalarWhereInput | DiscoveredItemScalarWhereInput[]
  }

  export type DiscoveredItemUncheckedUpdateManyWithoutDiscoveryRunNestedInput = {
    create?: XOR<DiscoveredItemCreateWithoutDiscoveryRunInput, DiscoveredItemUncheckedCreateWithoutDiscoveryRunInput> | DiscoveredItemCreateWithoutDiscoveryRunInput[] | DiscoveredItemUncheckedCreateWithoutDiscoveryRunInput[]
    connectOrCreate?: DiscoveredItemCreateOrConnectWithoutDiscoveryRunInput | DiscoveredItemCreateOrConnectWithoutDiscoveryRunInput[]
    upsert?: DiscoveredItemUpsertWithWhereUniqueWithoutDiscoveryRunInput | DiscoveredItemUpsertWithWhereUniqueWithoutDiscoveryRunInput[]
    createMany?: DiscoveredItemCreateManyDiscoveryRunInputEnvelope
    set?: DiscoveredItemWhereUniqueInput | DiscoveredItemWhereUniqueInput[]
    disconnect?: DiscoveredItemWhereUniqueInput | DiscoveredItemWhereUniqueInput[]
    delete?: DiscoveredItemWhereUniqueInput | DiscoveredItemWhereUniqueInput[]
    connect?: DiscoveredItemWhereUniqueInput | DiscoveredItemWhereUniqueInput[]
    update?: DiscoveredItemUpdateWithWhereUniqueWithoutDiscoveryRunInput | DiscoveredItemUpdateWithWhereUniqueWithoutDiscoveryRunInput[]
    updateMany?: DiscoveredItemUpdateManyWithWhereWithoutDiscoveryRunInput | DiscoveredItemUpdateManyWithWhereWithoutDiscoveryRunInput[]
    deleteMany?: DiscoveredItemScalarWhereInput | DiscoveredItemScalarWhereInput[]
  }

  export type DiscoveryRunCreateNestedOneWithoutDiscoveredItemsInput = {
    create?: XOR<DiscoveryRunCreateWithoutDiscoveredItemsInput, DiscoveryRunUncheckedCreateWithoutDiscoveredItemsInput>
    connectOrCreate?: DiscoveryRunCreateOrConnectWithoutDiscoveredItemsInput
    connect?: DiscoveryRunWhereUniqueInput
  }

  export type DiscoveryRunUpdateOneRequiredWithoutDiscoveredItemsNestedInput = {
    create?: XOR<DiscoveryRunCreateWithoutDiscoveredItemsInput, DiscoveryRunUncheckedCreateWithoutDiscoveredItemsInput>
    connectOrCreate?: DiscoveryRunCreateOrConnectWithoutDiscoveredItemsInput
    upsert?: DiscoveryRunUpsertWithoutDiscoveredItemsInput
    connect?: DiscoveryRunWhereUniqueInput
    update?: XOR<XOR<DiscoveryRunUpdateToOneWithWhereWithoutDiscoveredItemsInput, DiscoveryRunUpdateWithoutDiscoveredItemsInput>, DiscoveryRunUncheckedUpdateWithoutDiscoveredItemsInput>
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type SupportGroupMemberCreateNestedManyWithoutSupportGroupInput = {
    create?: XOR<SupportGroupMemberCreateWithoutSupportGroupInput, SupportGroupMemberUncheckedCreateWithoutSupportGroupInput> | SupportGroupMemberCreateWithoutSupportGroupInput[] | SupportGroupMemberUncheckedCreateWithoutSupportGroupInput[]
    connectOrCreate?: SupportGroupMemberCreateOrConnectWithoutSupportGroupInput | SupportGroupMemberCreateOrConnectWithoutSupportGroupInput[]
    createMany?: SupportGroupMemberCreateManySupportGroupInputEnvelope
    connect?: SupportGroupMemberWhereUniqueInput | SupportGroupMemberWhereUniqueInput[]
  }

  export type SupportGroupPermissionCreateNestedManyWithoutSupportGroupInput = {
    create?: XOR<SupportGroupPermissionCreateWithoutSupportGroupInput, SupportGroupPermissionUncheckedCreateWithoutSupportGroupInput> | SupportGroupPermissionCreateWithoutSupportGroupInput[] | SupportGroupPermissionUncheckedCreateWithoutSupportGroupInput[]
    connectOrCreate?: SupportGroupPermissionCreateOrConnectWithoutSupportGroupInput | SupportGroupPermissionCreateOrConnectWithoutSupportGroupInput[]
    createMany?: SupportGroupPermissionCreateManySupportGroupInputEnvelope
    connect?: SupportGroupPermissionWhereUniqueInput | SupportGroupPermissionWhereUniqueInput[]
  }

  export type ConfigurationItemCreateNestedManyWithoutSupportGroupsInput = {
    create?: XOR<ConfigurationItemCreateWithoutSupportGroupsInput, ConfigurationItemUncheckedCreateWithoutSupportGroupsInput> | ConfigurationItemCreateWithoutSupportGroupsInput[] | ConfigurationItemUncheckedCreateWithoutSupportGroupsInput[]
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutSupportGroupsInput | ConfigurationItemCreateOrConnectWithoutSupportGroupsInput[]
    connect?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
  }

  export type CiOwnershipCreateNestedManyWithoutSupportGroupInput = {
    create?: XOR<CiOwnershipCreateWithoutSupportGroupInput, CiOwnershipUncheckedCreateWithoutSupportGroupInput> | CiOwnershipCreateWithoutSupportGroupInput[] | CiOwnershipUncheckedCreateWithoutSupportGroupInput[]
    connectOrCreate?: CiOwnershipCreateOrConnectWithoutSupportGroupInput | CiOwnershipCreateOrConnectWithoutSupportGroupInput[]
    createMany?: CiOwnershipCreateManySupportGroupInputEnvelope
    connect?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
  }

  export type SupportGroupCreateNestedManyWithoutEscalationSourceInput = {
    create?: XOR<SupportGroupCreateWithoutEscalationSourceInput, SupportGroupUncheckedCreateWithoutEscalationSourceInput> | SupportGroupCreateWithoutEscalationSourceInput[] | SupportGroupUncheckedCreateWithoutEscalationSourceInput[]
    connectOrCreate?: SupportGroupCreateOrConnectWithoutEscalationSourceInput | SupportGroupCreateOrConnectWithoutEscalationSourceInput[]
    createMany?: SupportGroupCreateManyEscalationSourceInputEnvelope
    connect?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
  }

  export type SupportGroupCreateNestedOneWithoutEscalationTargetInput = {
    create?: XOR<SupportGroupCreateWithoutEscalationTargetInput, SupportGroupUncheckedCreateWithoutEscalationTargetInput>
    connectOrCreate?: SupportGroupCreateOrConnectWithoutEscalationTargetInput
    connect?: SupportGroupWhereUniqueInput
  }

  export type SupportGroupMemberUncheckedCreateNestedManyWithoutSupportGroupInput = {
    create?: XOR<SupportGroupMemberCreateWithoutSupportGroupInput, SupportGroupMemberUncheckedCreateWithoutSupportGroupInput> | SupportGroupMemberCreateWithoutSupportGroupInput[] | SupportGroupMemberUncheckedCreateWithoutSupportGroupInput[]
    connectOrCreate?: SupportGroupMemberCreateOrConnectWithoutSupportGroupInput | SupportGroupMemberCreateOrConnectWithoutSupportGroupInput[]
    createMany?: SupportGroupMemberCreateManySupportGroupInputEnvelope
    connect?: SupportGroupMemberWhereUniqueInput | SupportGroupMemberWhereUniqueInput[]
  }

  export type SupportGroupPermissionUncheckedCreateNestedManyWithoutSupportGroupInput = {
    create?: XOR<SupportGroupPermissionCreateWithoutSupportGroupInput, SupportGroupPermissionUncheckedCreateWithoutSupportGroupInput> | SupportGroupPermissionCreateWithoutSupportGroupInput[] | SupportGroupPermissionUncheckedCreateWithoutSupportGroupInput[]
    connectOrCreate?: SupportGroupPermissionCreateOrConnectWithoutSupportGroupInput | SupportGroupPermissionCreateOrConnectWithoutSupportGroupInput[]
    createMany?: SupportGroupPermissionCreateManySupportGroupInputEnvelope
    connect?: SupportGroupPermissionWhereUniqueInput | SupportGroupPermissionWhereUniqueInput[]
  }

  export type ConfigurationItemUncheckedCreateNestedManyWithoutSupportGroupsInput = {
    create?: XOR<ConfigurationItemCreateWithoutSupportGroupsInput, ConfigurationItemUncheckedCreateWithoutSupportGroupsInput> | ConfigurationItemCreateWithoutSupportGroupsInput[] | ConfigurationItemUncheckedCreateWithoutSupportGroupsInput[]
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutSupportGroupsInput | ConfigurationItemCreateOrConnectWithoutSupportGroupsInput[]
    connect?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
  }

  export type CiOwnershipUncheckedCreateNestedManyWithoutSupportGroupInput = {
    create?: XOR<CiOwnershipCreateWithoutSupportGroupInput, CiOwnershipUncheckedCreateWithoutSupportGroupInput> | CiOwnershipCreateWithoutSupportGroupInput[] | CiOwnershipUncheckedCreateWithoutSupportGroupInput[]
    connectOrCreate?: CiOwnershipCreateOrConnectWithoutSupportGroupInput | CiOwnershipCreateOrConnectWithoutSupportGroupInput[]
    createMany?: CiOwnershipCreateManySupportGroupInputEnvelope
    connect?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
  }

  export type SupportGroupUncheckedCreateNestedManyWithoutEscalationSourceInput = {
    create?: XOR<SupportGroupCreateWithoutEscalationSourceInput, SupportGroupUncheckedCreateWithoutEscalationSourceInput> | SupportGroupCreateWithoutEscalationSourceInput[] | SupportGroupUncheckedCreateWithoutEscalationSourceInput[]
    connectOrCreate?: SupportGroupCreateOrConnectWithoutEscalationSourceInput | SupportGroupCreateOrConnectWithoutEscalationSourceInput[]
    createMany?: SupportGroupCreateManyEscalationSourceInputEnvelope
    connect?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
  }

  export type SupportGroupMemberUpdateManyWithoutSupportGroupNestedInput = {
    create?: XOR<SupportGroupMemberCreateWithoutSupportGroupInput, SupportGroupMemberUncheckedCreateWithoutSupportGroupInput> | SupportGroupMemberCreateWithoutSupportGroupInput[] | SupportGroupMemberUncheckedCreateWithoutSupportGroupInput[]
    connectOrCreate?: SupportGroupMemberCreateOrConnectWithoutSupportGroupInput | SupportGroupMemberCreateOrConnectWithoutSupportGroupInput[]
    upsert?: SupportGroupMemberUpsertWithWhereUniqueWithoutSupportGroupInput | SupportGroupMemberUpsertWithWhereUniqueWithoutSupportGroupInput[]
    createMany?: SupportGroupMemberCreateManySupportGroupInputEnvelope
    set?: SupportGroupMemberWhereUniqueInput | SupportGroupMemberWhereUniqueInput[]
    disconnect?: SupportGroupMemberWhereUniqueInput | SupportGroupMemberWhereUniqueInput[]
    delete?: SupportGroupMemberWhereUniqueInput | SupportGroupMemberWhereUniqueInput[]
    connect?: SupportGroupMemberWhereUniqueInput | SupportGroupMemberWhereUniqueInput[]
    update?: SupportGroupMemberUpdateWithWhereUniqueWithoutSupportGroupInput | SupportGroupMemberUpdateWithWhereUniqueWithoutSupportGroupInput[]
    updateMany?: SupportGroupMemberUpdateManyWithWhereWithoutSupportGroupInput | SupportGroupMemberUpdateManyWithWhereWithoutSupportGroupInput[]
    deleteMany?: SupportGroupMemberScalarWhereInput | SupportGroupMemberScalarWhereInput[]
  }

  export type SupportGroupPermissionUpdateManyWithoutSupportGroupNestedInput = {
    create?: XOR<SupportGroupPermissionCreateWithoutSupportGroupInput, SupportGroupPermissionUncheckedCreateWithoutSupportGroupInput> | SupportGroupPermissionCreateWithoutSupportGroupInput[] | SupportGroupPermissionUncheckedCreateWithoutSupportGroupInput[]
    connectOrCreate?: SupportGroupPermissionCreateOrConnectWithoutSupportGroupInput | SupportGroupPermissionCreateOrConnectWithoutSupportGroupInput[]
    upsert?: SupportGroupPermissionUpsertWithWhereUniqueWithoutSupportGroupInput | SupportGroupPermissionUpsertWithWhereUniqueWithoutSupportGroupInput[]
    createMany?: SupportGroupPermissionCreateManySupportGroupInputEnvelope
    set?: SupportGroupPermissionWhereUniqueInput | SupportGroupPermissionWhereUniqueInput[]
    disconnect?: SupportGroupPermissionWhereUniqueInput | SupportGroupPermissionWhereUniqueInput[]
    delete?: SupportGroupPermissionWhereUniqueInput | SupportGroupPermissionWhereUniqueInput[]
    connect?: SupportGroupPermissionWhereUniqueInput | SupportGroupPermissionWhereUniqueInput[]
    update?: SupportGroupPermissionUpdateWithWhereUniqueWithoutSupportGroupInput | SupportGroupPermissionUpdateWithWhereUniqueWithoutSupportGroupInput[]
    updateMany?: SupportGroupPermissionUpdateManyWithWhereWithoutSupportGroupInput | SupportGroupPermissionUpdateManyWithWhereWithoutSupportGroupInput[]
    deleteMany?: SupportGroupPermissionScalarWhereInput | SupportGroupPermissionScalarWhereInput[]
  }

  export type ConfigurationItemUpdateManyWithoutSupportGroupsNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutSupportGroupsInput, ConfigurationItemUncheckedCreateWithoutSupportGroupsInput> | ConfigurationItemCreateWithoutSupportGroupsInput[] | ConfigurationItemUncheckedCreateWithoutSupportGroupsInput[]
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutSupportGroupsInput | ConfigurationItemCreateOrConnectWithoutSupportGroupsInput[]
    upsert?: ConfigurationItemUpsertWithWhereUniqueWithoutSupportGroupsInput | ConfigurationItemUpsertWithWhereUniqueWithoutSupportGroupsInput[]
    set?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
    disconnect?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
    delete?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
    connect?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
    update?: ConfigurationItemUpdateWithWhereUniqueWithoutSupportGroupsInput | ConfigurationItemUpdateWithWhereUniqueWithoutSupportGroupsInput[]
    updateMany?: ConfigurationItemUpdateManyWithWhereWithoutSupportGroupsInput | ConfigurationItemUpdateManyWithWhereWithoutSupportGroupsInput[]
    deleteMany?: ConfigurationItemScalarWhereInput | ConfigurationItemScalarWhereInput[]
  }

  export type CiOwnershipUpdateManyWithoutSupportGroupNestedInput = {
    create?: XOR<CiOwnershipCreateWithoutSupportGroupInput, CiOwnershipUncheckedCreateWithoutSupportGroupInput> | CiOwnershipCreateWithoutSupportGroupInput[] | CiOwnershipUncheckedCreateWithoutSupportGroupInput[]
    connectOrCreate?: CiOwnershipCreateOrConnectWithoutSupportGroupInput | CiOwnershipCreateOrConnectWithoutSupportGroupInput[]
    upsert?: CiOwnershipUpsertWithWhereUniqueWithoutSupportGroupInput | CiOwnershipUpsertWithWhereUniqueWithoutSupportGroupInput[]
    createMany?: CiOwnershipCreateManySupportGroupInputEnvelope
    set?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
    disconnect?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
    delete?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
    connect?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
    update?: CiOwnershipUpdateWithWhereUniqueWithoutSupportGroupInput | CiOwnershipUpdateWithWhereUniqueWithoutSupportGroupInput[]
    updateMany?: CiOwnershipUpdateManyWithWhereWithoutSupportGroupInput | CiOwnershipUpdateManyWithWhereWithoutSupportGroupInput[]
    deleteMany?: CiOwnershipScalarWhereInput | CiOwnershipScalarWhereInput[]
  }

  export type SupportGroupUpdateManyWithoutEscalationSourceNestedInput = {
    create?: XOR<SupportGroupCreateWithoutEscalationSourceInput, SupportGroupUncheckedCreateWithoutEscalationSourceInput> | SupportGroupCreateWithoutEscalationSourceInput[] | SupportGroupUncheckedCreateWithoutEscalationSourceInput[]
    connectOrCreate?: SupportGroupCreateOrConnectWithoutEscalationSourceInput | SupportGroupCreateOrConnectWithoutEscalationSourceInput[]
    upsert?: SupportGroupUpsertWithWhereUniqueWithoutEscalationSourceInput | SupportGroupUpsertWithWhereUniqueWithoutEscalationSourceInput[]
    createMany?: SupportGroupCreateManyEscalationSourceInputEnvelope
    set?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
    disconnect?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
    delete?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
    connect?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
    update?: SupportGroupUpdateWithWhereUniqueWithoutEscalationSourceInput | SupportGroupUpdateWithWhereUniqueWithoutEscalationSourceInput[]
    updateMany?: SupportGroupUpdateManyWithWhereWithoutEscalationSourceInput | SupportGroupUpdateManyWithWhereWithoutEscalationSourceInput[]
    deleteMany?: SupportGroupScalarWhereInput | SupportGroupScalarWhereInput[]
  }

  export type SupportGroupUpdateOneWithoutEscalationTargetNestedInput = {
    create?: XOR<SupportGroupCreateWithoutEscalationTargetInput, SupportGroupUncheckedCreateWithoutEscalationTargetInput>
    connectOrCreate?: SupportGroupCreateOrConnectWithoutEscalationTargetInput
    upsert?: SupportGroupUpsertWithoutEscalationTargetInput
    disconnect?: SupportGroupWhereInput | boolean
    delete?: SupportGroupWhereInput | boolean
    connect?: SupportGroupWhereUniqueInput
    update?: XOR<XOR<SupportGroupUpdateToOneWithWhereWithoutEscalationTargetInput, SupportGroupUpdateWithoutEscalationTargetInput>, SupportGroupUncheckedUpdateWithoutEscalationTargetInput>
  }

  export type SupportGroupMemberUncheckedUpdateManyWithoutSupportGroupNestedInput = {
    create?: XOR<SupportGroupMemberCreateWithoutSupportGroupInput, SupportGroupMemberUncheckedCreateWithoutSupportGroupInput> | SupportGroupMemberCreateWithoutSupportGroupInput[] | SupportGroupMemberUncheckedCreateWithoutSupportGroupInput[]
    connectOrCreate?: SupportGroupMemberCreateOrConnectWithoutSupportGroupInput | SupportGroupMemberCreateOrConnectWithoutSupportGroupInput[]
    upsert?: SupportGroupMemberUpsertWithWhereUniqueWithoutSupportGroupInput | SupportGroupMemberUpsertWithWhereUniqueWithoutSupportGroupInput[]
    createMany?: SupportGroupMemberCreateManySupportGroupInputEnvelope
    set?: SupportGroupMemberWhereUniqueInput | SupportGroupMemberWhereUniqueInput[]
    disconnect?: SupportGroupMemberWhereUniqueInput | SupportGroupMemberWhereUniqueInput[]
    delete?: SupportGroupMemberWhereUniqueInput | SupportGroupMemberWhereUniqueInput[]
    connect?: SupportGroupMemberWhereUniqueInput | SupportGroupMemberWhereUniqueInput[]
    update?: SupportGroupMemberUpdateWithWhereUniqueWithoutSupportGroupInput | SupportGroupMemberUpdateWithWhereUniqueWithoutSupportGroupInput[]
    updateMany?: SupportGroupMemberUpdateManyWithWhereWithoutSupportGroupInput | SupportGroupMemberUpdateManyWithWhereWithoutSupportGroupInput[]
    deleteMany?: SupportGroupMemberScalarWhereInput | SupportGroupMemberScalarWhereInput[]
  }

  export type SupportGroupPermissionUncheckedUpdateManyWithoutSupportGroupNestedInput = {
    create?: XOR<SupportGroupPermissionCreateWithoutSupportGroupInput, SupportGroupPermissionUncheckedCreateWithoutSupportGroupInput> | SupportGroupPermissionCreateWithoutSupportGroupInput[] | SupportGroupPermissionUncheckedCreateWithoutSupportGroupInput[]
    connectOrCreate?: SupportGroupPermissionCreateOrConnectWithoutSupportGroupInput | SupportGroupPermissionCreateOrConnectWithoutSupportGroupInput[]
    upsert?: SupportGroupPermissionUpsertWithWhereUniqueWithoutSupportGroupInput | SupportGroupPermissionUpsertWithWhereUniqueWithoutSupportGroupInput[]
    createMany?: SupportGroupPermissionCreateManySupportGroupInputEnvelope
    set?: SupportGroupPermissionWhereUniqueInput | SupportGroupPermissionWhereUniqueInput[]
    disconnect?: SupportGroupPermissionWhereUniqueInput | SupportGroupPermissionWhereUniqueInput[]
    delete?: SupportGroupPermissionWhereUniqueInput | SupportGroupPermissionWhereUniqueInput[]
    connect?: SupportGroupPermissionWhereUniqueInput | SupportGroupPermissionWhereUniqueInput[]
    update?: SupportGroupPermissionUpdateWithWhereUniqueWithoutSupportGroupInput | SupportGroupPermissionUpdateWithWhereUniqueWithoutSupportGroupInput[]
    updateMany?: SupportGroupPermissionUpdateManyWithWhereWithoutSupportGroupInput | SupportGroupPermissionUpdateManyWithWhereWithoutSupportGroupInput[]
    deleteMany?: SupportGroupPermissionScalarWhereInput | SupportGroupPermissionScalarWhereInput[]
  }

  export type ConfigurationItemUncheckedUpdateManyWithoutSupportGroupsNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutSupportGroupsInput, ConfigurationItemUncheckedCreateWithoutSupportGroupsInput> | ConfigurationItemCreateWithoutSupportGroupsInput[] | ConfigurationItemUncheckedCreateWithoutSupportGroupsInput[]
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutSupportGroupsInput | ConfigurationItemCreateOrConnectWithoutSupportGroupsInput[]
    upsert?: ConfigurationItemUpsertWithWhereUniqueWithoutSupportGroupsInput | ConfigurationItemUpsertWithWhereUniqueWithoutSupportGroupsInput[]
    set?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
    disconnect?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
    delete?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
    connect?: ConfigurationItemWhereUniqueInput | ConfigurationItemWhereUniqueInput[]
    update?: ConfigurationItemUpdateWithWhereUniqueWithoutSupportGroupsInput | ConfigurationItemUpdateWithWhereUniqueWithoutSupportGroupsInput[]
    updateMany?: ConfigurationItemUpdateManyWithWhereWithoutSupportGroupsInput | ConfigurationItemUpdateManyWithWhereWithoutSupportGroupsInput[]
    deleteMany?: ConfigurationItemScalarWhereInput | ConfigurationItemScalarWhereInput[]
  }

  export type CiOwnershipUncheckedUpdateManyWithoutSupportGroupNestedInput = {
    create?: XOR<CiOwnershipCreateWithoutSupportGroupInput, CiOwnershipUncheckedCreateWithoutSupportGroupInput> | CiOwnershipCreateWithoutSupportGroupInput[] | CiOwnershipUncheckedCreateWithoutSupportGroupInput[]
    connectOrCreate?: CiOwnershipCreateOrConnectWithoutSupportGroupInput | CiOwnershipCreateOrConnectWithoutSupportGroupInput[]
    upsert?: CiOwnershipUpsertWithWhereUniqueWithoutSupportGroupInput | CiOwnershipUpsertWithWhereUniqueWithoutSupportGroupInput[]
    createMany?: CiOwnershipCreateManySupportGroupInputEnvelope
    set?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
    disconnect?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
    delete?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
    connect?: CiOwnershipWhereUniqueInput | CiOwnershipWhereUniqueInput[]
    update?: CiOwnershipUpdateWithWhereUniqueWithoutSupportGroupInput | CiOwnershipUpdateWithWhereUniqueWithoutSupportGroupInput[]
    updateMany?: CiOwnershipUpdateManyWithWhereWithoutSupportGroupInput | CiOwnershipUpdateManyWithWhereWithoutSupportGroupInput[]
    deleteMany?: CiOwnershipScalarWhereInput | CiOwnershipScalarWhereInput[]
  }

  export type SupportGroupUncheckedUpdateManyWithoutEscalationSourceNestedInput = {
    create?: XOR<SupportGroupCreateWithoutEscalationSourceInput, SupportGroupUncheckedCreateWithoutEscalationSourceInput> | SupportGroupCreateWithoutEscalationSourceInput[] | SupportGroupUncheckedCreateWithoutEscalationSourceInput[]
    connectOrCreate?: SupportGroupCreateOrConnectWithoutEscalationSourceInput | SupportGroupCreateOrConnectWithoutEscalationSourceInput[]
    upsert?: SupportGroupUpsertWithWhereUniqueWithoutEscalationSourceInput | SupportGroupUpsertWithWhereUniqueWithoutEscalationSourceInput[]
    createMany?: SupportGroupCreateManyEscalationSourceInputEnvelope
    set?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
    disconnect?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
    delete?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
    connect?: SupportGroupWhereUniqueInput | SupportGroupWhereUniqueInput[]
    update?: SupportGroupUpdateWithWhereUniqueWithoutEscalationSourceInput | SupportGroupUpdateWithWhereUniqueWithoutEscalationSourceInput[]
    updateMany?: SupportGroupUpdateManyWithWhereWithoutEscalationSourceInput | SupportGroupUpdateManyWithWhereWithoutEscalationSourceInput[]
    deleteMany?: SupportGroupScalarWhereInput | SupportGroupScalarWhereInput[]
  }

  export type SupportGroupCreateNestedOneWithoutMembersInput = {
    create?: XOR<SupportGroupCreateWithoutMembersInput, SupportGroupUncheckedCreateWithoutMembersInput>
    connectOrCreate?: SupportGroupCreateOrConnectWithoutMembersInput
    connect?: SupportGroupWhereUniqueInput
  }

  export type SupportGroupUpdateOneRequiredWithoutMembersNestedInput = {
    create?: XOR<SupportGroupCreateWithoutMembersInput, SupportGroupUncheckedCreateWithoutMembersInput>
    connectOrCreate?: SupportGroupCreateOrConnectWithoutMembersInput
    upsert?: SupportGroupUpsertWithoutMembersInput
    connect?: SupportGroupWhereUniqueInput
    update?: XOR<XOR<SupportGroupUpdateToOneWithWhereWithoutMembersInput, SupportGroupUpdateWithoutMembersInput>, SupportGroupUncheckedUpdateWithoutMembersInput>
  }

  export type SupportGroupCreateNestedOneWithoutPermissionsInput = {
    create?: XOR<SupportGroupCreateWithoutPermissionsInput, SupportGroupUncheckedCreateWithoutPermissionsInput>
    connectOrCreate?: SupportGroupCreateOrConnectWithoutPermissionsInput
    connect?: SupportGroupWhereUniqueInput
  }

  export type SupportGroupUpdateOneRequiredWithoutPermissionsNestedInput = {
    create?: XOR<SupportGroupCreateWithoutPermissionsInput, SupportGroupUncheckedCreateWithoutPermissionsInput>
    connectOrCreate?: SupportGroupCreateOrConnectWithoutPermissionsInput
    upsert?: SupportGroupUpsertWithoutPermissionsInput
    connect?: SupportGroupWhereUniqueInput
    update?: XOR<XOR<SupportGroupUpdateToOneWithWhereWithoutPermissionsInput, SupportGroupUpdateWithoutPermissionsInput>, SupportGroupUncheckedUpdateWithoutPermissionsInput>
  }

  export type CiOwnershipCreateresponsibilitiesInput = {
    set: string[]
  }

  export type ConfigurationItemCreateNestedOneWithoutOwnershipInput = {
    create?: XOR<ConfigurationItemCreateWithoutOwnershipInput, ConfigurationItemUncheckedCreateWithoutOwnershipInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutOwnershipInput
    connect?: ConfigurationItemWhereUniqueInput
  }

  export type SupportGroupCreateNestedOneWithoutOwnershipsInput = {
    create?: XOR<SupportGroupCreateWithoutOwnershipsInput, SupportGroupUncheckedCreateWithoutOwnershipsInput>
    connectOrCreate?: SupportGroupCreateOrConnectWithoutOwnershipsInput
    connect?: SupportGroupWhereUniqueInput
  }

  export type CiOwnershipUpdateresponsibilitiesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type ConfigurationItemUpdateOneRequiredWithoutOwnershipNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutOwnershipInput, ConfigurationItemUncheckedCreateWithoutOwnershipInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutOwnershipInput
    upsert?: ConfigurationItemUpsertWithoutOwnershipInput
    connect?: ConfigurationItemWhereUniqueInput
    update?: XOR<XOR<ConfigurationItemUpdateToOneWithWhereWithoutOwnershipInput, ConfigurationItemUpdateWithoutOwnershipInput>, ConfigurationItemUncheckedUpdateWithoutOwnershipInput>
  }

  export type SupportGroupUpdateOneWithoutOwnershipsNestedInput = {
    create?: XOR<SupportGroupCreateWithoutOwnershipsInput, SupportGroupUncheckedCreateWithoutOwnershipsInput>
    connectOrCreate?: SupportGroupCreateOrConnectWithoutOwnershipsInput
    upsert?: SupportGroupUpsertWithoutOwnershipsInput
    disconnect?: SupportGroupWhereInput | boolean
    delete?: SupportGroupWhereInput | boolean
    connect?: SupportGroupWhereUniqueInput
    update?: XOR<XOR<SupportGroupUpdateToOneWithWhereWithoutOwnershipsInput, SupportGroupUpdateWithoutOwnershipsInput>, SupportGroupUncheckedUpdateWithoutOwnershipsInput>
  }

  export type ConfigurationItemCreateNestedOneWithoutInventoryMappingInput = {
    create?: XOR<ConfigurationItemCreateWithoutInventoryMappingInput, ConfigurationItemUncheckedCreateWithoutInventoryMappingInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutInventoryMappingInput
    connect?: ConfigurationItemWhereUniqueInput
  }

  export type ConfigurationItemUpdateOneRequiredWithoutInventoryMappingNestedInput = {
    create?: XOR<ConfigurationItemCreateWithoutInventoryMappingInput, ConfigurationItemUncheckedCreateWithoutInventoryMappingInput>
    connectOrCreate?: ConfigurationItemCreateOrConnectWithoutInventoryMappingInput
    upsert?: ConfigurationItemUpsertWithoutInventoryMappingInput
    connect?: ConfigurationItemWhereUniqueInput
    update?: XOR<XOR<ConfigurationItemUpdateToOneWithWhereWithoutInventoryMappingInput, ConfigurationItemUpdateWithoutInventoryMappingInput>, ConfigurationItemUncheckedUpdateWithoutInventoryMappingInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type CiTypeCreateWithoutConfigurationItemsInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    category: string
    icon?: string | null
    color?: string | null
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: string | null
    allowedStatuses?: CiTypeCreateallowedStatusesInput | string[]
    discoveryEnabled?: boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    parentType?: CiTypeCreateNestedOneWithoutChildTypesInput
    childTypes?: CiTypeCreateNestedManyWithoutParentTypeInput
    allowedRelationships?: CiRelationshipTypeCreateNestedManyWithoutSourceCiTypeInput
    targetRelationships?: CiRelationshipTypeCreateNestedManyWithoutTargetCiTypeInput
  }

  export type CiTypeUncheckedCreateWithoutConfigurationItemsInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    category: string
    icon?: string | null
    color?: string | null
    parentTypeId?: string | null
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: string | null
    allowedStatuses?: CiTypeCreateallowedStatusesInput | string[]
    discoveryEnabled?: boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    childTypes?: CiTypeUncheckedCreateNestedManyWithoutParentTypeInput
    allowedRelationships?: CiRelationshipTypeUncheckedCreateNestedManyWithoutSourceCiTypeInput
    targetRelationships?: CiRelationshipTypeUncheckedCreateNestedManyWithoutTargetCiTypeInput
  }

  export type CiTypeCreateOrConnectWithoutConfigurationItemsInput = {
    where: CiTypeWhereUniqueInput
    create: XOR<CiTypeCreateWithoutConfigurationItemsInput, CiTypeUncheckedCreateWithoutConfigurationItemsInput>
  }

  export type CiRelationshipCreateWithoutSourceCiInput = {
    id?: string
    strength?: string | null
    criticality?: string | null
    description?: string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    discoveredDate?: Date | string | null
    isDiscovered?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    targetCi: ConfigurationItemCreateNestedOneWithoutIncomingRelationshipsInput
    relationshipType: CiRelationshipTypeCreateNestedOneWithoutRelationshipsInput
  }

  export type CiRelationshipUncheckedCreateWithoutSourceCiInput = {
    id?: string
    targetCiId: string
    relationshipTypeId: string
    strength?: string | null
    criticality?: string | null
    description?: string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    discoveredDate?: Date | string | null
    isDiscovered?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type CiRelationshipCreateOrConnectWithoutSourceCiInput = {
    where: CiRelationshipWhereUniqueInput
    create: XOR<CiRelationshipCreateWithoutSourceCiInput, CiRelationshipUncheckedCreateWithoutSourceCiInput>
  }

  export type CiRelationshipCreateManySourceCiInputEnvelope = {
    data: CiRelationshipCreateManySourceCiInput | CiRelationshipCreateManySourceCiInput[]
    skipDuplicates?: boolean
  }

  export type CiRelationshipCreateWithoutTargetCiInput = {
    id?: string
    strength?: string | null
    criticality?: string | null
    description?: string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    discoveredDate?: Date | string | null
    isDiscovered?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    sourceCi: ConfigurationItemCreateNestedOneWithoutOutgoingRelationshipsInput
    relationshipType: CiRelationshipTypeCreateNestedOneWithoutRelationshipsInput
  }

  export type CiRelationshipUncheckedCreateWithoutTargetCiInput = {
    id?: string
    sourceCiId: string
    relationshipTypeId: string
    strength?: string | null
    criticality?: string | null
    description?: string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    discoveredDate?: Date | string | null
    isDiscovered?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type CiRelationshipCreateOrConnectWithoutTargetCiInput = {
    where: CiRelationshipWhereUniqueInput
    create: XOR<CiRelationshipCreateWithoutTargetCiInput, CiRelationshipUncheckedCreateWithoutTargetCiInput>
  }

  export type CiRelationshipCreateManyTargetCiInputEnvelope = {
    data: CiRelationshipCreateManyTargetCiInput | CiRelationshipCreateManyTargetCiInput[]
    skipDuplicates?: boolean
  }

  export type CiIncidentCreateWithoutConfigurationItemInput = {
    incidentId: string
    relationshipType: string
    createdAt?: Date | string
  }

  export type CiIncidentUncheckedCreateWithoutConfigurationItemInput = {
    incidentId: string
    relationshipType: string
    createdAt?: Date | string
  }

  export type CiIncidentCreateOrConnectWithoutConfigurationItemInput = {
    where: CiIncidentWhereUniqueInput
    create: XOR<CiIncidentCreateWithoutConfigurationItemInput, CiIncidentUncheckedCreateWithoutConfigurationItemInput>
  }

  export type CiIncidentCreateManyConfigurationItemInputEnvelope = {
    data: CiIncidentCreateManyConfigurationItemInput | CiIncidentCreateManyConfigurationItemInput[]
    skipDuplicates?: boolean
  }

  export type CiChangeCreateWithoutConfigurationItemInput = {
    changeId: string
    relationshipType: string
    createdAt?: Date | string
  }

  export type CiChangeUncheckedCreateWithoutConfigurationItemInput = {
    changeId: string
    relationshipType: string
    createdAt?: Date | string
  }

  export type CiChangeCreateOrConnectWithoutConfigurationItemInput = {
    where: CiChangeWhereUniqueInput
    create: XOR<CiChangeCreateWithoutConfigurationItemInput, CiChangeUncheckedCreateWithoutConfigurationItemInput>
  }

  export type CiChangeCreateManyConfigurationItemInputEnvelope = {
    data: CiChangeCreateManyConfigurationItemInput | CiChangeCreateManyConfigurationItemInput[]
    skipDuplicates?: boolean
  }

  export type CiBusinessServiceCreateWithoutConfigurationItemInput = {
    relationshipType: string
    criticality?: string | null
    createdAt?: Date | string
    businessService: BusinessServiceCreateNestedOneWithoutConfigurationItemsInput
  }

  export type CiBusinessServiceUncheckedCreateWithoutConfigurationItemInput = {
    businessServiceId: string
    relationshipType: string
    criticality?: string | null
    createdAt?: Date | string
  }

  export type CiBusinessServiceCreateOrConnectWithoutConfigurationItemInput = {
    where: CiBusinessServiceWhereUniqueInput
    create: XOR<CiBusinessServiceCreateWithoutConfigurationItemInput, CiBusinessServiceUncheckedCreateWithoutConfigurationItemInput>
  }

  export type CiBusinessServiceCreateManyConfigurationItemInputEnvelope = {
    data: CiBusinessServiceCreateManyConfigurationItemInput | CiBusinessServiceCreateManyConfigurationItemInput[]
    skipDuplicates?: boolean
  }

  export type CiOwnershipCreateWithoutConfigurationItemInput = {
    id?: string
    ownershipType: string
    userId: string
    isPrimary?: boolean
    isActive?: boolean
    startDate?: Date | string | null
    endDate?: Date | string | null
    responsibilities?: CiOwnershipCreateresponsibilitiesInput | string[]
    assignedAt?: Date | string
    assignedBy?: string | null
    supportGroup?: SupportGroupCreateNestedOneWithoutOwnershipsInput
  }

  export type CiOwnershipUncheckedCreateWithoutConfigurationItemInput = {
    id?: string
    ownershipType: string
    userId: string
    supportGroupId?: string | null
    isPrimary?: boolean
    isActive?: boolean
    startDate?: Date | string | null
    endDate?: Date | string | null
    responsibilities?: CiOwnershipCreateresponsibilitiesInput | string[]
    assignedAt?: Date | string
    assignedBy?: string | null
  }

  export type CiOwnershipCreateOrConnectWithoutConfigurationItemInput = {
    where: CiOwnershipWhereUniqueInput
    create: XOR<CiOwnershipCreateWithoutConfigurationItemInput, CiOwnershipUncheckedCreateWithoutConfigurationItemInput>
  }

  export type CiOwnershipCreateManyConfigurationItemInputEnvelope = {
    data: CiOwnershipCreateManyConfigurationItemInput | CiOwnershipCreateManyConfigurationItemInput[]
    skipDuplicates?: boolean
  }

  export type CmdbInventoryMappingCreateWithoutConfigurationItemInput = {
    id?: string
    inventoryAssetId: number
    mappingType: string
    relationship?: string | null
    syncEnabled?: boolean
    lastSyncAt?: Date | string | null
    syncStatus?: string | null
    syncErrors?: string | null
    conflictResolution?: string
    fieldMapping?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type CmdbInventoryMappingUncheckedCreateWithoutConfigurationItemInput = {
    id?: string
    inventoryAssetId: number
    mappingType: string
    relationship?: string | null
    syncEnabled?: boolean
    lastSyncAt?: Date | string | null
    syncStatus?: string | null
    syncErrors?: string | null
    conflictResolution?: string
    fieldMapping?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type CmdbInventoryMappingCreateOrConnectWithoutConfigurationItemInput = {
    where: CmdbInventoryMappingWhereUniqueInput
    create: XOR<CmdbInventoryMappingCreateWithoutConfigurationItemInput, CmdbInventoryMappingUncheckedCreateWithoutConfigurationItemInput>
  }

  export type CmdbInventoryMappingCreateManyConfigurationItemInputEnvelope = {
    data: CmdbInventoryMappingCreateManyConfigurationItemInput | CmdbInventoryMappingCreateManyConfigurationItemInput[]
    skipDuplicates?: boolean
  }

  export type SupportGroupCreateWithoutConfigurationItemsInput = {
    id?: string
    name: string
    description?: string | null
    type?: string
    email?: string | null
    phone?: string | null
    manager?: string | null
    isActive?: boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: number | null
    externalId?: string | null
    adGroupDn?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    members?: SupportGroupMemberCreateNestedManyWithoutSupportGroupInput
    permissions?: SupportGroupPermissionCreateNestedManyWithoutSupportGroupInput
    ownerships?: CiOwnershipCreateNestedManyWithoutSupportGroupInput
    escalationTarget?: SupportGroupCreateNestedManyWithoutEscalationSourceInput
    escalationSource?: SupportGroupCreateNestedOneWithoutEscalationTargetInput
  }

  export type SupportGroupUncheckedCreateWithoutConfigurationItemsInput = {
    id?: string
    name: string
    description?: string | null
    type?: string
    email?: string | null
    phone?: string | null
    manager?: string | null
    escalationGroup?: string | null
    isActive?: boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: number | null
    externalId?: string | null
    adGroupDn?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    members?: SupportGroupMemberUncheckedCreateNestedManyWithoutSupportGroupInput
    permissions?: SupportGroupPermissionUncheckedCreateNestedManyWithoutSupportGroupInput
    ownerships?: CiOwnershipUncheckedCreateNestedManyWithoutSupportGroupInput
    escalationTarget?: SupportGroupUncheckedCreateNestedManyWithoutEscalationSourceInput
  }

  export type SupportGroupCreateOrConnectWithoutConfigurationItemsInput = {
    where: SupportGroupWhereUniqueInput
    create: XOR<SupportGroupCreateWithoutConfigurationItemsInput, SupportGroupUncheckedCreateWithoutConfigurationItemsInput>
  }

  export type HardwareCiCreateWithoutConfigurationItemInput = {
    processorType?: string | null
    processorSpeed?: string | null
    coreCount?: number | null
    memorySize?: string | null
    storageSize?: string | null
    storageType?: string | null
    macAddress?: string | null
    ipAddress?: string | null
    portCount?: number | null
    formFactor?: string | null
    dimensions?: string | null
    weight?: string | null
    powerRequirements?: string | null
  }

  export type HardwareCiUncheckedCreateWithoutConfigurationItemInput = {
    processorType?: string | null
    processorSpeed?: string | null
    coreCount?: number | null
    memorySize?: string | null
    storageSize?: string | null
    storageType?: string | null
    macAddress?: string | null
    ipAddress?: string | null
    portCount?: number | null
    formFactor?: string | null
    dimensions?: string | null
    weight?: string | null
    powerRequirements?: string | null
  }

  export type HardwareCiCreateOrConnectWithoutConfigurationItemInput = {
    where: HardwareCiWhereUniqueInput
    create: XOR<HardwareCiCreateWithoutConfigurationItemInput, HardwareCiUncheckedCreateWithoutConfigurationItemInput>
  }

  export type SoftwareCiCreateWithoutConfigurationItemInput = {
    version?: string | null
    edition?: string | null
    architecture?: string | null
    licenseType?: string | null
    licenseKey?: string | null
    licenseCount?: number | null
    installPath?: string | null
    installDate?: Date | string | null
    installedBy?: string | null
    isLatestVersion?: boolean | null
    patchLevel?: string | null
    supportEndDate?: Date | string | null
  }

  export type SoftwareCiUncheckedCreateWithoutConfigurationItemInput = {
    version?: string | null
    edition?: string | null
    architecture?: string | null
    licenseType?: string | null
    licenseKey?: string | null
    licenseCount?: number | null
    installPath?: string | null
    installDate?: Date | string | null
    installedBy?: string | null
    isLatestVersion?: boolean | null
    patchLevel?: string | null
    supportEndDate?: Date | string | null
  }

  export type SoftwareCiCreateOrConnectWithoutConfigurationItemInput = {
    where: SoftwareCiWhereUniqueInput
    create: XOR<SoftwareCiCreateWithoutConfigurationItemInput, SoftwareCiUncheckedCreateWithoutConfigurationItemInput>
  }

  export type ApplicationCiCreateWithoutConfigurationItemInput = {
    applicationUrl?: string | null
    applicationPort?: number | null
    applicationProtocol?: string | null
    businessFunction?: string | null
    userCount?: number | null
    dataClassification?: string | null
    programmingLanguage?: string | null
    framework?: string | null
    databaseType?: string | null
    slaTarget?: string | null
    availabilityTarget?: Decimal | DecimalJsLike | number | string | null
  }

  export type ApplicationCiUncheckedCreateWithoutConfigurationItemInput = {
    applicationUrl?: string | null
    applicationPort?: number | null
    applicationProtocol?: string | null
    businessFunction?: string | null
    userCount?: number | null
    dataClassification?: string | null
    programmingLanguage?: string | null
    framework?: string | null
    databaseType?: string | null
    slaTarget?: string | null
    availabilityTarget?: Decimal | DecimalJsLike | number | string | null
  }

  export type ApplicationCiCreateOrConnectWithoutConfigurationItemInput = {
    where: ApplicationCiWhereUniqueInput
    create: XOR<ApplicationCiCreateWithoutConfigurationItemInput, ApplicationCiUncheckedCreateWithoutConfigurationItemInput>
  }

  export type NetworkCiCreateWithoutConfigurationItemInput = {
    ipAddress?: string | null
    subnetMask?: string | null
    gateway?: string | null
    vlanId?: string | null
    portConfiguration?: NullableJsonNullValueInput | InputJsonValue
    routingTable?: NullableJsonNullValueInput | InputJsonValue
    firewallRules?: NullableJsonNullValueInput | InputJsonValue
  }

  export type NetworkCiUncheckedCreateWithoutConfigurationItemInput = {
    ipAddress?: string | null
    subnetMask?: string | null
    gateway?: string | null
    vlanId?: string | null
    portConfiguration?: NullableJsonNullValueInput | InputJsonValue
    routingTable?: NullableJsonNullValueInput | InputJsonValue
    firewallRules?: NullableJsonNullValueInput | InputJsonValue
  }

  export type NetworkCiCreateOrConnectWithoutConfigurationItemInput = {
    where: NetworkCiWhereUniqueInput
    create: XOR<NetworkCiCreateWithoutConfigurationItemInput, NetworkCiUncheckedCreateWithoutConfigurationItemInput>
  }

  export type ServiceCiCreateWithoutConfigurationItemInput = {
    serviceType?: string | null
    serviceLevel?: string | null
    businessOwner?: string | null
    slaDocument?: string | null
    availabilityTarget?: Decimal | DecimalJsLike | number | string | null
    performanceTarget?: string | null
    serviceHours?: NullableJsonNullValueInput | InputJsonValue
    maintenanceWindow?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ServiceCiUncheckedCreateWithoutConfigurationItemInput = {
    serviceType?: string | null
    serviceLevel?: string | null
    businessOwner?: string | null
    slaDocument?: string | null
    availabilityTarget?: Decimal | DecimalJsLike | number | string | null
    performanceTarget?: string | null
    serviceHours?: NullableJsonNullValueInput | InputJsonValue
    maintenanceWindow?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ServiceCiCreateOrConnectWithoutConfigurationItemInput = {
    where: ServiceCiWhereUniqueInput
    create: XOR<ServiceCiCreateWithoutConfigurationItemInput, ServiceCiUncheckedCreateWithoutConfigurationItemInput>
  }

  export type DatabaseCiCreateWithoutConfigurationItemInput = {
    databaseType?: string | null
    databaseVersion?: string | null
    databaseSize?: string | null
    connectionString?: string | null
    port?: number | null
    schemaCount?: number | null
    backupSchedule?: NullableJsonNullValueInput | InputJsonValue
    lastBackupDate?: Date | string | null
  }

  export type DatabaseCiUncheckedCreateWithoutConfigurationItemInput = {
    databaseType?: string | null
    databaseVersion?: string | null
    databaseSize?: string | null
    connectionString?: string | null
    port?: number | null
    schemaCount?: number | null
    backupSchedule?: NullableJsonNullValueInput | InputJsonValue
    lastBackupDate?: Date | string | null
  }

  export type DatabaseCiCreateOrConnectWithoutConfigurationItemInput = {
    where: DatabaseCiWhereUniqueInput
    create: XOR<DatabaseCiCreateWithoutConfigurationItemInput, DatabaseCiUncheckedCreateWithoutConfigurationItemInput>
  }

  export type VirtualCiCreateWithoutConfigurationItemInput = {
    hypervisorType?: string | null
    hostCiId?: string | null
    allocatedCpu?: number | null
    allocatedMemory?: string | null
    allocatedStorage?: string | null
    virtualNetworks?: NullableJsonNullValueInput | InputJsonValue
  }

  export type VirtualCiUncheckedCreateWithoutConfigurationItemInput = {
    hypervisorType?: string | null
    hostCiId?: string | null
    allocatedCpu?: number | null
    allocatedMemory?: string | null
    allocatedStorage?: string | null
    virtualNetworks?: NullableJsonNullValueInput | InputJsonValue
  }

  export type VirtualCiCreateOrConnectWithoutConfigurationItemInput = {
    where: VirtualCiWhereUniqueInput
    create: XOR<VirtualCiCreateWithoutConfigurationItemInput, VirtualCiUncheckedCreateWithoutConfigurationItemInput>
  }

  export type FacilityCiCreateWithoutConfigurationItemInput = {
    facilityType?: string | null
    address?: string | null
    coordinates?: string | null
    squareFootage?: number | null
    capacity?: number | null
    powerCapacity?: string | null
    coolingCapacity?: string | null
  }

  export type FacilityCiUncheckedCreateWithoutConfigurationItemInput = {
    facilityType?: string | null
    address?: string | null
    coordinates?: string | null
    squareFootage?: number | null
    capacity?: number | null
    powerCapacity?: string | null
    coolingCapacity?: string | null
  }

  export type FacilityCiCreateOrConnectWithoutConfigurationItemInput = {
    where: FacilityCiWhereUniqueInput
    create: XOR<FacilityCiCreateWithoutConfigurationItemInput, FacilityCiUncheckedCreateWithoutConfigurationItemInput>
  }

  export type CiTypeUpsertWithoutConfigurationItemsInput = {
    update: XOR<CiTypeUpdateWithoutConfigurationItemsInput, CiTypeUncheckedUpdateWithoutConfigurationItemsInput>
    create: XOR<CiTypeCreateWithoutConfigurationItemsInput, CiTypeUncheckedCreateWithoutConfigurationItemsInput>
    where?: CiTypeWhereInput
  }

  export type CiTypeUpdateToOneWithWhereWithoutConfigurationItemsInput = {
    where?: CiTypeWhereInput
    data: XOR<CiTypeUpdateWithoutConfigurationItemsInput, CiTypeUncheckedUpdateWithoutConfigurationItemsInput>
  }

  export type CiTypeUpdateWithoutConfigurationItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isAbstract?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: NullableStringFieldUpdateOperationsInput | string | null
    allowedStatuses?: CiTypeUpdateallowedStatusesInput | string[]
    discoveryEnabled?: BoolFieldUpdateOperationsInput | boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parentType?: CiTypeUpdateOneWithoutChildTypesNestedInput
    childTypes?: CiTypeUpdateManyWithoutParentTypeNestedInput
    allowedRelationships?: CiRelationshipTypeUpdateManyWithoutSourceCiTypeNestedInput
    targetRelationships?: CiRelationshipTypeUpdateManyWithoutTargetCiTypeNestedInput
  }

  export type CiTypeUncheckedUpdateWithoutConfigurationItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    parentTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    isAbstract?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: NullableStringFieldUpdateOperationsInput | string | null
    allowedStatuses?: CiTypeUpdateallowedStatusesInput | string[]
    discoveryEnabled?: BoolFieldUpdateOperationsInput | boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    childTypes?: CiTypeUncheckedUpdateManyWithoutParentTypeNestedInput
    allowedRelationships?: CiRelationshipTypeUncheckedUpdateManyWithoutSourceCiTypeNestedInput
    targetRelationships?: CiRelationshipTypeUncheckedUpdateManyWithoutTargetCiTypeNestedInput
  }

  export type CiRelationshipUpsertWithWhereUniqueWithoutSourceCiInput = {
    where: CiRelationshipWhereUniqueInput
    update: XOR<CiRelationshipUpdateWithoutSourceCiInput, CiRelationshipUncheckedUpdateWithoutSourceCiInput>
    create: XOR<CiRelationshipCreateWithoutSourceCiInput, CiRelationshipUncheckedCreateWithoutSourceCiInput>
  }

  export type CiRelationshipUpdateWithWhereUniqueWithoutSourceCiInput = {
    where: CiRelationshipWhereUniqueInput
    data: XOR<CiRelationshipUpdateWithoutSourceCiInput, CiRelationshipUncheckedUpdateWithoutSourceCiInput>
  }

  export type CiRelationshipUpdateManyWithWhereWithoutSourceCiInput = {
    where: CiRelationshipScalarWhereInput
    data: XOR<CiRelationshipUpdateManyMutationInput, CiRelationshipUncheckedUpdateManyWithoutSourceCiInput>
  }

  export type CiRelationshipScalarWhereInput = {
    AND?: CiRelationshipScalarWhereInput | CiRelationshipScalarWhereInput[]
    OR?: CiRelationshipScalarWhereInput[]
    NOT?: CiRelationshipScalarWhereInput | CiRelationshipScalarWhereInput[]
    id?: StringFilter<"CiRelationship"> | string
    sourceCiId?: StringFilter<"CiRelationship"> | string
    targetCiId?: StringFilter<"CiRelationship"> | string
    relationshipTypeId?: StringFilter<"CiRelationship"> | string
    strength?: StringNullableFilter<"CiRelationship"> | string | null
    criticality?: StringNullableFilter<"CiRelationship"> | string | null
    description?: StringNullableFilter<"CiRelationship"> | string | null
    attributes?: JsonNullableFilter<"CiRelationship">
    isActive?: BoolFilter<"CiRelationship"> | boolean
    validFrom?: DateTimeNullableFilter<"CiRelationship"> | Date | string | null
    validTo?: DateTimeNullableFilter<"CiRelationship"> | Date | string | null
    discoveredDate?: DateTimeNullableFilter<"CiRelationship"> | Date | string | null
    isDiscovered?: BoolFilter<"CiRelationship"> | boolean
    createdAt?: DateTimeFilter<"CiRelationship"> | Date | string
    updatedAt?: DateTimeFilter<"CiRelationship"> | Date | string
    createdBy?: StringNullableFilter<"CiRelationship"> | string | null
  }

  export type CiRelationshipUpsertWithWhereUniqueWithoutTargetCiInput = {
    where: CiRelationshipWhereUniqueInput
    update: XOR<CiRelationshipUpdateWithoutTargetCiInput, CiRelationshipUncheckedUpdateWithoutTargetCiInput>
    create: XOR<CiRelationshipCreateWithoutTargetCiInput, CiRelationshipUncheckedCreateWithoutTargetCiInput>
  }

  export type CiRelationshipUpdateWithWhereUniqueWithoutTargetCiInput = {
    where: CiRelationshipWhereUniqueInput
    data: XOR<CiRelationshipUpdateWithoutTargetCiInput, CiRelationshipUncheckedUpdateWithoutTargetCiInput>
  }

  export type CiRelationshipUpdateManyWithWhereWithoutTargetCiInput = {
    where: CiRelationshipScalarWhereInput
    data: XOR<CiRelationshipUpdateManyMutationInput, CiRelationshipUncheckedUpdateManyWithoutTargetCiInput>
  }

  export type CiIncidentUpsertWithWhereUniqueWithoutConfigurationItemInput = {
    where: CiIncidentWhereUniqueInput
    update: XOR<CiIncidentUpdateWithoutConfigurationItemInput, CiIncidentUncheckedUpdateWithoutConfigurationItemInput>
    create: XOR<CiIncidentCreateWithoutConfigurationItemInput, CiIncidentUncheckedCreateWithoutConfigurationItemInput>
  }

  export type CiIncidentUpdateWithWhereUniqueWithoutConfigurationItemInput = {
    where: CiIncidentWhereUniqueInput
    data: XOR<CiIncidentUpdateWithoutConfigurationItemInput, CiIncidentUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type CiIncidentUpdateManyWithWhereWithoutConfigurationItemInput = {
    where: CiIncidentScalarWhereInput
    data: XOR<CiIncidentUpdateManyMutationInput, CiIncidentUncheckedUpdateManyWithoutConfigurationItemInput>
  }

  export type CiIncidentScalarWhereInput = {
    AND?: CiIncidentScalarWhereInput | CiIncidentScalarWhereInput[]
    OR?: CiIncidentScalarWhereInput[]
    NOT?: CiIncidentScalarWhereInput | CiIncidentScalarWhereInput[]
    ciId?: StringFilter<"CiIncident"> | string
    incidentId?: StringFilter<"CiIncident"> | string
    relationshipType?: StringFilter<"CiIncident"> | string
    createdAt?: DateTimeFilter<"CiIncident"> | Date | string
  }

  export type CiChangeUpsertWithWhereUniqueWithoutConfigurationItemInput = {
    where: CiChangeWhereUniqueInput
    update: XOR<CiChangeUpdateWithoutConfigurationItemInput, CiChangeUncheckedUpdateWithoutConfigurationItemInput>
    create: XOR<CiChangeCreateWithoutConfigurationItemInput, CiChangeUncheckedCreateWithoutConfigurationItemInput>
  }

  export type CiChangeUpdateWithWhereUniqueWithoutConfigurationItemInput = {
    where: CiChangeWhereUniqueInput
    data: XOR<CiChangeUpdateWithoutConfigurationItemInput, CiChangeUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type CiChangeUpdateManyWithWhereWithoutConfigurationItemInput = {
    where: CiChangeScalarWhereInput
    data: XOR<CiChangeUpdateManyMutationInput, CiChangeUncheckedUpdateManyWithoutConfigurationItemInput>
  }

  export type CiChangeScalarWhereInput = {
    AND?: CiChangeScalarWhereInput | CiChangeScalarWhereInput[]
    OR?: CiChangeScalarWhereInput[]
    NOT?: CiChangeScalarWhereInput | CiChangeScalarWhereInput[]
    ciId?: StringFilter<"CiChange"> | string
    changeId?: StringFilter<"CiChange"> | string
    relationshipType?: StringFilter<"CiChange"> | string
    createdAt?: DateTimeFilter<"CiChange"> | Date | string
  }

  export type CiBusinessServiceUpsertWithWhereUniqueWithoutConfigurationItemInput = {
    where: CiBusinessServiceWhereUniqueInput
    update: XOR<CiBusinessServiceUpdateWithoutConfigurationItemInput, CiBusinessServiceUncheckedUpdateWithoutConfigurationItemInput>
    create: XOR<CiBusinessServiceCreateWithoutConfigurationItemInput, CiBusinessServiceUncheckedCreateWithoutConfigurationItemInput>
  }

  export type CiBusinessServiceUpdateWithWhereUniqueWithoutConfigurationItemInput = {
    where: CiBusinessServiceWhereUniqueInput
    data: XOR<CiBusinessServiceUpdateWithoutConfigurationItemInput, CiBusinessServiceUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type CiBusinessServiceUpdateManyWithWhereWithoutConfigurationItemInput = {
    where: CiBusinessServiceScalarWhereInput
    data: XOR<CiBusinessServiceUpdateManyMutationInput, CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemInput>
  }

  export type CiBusinessServiceScalarWhereInput = {
    AND?: CiBusinessServiceScalarWhereInput | CiBusinessServiceScalarWhereInput[]
    OR?: CiBusinessServiceScalarWhereInput[]
    NOT?: CiBusinessServiceScalarWhereInput | CiBusinessServiceScalarWhereInput[]
    ciId?: StringFilter<"CiBusinessService"> | string
    businessServiceId?: StringFilter<"CiBusinessService"> | string
    relationshipType?: StringFilter<"CiBusinessService"> | string
    criticality?: StringNullableFilter<"CiBusinessService"> | string | null
    createdAt?: DateTimeFilter<"CiBusinessService"> | Date | string
  }

  export type CiOwnershipUpsertWithWhereUniqueWithoutConfigurationItemInput = {
    where: CiOwnershipWhereUniqueInput
    update: XOR<CiOwnershipUpdateWithoutConfigurationItemInput, CiOwnershipUncheckedUpdateWithoutConfigurationItemInput>
    create: XOR<CiOwnershipCreateWithoutConfigurationItemInput, CiOwnershipUncheckedCreateWithoutConfigurationItemInput>
  }

  export type CiOwnershipUpdateWithWhereUniqueWithoutConfigurationItemInput = {
    where: CiOwnershipWhereUniqueInput
    data: XOR<CiOwnershipUpdateWithoutConfigurationItemInput, CiOwnershipUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type CiOwnershipUpdateManyWithWhereWithoutConfigurationItemInput = {
    where: CiOwnershipScalarWhereInput
    data: XOR<CiOwnershipUpdateManyMutationInput, CiOwnershipUncheckedUpdateManyWithoutConfigurationItemInput>
  }

  export type CiOwnershipScalarWhereInput = {
    AND?: CiOwnershipScalarWhereInput | CiOwnershipScalarWhereInput[]
    OR?: CiOwnershipScalarWhereInput[]
    NOT?: CiOwnershipScalarWhereInput | CiOwnershipScalarWhereInput[]
    id?: StringFilter<"CiOwnership"> | string
    ciId?: StringFilter<"CiOwnership"> | string
    ownershipType?: StringFilter<"CiOwnership"> | string
    userId?: StringFilter<"CiOwnership"> | string
    supportGroupId?: StringNullableFilter<"CiOwnership"> | string | null
    isPrimary?: BoolFilter<"CiOwnership"> | boolean
    isActive?: BoolFilter<"CiOwnership"> | boolean
    startDate?: DateTimeNullableFilter<"CiOwnership"> | Date | string | null
    endDate?: DateTimeNullableFilter<"CiOwnership"> | Date | string | null
    responsibilities?: StringNullableListFilter<"CiOwnership">
    assignedAt?: DateTimeFilter<"CiOwnership"> | Date | string
    assignedBy?: StringNullableFilter<"CiOwnership"> | string | null
  }

  export type CmdbInventoryMappingUpsertWithWhereUniqueWithoutConfigurationItemInput = {
    where: CmdbInventoryMappingWhereUniqueInput
    update: XOR<CmdbInventoryMappingUpdateWithoutConfigurationItemInput, CmdbInventoryMappingUncheckedUpdateWithoutConfigurationItemInput>
    create: XOR<CmdbInventoryMappingCreateWithoutConfigurationItemInput, CmdbInventoryMappingUncheckedCreateWithoutConfigurationItemInput>
  }

  export type CmdbInventoryMappingUpdateWithWhereUniqueWithoutConfigurationItemInput = {
    where: CmdbInventoryMappingWhereUniqueInput
    data: XOR<CmdbInventoryMappingUpdateWithoutConfigurationItemInput, CmdbInventoryMappingUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type CmdbInventoryMappingUpdateManyWithWhereWithoutConfigurationItemInput = {
    where: CmdbInventoryMappingScalarWhereInput
    data: XOR<CmdbInventoryMappingUpdateManyMutationInput, CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemInput>
  }

  export type CmdbInventoryMappingScalarWhereInput = {
    AND?: CmdbInventoryMappingScalarWhereInput | CmdbInventoryMappingScalarWhereInput[]
    OR?: CmdbInventoryMappingScalarWhereInput[]
    NOT?: CmdbInventoryMappingScalarWhereInput | CmdbInventoryMappingScalarWhereInput[]
    id?: StringFilter<"CmdbInventoryMapping"> | string
    ciId?: StringFilter<"CmdbInventoryMapping"> | string
    inventoryAssetId?: IntFilter<"CmdbInventoryMapping"> | number
    mappingType?: StringFilter<"CmdbInventoryMapping"> | string
    relationship?: StringNullableFilter<"CmdbInventoryMapping"> | string | null
    syncEnabled?: BoolFilter<"CmdbInventoryMapping"> | boolean
    lastSyncAt?: DateTimeNullableFilter<"CmdbInventoryMapping"> | Date | string | null
    syncStatus?: StringNullableFilter<"CmdbInventoryMapping"> | string | null
    syncErrors?: StringNullableFilter<"CmdbInventoryMapping"> | string | null
    conflictResolution?: StringFilter<"CmdbInventoryMapping"> | string
    fieldMapping?: JsonNullableFilter<"CmdbInventoryMapping">
    createdAt?: DateTimeFilter<"CmdbInventoryMapping"> | Date | string
    updatedAt?: DateTimeFilter<"CmdbInventoryMapping"> | Date | string
    createdBy?: StringNullableFilter<"CmdbInventoryMapping"> | string | null
  }

  export type SupportGroupUpsertWithWhereUniqueWithoutConfigurationItemsInput = {
    where: SupportGroupWhereUniqueInput
    update: XOR<SupportGroupUpdateWithoutConfigurationItemsInput, SupportGroupUncheckedUpdateWithoutConfigurationItemsInput>
    create: XOR<SupportGroupCreateWithoutConfigurationItemsInput, SupportGroupUncheckedCreateWithoutConfigurationItemsInput>
  }

  export type SupportGroupUpdateWithWhereUniqueWithoutConfigurationItemsInput = {
    where: SupportGroupWhereUniqueInput
    data: XOR<SupportGroupUpdateWithoutConfigurationItemsInput, SupportGroupUncheckedUpdateWithoutConfigurationItemsInput>
  }

  export type SupportGroupUpdateManyWithWhereWithoutConfigurationItemsInput = {
    where: SupportGroupScalarWhereInput
    data: XOR<SupportGroupUpdateManyMutationInput, SupportGroupUncheckedUpdateManyWithoutConfigurationItemsInput>
  }

  export type SupportGroupScalarWhereInput = {
    AND?: SupportGroupScalarWhereInput | SupportGroupScalarWhereInput[]
    OR?: SupportGroupScalarWhereInput[]
    NOT?: SupportGroupScalarWhereInput | SupportGroupScalarWhereInput[]
    id?: StringFilter<"SupportGroup"> | string
    name?: StringFilter<"SupportGroup"> | string
    description?: StringNullableFilter<"SupportGroup"> | string | null
    type?: StringFilter<"SupportGroup"> | string
    email?: StringNullableFilter<"SupportGroup"> | string | null
    phone?: StringNullableFilter<"SupportGroup"> | string | null
    manager?: StringNullableFilter<"SupportGroup"> | string | null
    escalationGroup?: StringNullableFilter<"SupportGroup"> | string | null
    isActive?: BoolFilter<"SupportGroup"> | boolean
    businessHours?: JsonNullableFilter<"SupportGroup">
    slaTarget?: IntNullableFilter<"SupportGroup"> | number | null
    externalId?: StringNullableFilter<"SupportGroup"> | string | null
    adGroupDn?: StringNullableFilter<"SupportGroup"> | string | null
    createdAt?: DateTimeFilter<"SupportGroup"> | Date | string
    updatedAt?: DateTimeFilter<"SupportGroup"> | Date | string
    createdBy?: StringNullableFilter<"SupportGroup"> | string | null
    updatedBy?: StringNullableFilter<"SupportGroup"> | string | null
  }

  export type HardwareCiUpsertWithoutConfigurationItemInput = {
    update: XOR<HardwareCiUpdateWithoutConfigurationItemInput, HardwareCiUncheckedUpdateWithoutConfigurationItemInput>
    create: XOR<HardwareCiCreateWithoutConfigurationItemInput, HardwareCiUncheckedCreateWithoutConfigurationItemInput>
    where?: HardwareCiWhereInput
  }

  export type HardwareCiUpdateToOneWithWhereWithoutConfigurationItemInput = {
    where?: HardwareCiWhereInput
    data: XOR<HardwareCiUpdateWithoutConfigurationItemInput, HardwareCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type HardwareCiUpdateWithoutConfigurationItemInput = {
    processorType?: NullableStringFieldUpdateOperationsInput | string | null
    processorSpeed?: NullableStringFieldUpdateOperationsInput | string | null
    coreCount?: NullableIntFieldUpdateOperationsInput | number | null
    memorySize?: NullableStringFieldUpdateOperationsInput | string | null
    storageSize?: NullableStringFieldUpdateOperationsInput | string | null
    storageType?: NullableStringFieldUpdateOperationsInput | string | null
    macAddress?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    portCount?: NullableIntFieldUpdateOperationsInput | number | null
    formFactor?: NullableStringFieldUpdateOperationsInput | string | null
    dimensions?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    powerRequirements?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HardwareCiUncheckedUpdateWithoutConfigurationItemInput = {
    processorType?: NullableStringFieldUpdateOperationsInput | string | null
    processorSpeed?: NullableStringFieldUpdateOperationsInput | string | null
    coreCount?: NullableIntFieldUpdateOperationsInput | number | null
    memorySize?: NullableStringFieldUpdateOperationsInput | string | null
    storageSize?: NullableStringFieldUpdateOperationsInput | string | null
    storageType?: NullableStringFieldUpdateOperationsInput | string | null
    macAddress?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    portCount?: NullableIntFieldUpdateOperationsInput | number | null
    formFactor?: NullableStringFieldUpdateOperationsInput | string | null
    dimensions?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    powerRequirements?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SoftwareCiUpsertWithoutConfigurationItemInput = {
    update: XOR<SoftwareCiUpdateWithoutConfigurationItemInput, SoftwareCiUncheckedUpdateWithoutConfigurationItemInput>
    create: XOR<SoftwareCiCreateWithoutConfigurationItemInput, SoftwareCiUncheckedCreateWithoutConfigurationItemInput>
    where?: SoftwareCiWhereInput
  }

  export type SoftwareCiUpdateToOneWithWhereWithoutConfigurationItemInput = {
    where?: SoftwareCiWhereInput
    data: XOR<SoftwareCiUpdateWithoutConfigurationItemInput, SoftwareCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type SoftwareCiUpdateWithoutConfigurationItemInput = {
    version?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    architecture?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    licenseKey?: NullableStringFieldUpdateOperationsInput | string | null
    licenseCount?: NullableIntFieldUpdateOperationsInput | number | null
    installPath?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    installedBy?: NullableStringFieldUpdateOperationsInput | string | null
    isLatestVersion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    patchLevel?: NullableStringFieldUpdateOperationsInput | string | null
    supportEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SoftwareCiUncheckedUpdateWithoutConfigurationItemInput = {
    version?: NullableStringFieldUpdateOperationsInput | string | null
    edition?: NullableStringFieldUpdateOperationsInput | string | null
    architecture?: NullableStringFieldUpdateOperationsInput | string | null
    licenseType?: NullableStringFieldUpdateOperationsInput | string | null
    licenseKey?: NullableStringFieldUpdateOperationsInput | string | null
    licenseCount?: NullableIntFieldUpdateOperationsInput | number | null
    installPath?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    installedBy?: NullableStringFieldUpdateOperationsInput | string | null
    isLatestVersion?: NullableBoolFieldUpdateOperationsInput | boolean | null
    patchLevel?: NullableStringFieldUpdateOperationsInput | string | null
    supportEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ApplicationCiUpsertWithoutConfigurationItemInput = {
    update: XOR<ApplicationCiUpdateWithoutConfigurationItemInput, ApplicationCiUncheckedUpdateWithoutConfigurationItemInput>
    create: XOR<ApplicationCiCreateWithoutConfigurationItemInput, ApplicationCiUncheckedCreateWithoutConfigurationItemInput>
    where?: ApplicationCiWhereInput
  }

  export type ApplicationCiUpdateToOneWithWhereWithoutConfigurationItemInput = {
    where?: ApplicationCiWhereInput
    data: XOR<ApplicationCiUpdateWithoutConfigurationItemInput, ApplicationCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type ApplicationCiUpdateWithoutConfigurationItemInput = {
    applicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    applicationPort?: NullableIntFieldUpdateOperationsInput | number | null
    applicationProtocol?: NullableStringFieldUpdateOperationsInput | string | null
    businessFunction?: NullableStringFieldUpdateOperationsInput | string | null
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    dataClassification?: NullableStringFieldUpdateOperationsInput | string | null
    programmingLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    framework?: NullableStringFieldUpdateOperationsInput | string | null
    databaseType?: NullableStringFieldUpdateOperationsInput | string | null
    slaTarget?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type ApplicationCiUncheckedUpdateWithoutConfigurationItemInput = {
    applicationUrl?: NullableStringFieldUpdateOperationsInput | string | null
    applicationPort?: NullableIntFieldUpdateOperationsInput | number | null
    applicationProtocol?: NullableStringFieldUpdateOperationsInput | string | null
    businessFunction?: NullableStringFieldUpdateOperationsInput | string | null
    userCount?: NullableIntFieldUpdateOperationsInput | number | null
    dataClassification?: NullableStringFieldUpdateOperationsInput | string | null
    programmingLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    framework?: NullableStringFieldUpdateOperationsInput | string | null
    databaseType?: NullableStringFieldUpdateOperationsInput | string | null
    slaTarget?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type NetworkCiUpsertWithoutConfigurationItemInput = {
    update: XOR<NetworkCiUpdateWithoutConfigurationItemInput, NetworkCiUncheckedUpdateWithoutConfigurationItemInput>
    create: XOR<NetworkCiCreateWithoutConfigurationItemInput, NetworkCiUncheckedCreateWithoutConfigurationItemInput>
    where?: NetworkCiWhereInput
  }

  export type NetworkCiUpdateToOneWithWhereWithoutConfigurationItemInput = {
    where?: NetworkCiWhereInput
    data: XOR<NetworkCiUpdateWithoutConfigurationItemInput, NetworkCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type NetworkCiUpdateWithoutConfigurationItemInput = {
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subnetMask?: NullableStringFieldUpdateOperationsInput | string | null
    gateway?: NullableStringFieldUpdateOperationsInput | string | null
    vlanId?: NullableStringFieldUpdateOperationsInput | string | null
    portConfiguration?: NullableJsonNullValueInput | InputJsonValue
    routingTable?: NullableJsonNullValueInput | InputJsonValue
    firewallRules?: NullableJsonNullValueInput | InputJsonValue
  }

  export type NetworkCiUncheckedUpdateWithoutConfigurationItemInput = {
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    subnetMask?: NullableStringFieldUpdateOperationsInput | string | null
    gateway?: NullableStringFieldUpdateOperationsInput | string | null
    vlanId?: NullableStringFieldUpdateOperationsInput | string | null
    portConfiguration?: NullableJsonNullValueInput | InputJsonValue
    routingTable?: NullableJsonNullValueInput | InputJsonValue
    firewallRules?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ServiceCiUpsertWithoutConfigurationItemInput = {
    update: XOR<ServiceCiUpdateWithoutConfigurationItemInput, ServiceCiUncheckedUpdateWithoutConfigurationItemInput>
    create: XOR<ServiceCiCreateWithoutConfigurationItemInput, ServiceCiUncheckedCreateWithoutConfigurationItemInput>
    where?: ServiceCiWhereInput
  }

  export type ServiceCiUpdateToOneWithWhereWithoutConfigurationItemInput = {
    where?: ServiceCiWhereInput
    data: XOR<ServiceCiUpdateWithoutConfigurationItemInput, ServiceCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type ServiceCiUpdateWithoutConfigurationItemInput = {
    serviceType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceLevel?: NullableStringFieldUpdateOperationsInput | string | null
    businessOwner?: NullableStringFieldUpdateOperationsInput | string | null
    slaDocument?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: NullableStringFieldUpdateOperationsInput | string | null
    serviceHours?: NullableJsonNullValueInput | InputJsonValue
    maintenanceWindow?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ServiceCiUncheckedUpdateWithoutConfigurationItemInput = {
    serviceType?: NullableStringFieldUpdateOperationsInput | string | null
    serviceLevel?: NullableStringFieldUpdateOperationsInput | string | null
    businessOwner?: NullableStringFieldUpdateOperationsInput | string | null
    slaDocument?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: NullableStringFieldUpdateOperationsInput | string | null
    serviceHours?: NullableJsonNullValueInput | InputJsonValue
    maintenanceWindow?: NullableJsonNullValueInput | InputJsonValue
  }

  export type DatabaseCiUpsertWithoutConfigurationItemInput = {
    update: XOR<DatabaseCiUpdateWithoutConfigurationItemInput, DatabaseCiUncheckedUpdateWithoutConfigurationItemInput>
    create: XOR<DatabaseCiCreateWithoutConfigurationItemInput, DatabaseCiUncheckedCreateWithoutConfigurationItemInput>
    where?: DatabaseCiWhereInput
  }

  export type DatabaseCiUpdateToOneWithWhereWithoutConfigurationItemInput = {
    where?: DatabaseCiWhereInput
    data: XOR<DatabaseCiUpdateWithoutConfigurationItemInput, DatabaseCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type DatabaseCiUpdateWithoutConfigurationItemInput = {
    databaseType?: NullableStringFieldUpdateOperationsInput | string | null
    databaseVersion?: NullableStringFieldUpdateOperationsInput | string | null
    databaseSize?: NullableStringFieldUpdateOperationsInput | string | null
    connectionString?: NullableStringFieldUpdateOperationsInput | string | null
    port?: NullableIntFieldUpdateOperationsInput | number | null
    schemaCount?: NullableIntFieldUpdateOperationsInput | number | null
    backupSchedule?: NullableJsonNullValueInput | InputJsonValue
    lastBackupDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DatabaseCiUncheckedUpdateWithoutConfigurationItemInput = {
    databaseType?: NullableStringFieldUpdateOperationsInput | string | null
    databaseVersion?: NullableStringFieldUpdateOperationsInput | string | null
    databaseSize?: NullableStringFieldUpdateOperationsInput | string | null
    connectionString?: NullableStringFieldUpdateOperationsInput | string | null
    port?: NullableIntFieldUpdateOperationsInput | number | null
    schemaCount?: NullableIntFieldUpdateOperationsInput | number | null
    backupSchedule?: NullableJsonNullValueInput | InputJsonValue
    lastBackupDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type VirtualCiUpsertWithoutConfigurationItemInput = {
    update: XOR<VirtualCiUpdateWithoutConfigurationItemInput, VirtualCiUncheckedUpdateWithoutConfigurationItemInput>
    create: XOR<VirtualCiCreateWithoutConfigurationItemInput, VirtualCiUncheckedCreateWithoutConfigurationItemInput>
    where?: VirtualCiWhereInput
  }

  export type VirtualCiUpdateToOneWithWhereWithoutConfigurationItemInput = {
    where?: VirtualCiWhereInput
    data: XOR<VirtualCiUpdateWithoutConfigurationItemInput, VirtualCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type VirtualCiUpdateWithoutConfigurationItemInput = {
    hypervisorType?: NullableStringFieldUpdateOperationsInput | string | null
    hostCiId?: NullableStringFieldUpdateOperationsInput | string | null
    allocatedCpu?: NullableIntFieldUpdateOperationsInput | number | null
    allocatedMemory?: NullableStringFieldUpdateOperationsInput | string | null
    allocatedStorage?: NullableStringFieldUpdateOperationsInput | string | null
    virtualNetworks?: NullableJsonNullValueInput | InputJsonValue
  }

  export type VirtualCiUncheckedUpdateWithoutConfigurationItemInput = {
    hypervisorType?: NullableStringFieldUpdateOperationsInput | string | null
    hostCiId?: NullableStringFieldUpdateOperationsInput | string | null
    allocatedCpu?: NullableIntFieldUpdateOperationsInput | number | null
    allocatedMemory?: NullableStringFieldUpdateOperationsInput | string | null
    allocatedStorage?: NullableStringFieldUpdateOperationsInput | string | null
    virtualNetworks?: NullableJsonNullValueInput | InputJsonValue
  }

  export type FacilityCiUpsertWithoutConfigurationItemInput = {
    update: XOR<FacilityCiUpdateWithoutConfigurationItemInput, FacilityCiUncheckedUpdateWithoutConfigurationItemInput>
    create: XOR<FacilityCiCreateWithoutConfigurationItemInput, FacilityCiUncheckedCreateWithoutConfigurationItemInput>
    where?: FacilityCiWhereInput
  }

  export type FacilityCiUpdateToOneWithWhereWithoutConfigurationItemInput = {
    where?: FacilityCiWhereInput
    data: XOR<FacilityCiUpdateWithoutConfigurationItemInput, FacilityCiUncheckedUpdateWithoutConfigurationItemInput>
  }

  export type FacilityCiUpdateWithoutConfigurationItemInput = {
    facilityType?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    coordinates?: NullableStringFieldUpdateOperationsInput | string | null
    squareFootage?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    powerCapacity?: NullableStringFieldUpdateOperationsInput | string | null
    coolingCapacity?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FacilityCiUncheckedUpdateWithoutConfigurationItemInput = {
    facilityType?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    coordinates?: NullableStringFieldUpdateOperationsInput | string | null
    squareFootage?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    powerCapacity?: NullableStringFieldUpdateOperationsInput | string | null
    coolingCapacity?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiTypeCreateWithoutChildTypesInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    category: string
    icon?: string | null
    color?: string | null
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: string | null
    allowedStatuses?: CiTypeCreateallowedStatusesInput | string[]
    discoveryEnabled?: boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    parentType?: CiTypeCreateNestedOneWithoutChildTypesInput
    configurationItems?: ConfigurationItemCreateNestedManyWithoutCiType_relInput
    allowedRelationships?: CiRelationshipTypeCreateNestedManyWithoutSourceCiTypeInput
    targetRelationships?: CiRelationshipTypeCreateNestedManyWithoutTargetCiTypeInput
  }

  export type CiTypeUncheckedCreateWithoutChildTypesInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    category: string
    icon?: string | null
    color?: string | null
    parentTypeId?: string | null
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: string | null
    allowedStatuses?: CiTypeCreateallowedStatusesInput | string[]
    discoveryEnabled?: boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    configurationItems?: ConfigurationItemUncheckedCreateNestedManyWithoutCiType_relInput
    allowedRelationships?: CiRelationshipTypeUncheckedCreateNestedManyWithoutSourceCiTypeInput
    targetRelationships?: CiRelationshipTypeUncheckedCreateNestedManyWithoutTargetCiTypeInput
  }

  export type CiTypeCreateOrConnectWithoutChildTypesInput = {
    where: CiTypeWhereUniqueInput
    create: XOR<CiTypeCreateWithoutChildTypesInput, CiTypeUncheckedCreateWithoutChildTypesInput>
  }

  export type CiTypeCreateWithoutParentTypeInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    category: string
    icon?: string | null
    color?: string | null
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: string | null
    allowedStatuses?: CiTypeCreateallowedStatusesInput | string[]
    discoveryEnabled?: boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    childTypes?: CiTypeCreateNestedManyWithoutParentTypeInput
    configurationItems?: ConfigurationItemCreateNestedManyWithoutCiType_relInput
    allowedRelationships?: CiRelationshipTypeCreateNestedManyWithoutSourceCiTypeInput
    targetRelationships?: CiRelationshipTypeCreateNestedManyWithoutTargetCiTypeInput
  }

  export type CiTypeUncheckedCreateWithoutParentTypeInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    category: string
    icon?: string | null
    color?: string | null
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: string | null
    allowedStatuses?: CiTypeCreateallowedStatusesInput | string[]
    discoveryEnabled?: boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    childTypes?: CiTypeUncheckedCreateNestedManyWithoutParentTypeInput
    configurationItems?: ConfigurationItemUncheckedCreateNestedManyWithoutCiType_relInput
    allowedRelationships?: CiRelationshipTypeUncheckedCreateNestedManyWithoutSourceCiTypeInput
    targetRelationships?: CiRelationshipTypeUncheckedCreateNestedManyWithoutTargetCiTypeInput
  }

  export type CiTypeCreateOrConnectWithoutParentTypeInput = {
    where: CiTypeWhereUniqueInput
    create: XOR<CiTypeCreateWithoutParentTypeInput, CiTypeUncheckedCreateWithoutParentTypeInput>
  }

  export type CiTypeCreateManyParentTypeInputEnvelope = {
    data: CiTypeCreateManyParentTypeInput | CiTypeCreateManyParentTypeInput[]
    skipDuplicates?: boolean
  }

  export type ConfigurationItemCreateWithoutCiType_relInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateWithoutCiType_relInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemCreateOrConnectWithoutCiType_relInput = {
    where: ConfigurationItemWhereUniqueInput
    create: XOR<ConfigurationItemCreateWithoutCiType_relInput, ConfigurationItemUncheckedCreateWithoutCiType_relInput>
  }

  export type ConfigurationItemCreateManyCiType_relInputEnvelope = {
    data: ConfigurationItemCreateManyCiType_relInput | ConfigurationItemCreateManyCiType_relInput[]
    skipDuplicates?: boolean
  }

  export type CiRelationshipTypeCreateWithoutSourceCiTypeInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    isDirectional?: boolean
    category?: string | null
    allowMultiple?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    targetCiType?: CiTypeCreateNestedOneWithoutTargetRelationshipsInput
    relationships?: CiRelationshipCreateNestedManyWithoutRelationshipTypeInput
  }

  export type CiRelationshipTypeUncheckedCreateWithoutSourceCiTypeInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    isDirectional?: boolean
    category?: string | null
    targetCiTypeId?: string | null
    allowMultiple?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    relationships?: CiRelationshipUncheckedCreateNestedManyWithoutRelationshipTypeInput
  }

  export type CiRelationshipTypeCreateOrConnectWithoutSourceCiTypeInput = {
    where: CiRelationshipTypeWhereUniqueInput
    create: XOR<CiRelationshipTypeCreateWithoutSourceCiTypeInput, CiRelationshipTypeUncheckedCreateWithoutSourceCiTypeInput>
  }

  export type CiRelationshipTypeCreateManySourceCiTypeInputEnvelope = {
    data: CiRelationshipTypeCreateManySourceCiTypeInput | CiRelationshipTypeCreateManySourceCiTypeInput[]
    skipDuplicates?: boolean
  }

  export type CiRelationshipTypeCreateWithoutTargetCiTypeInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    isDirectional?: boolean
    category?: string | null
    allowMultiple?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    sourceCiType?: CiTypeCreateNestedOneWithoutAllowedRelationshipsInput
    relationships?: CiRelationshipCreateNestedManyWithoutRelationshipTypeInput
  }

  export type CiRelationshipTypeUncheckedCreateWithoutTargetCiTypeInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    isDirectional?: boolean
    category?: string | null
    sourceCiTypeId?: string | null
    allowMultiple?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    relationships?: CiRelationshipUncheckedCreateNestedManyWithoutRelationshipTypeInput
  }

  export type CiRelationshipTypeCreateOrConnectWithoutTargetCiTypeInput = {
    where: CiRelationshipTypeWhereUniqueInput
    create: XOR<CiRelationshipTypeCreateWithoutTargetCiTypeInput, CiRelationshipTypeUncheckedCreateWithoutTargetCiTypeInput>
  }

  export type CiRelationshipTypeCreateManyTargetCiTypeInputEnvelope = {
    data: CiRelationshipTypeCreateManyTargetCiTypeInput | CiRelationshipTypeCreateManyTargetCiTypeInput[]
    skipDuplicates?: boolean
  }

  export type CiTypeUpsertWithoutChildTypesInput = {
    update: XOR<CiTypeUpdateWithoutChildTypesInput, CiTypeUncheckedUpdateWithoutChildTypesInput>
    create: XOR<CiTypeCreateWithoutChildTypesInput, CiTypeUncheckedCreateWithoutChildTypesInput>
    where?: CiTypeWhereInput
  }

  export type CiTypeUpdateToOneWithWhereWithoutChildTypesInput = {
    where?: CiTypeWhereInput
    data: XOR<CiTypeUpdateWithoutChildTypesInput, CiTypeUncheckedUpdateWithoutChildTypesInput>
  }

  export type CiTypeUpdateWithoutChildTypesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isAbstract?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: NullableStringFieldUpdateOperationsInput | string | null
    allowedStatuses?: CiTypeUpdateallowedStatusesInput | string[]
    discoveryEnabled?: BoolFieldUpdateOperationsInput | boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parentType?: CiTypeUpdateOneWithoutChildTypesNestedInput
    configurationItems?: ConfigurationItemUpdateManyWithoutCiType_relNestedInput
    allowedRelationships?: CiRelationshipTypeUpdateManyWithoutSourceCiTypeNestedInput
    targetRelationships?: CiRelationshipTypeUpdateManyWithoutTargetCiTypeNestedInput
  }

  export type CiTypeUncheckedUpdateWithoutChildTypesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    parentTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    isAbstract?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: NullableStringFieldUpdateOperationsInput | string | null
    allowedStatuses?: CiTypeUpdateallowedStatusesInput | string[]
    discoveryEnabled?: BoolFieldUpdateOperationsInput | boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    configurationItems?: ConfigurationItemUncheckedUpdateManyWithoutCiType_relNestedInput
    allowedRelationships?: CiRelationshipTypeUncheckedUpdateManyWithoutSourceCiTypeNestedInput
    targetRelationships?: CiRelationshipTypeUncheckedUpdateManyWithoutTargetCiTypeNestedInput
  }

  export type CiTypeUpsertWithWhereUniqueWithoutParentTypeInput = {
    where: CiTypeWhereUniqueInput
    update: XOR<CiTypeUpdateWithoutParentTypeInput, CiTypeUncheckedUpdateWithoutParentTypeInput>
    create: XOR<CiTypeCreateWithoutParentTypeInput, CiTypeUncheckedCreateWithoutParentTypeInput>
  }

  export type CiTypeUpdateWithWhereUniqueWithoutParentTypeInput = {
    where: CiTypeWhereUniqueInput
    data: XOR<CiTypeUpdateWithoutParentTypeInput, CiTypeUncheckedUpdateWithoutParentTypeInput>
  }

  export type CiTypeUpdateManyWithWhereWithoutParentTypeInput = {
    where: CiTypeScalarWhereInput
    data: XOR<CiTypeUpdateManyMutationInput, CiTypeUncheckedUpdateManyWithoutParentTypeInput>
  }

  export type CiTypeScalarWhereInput = {
    AND?: CiTypeScalarWhereInput | CiTypeScalarWhereInput[]
    OR?: CiTypeScalarWhereInput[]
    NOT?: CiTypeScalarWhereInput | CiTypeScalarWhereInput[]
    id?: StringFilter<"CiType"> | string
    name?: StringFilter<"CiType"> | string
    displayName?: StringNullableFilter<"CiType"> | string | null
    description?: StringNullableFilter<"CiType"> | string | null
    category?: StringFilter<"CiType"> | string
    icon?: StringNullableFilter<"CiType"> | string | null
    color?: StringNullableFilter<"CiType"> | string | null
    parentTypeId?: StringNullableFilter<"CiType"> | string | null
    isAbstract?: BoolFilter<"CiType"> | boolean
    isActive?: BoolFilter<"CiType"> | boolean
    attributeSchema?: JsonNullableFilter<"CiType">
    validationRules?: JsonNullableFilter<"CiType">
    defaultStatus?: StringNullableFilter<"CiType"> | string | null
    allowedStatuses?: StringNullableListFilter<"CiType">
    discoveryEnabled?: BoolFilter<"CiType"> | boolean
    discoveryRules?: JsonNullableFilter<"CiType">
    createdAt?: DateTimeFilter<"CiType"> | Date | string
    updatedAt?: DateTimeFilter<"CiType"> | Date | string
  }

  export type ConfigurationItemUpsertWithWhereUniqueWithoutCiType_relInput = {
    where: ConfigurationItemWhereUniqueInput
    update: XOR<ConfigurationItemUpdateWithoutCiType_relInput, ConfigurationItemUncheckedUpdateWithoutCiType_relInput>
    create: XOR<ConfigurationItemCreateWithoutCiType_relInput, ConfigurationItemUncheckedCreateWithoutCiType_relInput>
  }

  export type ConfigurationItemUpdateWithWhereUniqueWithoutCiType_relInput = {
    where: ConfigurationItemWhereUniqueInput
    data: XOR<ConfigurationItemUpdateWithoutCiType_relInput, ConfigurationItemUncheckedUpdateWithoutCiType_relInput>
  }

  export type ConfigurationItemUpdateManyWithWhereWithoutCiType_relInput = {
    where: ConfigurationItemScalarWhereInput
    data: XOR<ConfigurationItemUpdateManyMutationInput, ConfigurationItemUncheckedUpdateManyWithoutCiType_relInput>
  }

  export type ConfigurationItemScalarWhereInput = {
    AND?: ConfigurationItemScalarWhereInput | ConfigurationItemScalarWhereInput[]
    OR?: ConfigurationItemScalarWhereInput[]
    NOT?: ConfigurationItemScalarWhereInput | ConfigurationItemScalarWhereInput[]
    id?: StringFilter<"ConfigurationItem"> | string
    ciId?: StringFilter<"ConfigurationItem"> | string
    name?: StringFilter<"ConfigurationItem"> | string
    displayName?: StringNullableFilter<"ConfigurationItem"> | string | null
    description?: StringNullableFilter<"ConfigurationItem"> | string | null
    ciType?: StringFilter<"ConfigurationItem"> | string
    ciSubType?: StringNullableFilter<"ConfigurationItem"> | string | null
    ciStatus?: StringFilter<"ConfigurationItem"> | string
    operationalStatus?: StringNullableFilter<"ConfigurationItem"> | string | null
    environment?: StringNullableFilter<"ConfigurationItem"> | string | null
    criticality?: StringNullableFilter<"ConfigurationItem"> | string | null
    businessService?: StringNullableFilter<"ConfigurationItem"> | string | null
    owner?: StringNullableFilter<"ConfigurationItem"> | string | null
    technicalOwner?: StringNullableFilter<"ConfigurationItem"> | string | null
    supportGroup?: StringNullableFilter<"ConfigurationItem"> | string | null
    location?: StringNullableFilter<"ConfigurationItem"> | string | null
    site?: StringNullableFilter<"ConfigurationItem"> | string | null
    building?: StringNullableFilter<"ConfigurationItem"> | string | null
    floor?: StringNullableFilter<"ConfigurationItem"> | string | null
    room?: StringNullableFilter<"ConfigurationItem"> | string | null
    rack?: StringNullableFilter<"ConfigurationItem"> | string | null
    rackPosition?: StringNullableFilter<"ConfigurationItem"> | string | null
    department?: StringNullableFilter<"ConfigurationItem"> | string | null
    costCenter?: StringNullableFilter<"ConfigurationItem"> | string | null
    installDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    firstDiscoveredDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    lastDiscoveredDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    warrantyExpiryDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    maintenanceExpiryDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    retirementDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    discoverySource?: StringNullableFilter<"ConfigurationItem"> | string | null
    isDiscovered?: BoolFilter<"ConfigurationItem"> | boolean
    lastScanDate?: DateTimeNullableFilter<"ConfigurationItem"> | Date | string | null
    purchasePrice?: DecimalNullableFilter<"ConfigurationItem"> | Decimal | DecimalJsLike | number | string | null
    currentValue?: DecimalNullableFilter<"ConfigurationItem"> | Decimal | DecimalJsLike | number | string | null
    vendor?: StringNullableFilter<"ConfigurationItem"> | string | null
    manufacturer?: StringNullableFilter<"ConfigurationItem"> | string | null
    model?: StringNullableFilter<"ConfigurationItem"> | string | null
    serialNumber?: StringNullableFilter<"ConfigurationItem"> | string | null
    assetTag?: StringNullableFilter<"ConfigurationItem"> | string | null
    customFields?: JsonNullableFilter<"ConfigurationItem">
    attributes?: JsonNullableFilter<"ConfigurationItem">
    tags?: StringNullableListFilter<"ConfigurationItem">
    createdAt?: DateTimeFilter<"ConfigurationItem"> | Date | string
    updatedAt?: DateTimeFilter<"ConfigurationItem"> | Date | string
    createdBy?: StringNullableFilter<"ConfigurationItem"> | string | null
    updatedBy?: StringNullableFilter<"ConfigurationItem"> | string | null
  }

  export type CiRelationshipTypeUpsertWithWhereUniqueWithoutSourceCiTypeInput = {
    where: CiRelationshipTypeWhereUniqueInput
    update: XOR<CiRelationshipTypeUpdateWithoutSourceCiTypeInput, CiRelationshipTypeUncheckedUpdateWithoutSourceCiTypeInput>
    create: XOR<CiRelationshipTypeCreateWithoutSourceCiTypeInput, CiRelationshipTypeUncheckedCreateWithoutSourceCiTypeInput>
  }

  export type CiRelationshipTypeUpdateWithWhereUniqueWithoutSourceCiTypeInput = {
    where: CiRelationshipTypeWhereUniqueInput
    data: XOR<CiRelationshipTypeUpdateWithoutSourceCiTypeInput, CiRelationshipTypeUncheckedUpdateWithoutSourceCiTypeInput>
  }

  export type CiRelationshipTypeUpdateManyWithWhereWithoutSourceCiTypeInput = {
    where: CiRelationshipTypeScalarWhereInput
    data: XOR<CiRelationshipTypeUpdateManyMutationInput, CiRelationshipTypeUncheckedUpdateManyWithoutSourceCiTypeInput>
  }

  export type CiRelationshipTypeScalarWhereInput = {
    AND?: CiRelationshipTypeScalarWhereInput | CiRelationshipTypeScalarWhereInput[]
    OR?: CiRelationshipTypeScalarWhereInput[]
    NOT?: CiRelationshipTypeScalarWhereInput | CiRelationshipTypeScalarWhereInput[]
    id?: StringFilter<"CiRelationshipType"> | string
    name?: StringFilter<"CiRelationshipType"> | string
    displayName?: StringNullableFilter<"CiRelationshipType"> | string | null
    description?: StringNullableFilter<"CiRelationshipType"> | string | null
    isDirectional?: BoolFilter<"CiRelationshipType"> | boolean
    category?: StringNullableFilter<"CiRelationshipType"> | string | null
    sourceCiTypeId?: StringNullableFilter<"CiRelationshipType"> | string | null
    targetCiTypeId?: StringNullableFilter<"CiRelationshipType"> | string | null
    allowMultiple?: BoolFilter<"CiRelationshipType"> | boolean
    createdAt?: DateTimeFilter<"CiRelationshipType"> | Date | string
    updatedAt?: DateTimeFilter<"CiRelationshipType"> | Date | string
  }

  export type CiRelationshipTypeUpsertWithWhereUniqueWithoutTargetCiTypeInput = {
    where: CiRelationshipTypeWhereUniqueInput
    update: XOR<CiRelationshipTypeUpdateWithoutTargetCiTypeInput, CiRelationshipTypeUncheckedUpdateWithoutTargetCiTypeInput>
    create: XOR<CiRelationshipTypeCreateWithoutTargetCiTypeInput, CiRelationshipTypeUncheckedCreateWithoutTargetCiTypeInput>
  }

  export type CiRelationshipTypeUpdateWithWhereUniqueWithoutTargetCiTypeInput = {
    where: CiRelationshipTypeWhereUniqueInput
    data: XOR<CiRelationshipTypeUpdateWithoutTargetCiTypeInput, CiRelationshipTypeUncheckedUpdateWithoutTargetCiTypeInput>
  }

  export type CiRelationshipTypeUpdateManyWithWhereWithoutTargetCiTypeInput = {
    where: CiRelationshipTypeScalarWhereInput
    data: XOR<CiRelationshipTypeUpdateManyMutationInput, CiRelationshipTypeUncheckedUpdateManyWithoutTargetCiTypeInput>
  }

  export type CiTypeCreateWithoutAllowedRelationshipsInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    category: string
    icon?: string | null
    color?: string | null
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: string | null
    allowedStatuses?: CiTypeCreateallowedStatusesInput | string[]
    discoveryEnabled?: boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    parentType?: CiTypeCreateNestedOneWithoutChildTypesInput
    childTypes?: CiTypeCreateNestedManyWithoutParentTypeInput
    configurationItems?: ConfigurationItemCreateNestedManyWithoutCiType_relInput
    targetRelationships?: CiRelationshipTypeCreateNestedManyWithoutTargetCiTypeInput
  }

  export type CiTypeUncheckedCreateWithoutAllowedRelationshipsInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    category: string
    icon?: string | null
    color?: string | null
    parentTypeId?: string | null
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: string | null
    allowedStatuses?: CiTypeCreateallowedStatusesInput | string[]
    discoveryEnabled?: boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    childTypes?: CiTypeUncheckedCreateNestedManyWithoutParentTypeInput
    configurationItems?: ConfigurationItemUncheckedCreateNestedManyWithoutCiType_relInput
    targetRelationships?: CiRelationshipTypeUncheckedCreateNestedManyWithoutTargetCiTypeInput
  }

  export type CiTypeCreateOrConnectWithoutAllowedRelationshipsInput = {
    where: CiTypeWhereUniqueInput
    create: XOR<CiTypeCreateWithoutAllowedRelationshipsInput, CiTypeUncheckedCreateWithoutAllowedRelationshipsInput>
  }

  export type CiTypeCreateWithoutTargetRelationshipsInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    category: string
    icon?: string | null
    color?: string | null
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: string | null
    allowedStatuses?: CiTypeCreateallowedStatusesInput | string[]
    discoveryEnabled?: boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    parentType?: CiTypeCreateNestedOneWithoutChildTypesInput
    childTypes?: CiTypeCreateNestedManyWithoutParentTypeInput
    configurationItems?: ConfigurationItemCreateNestedManyWithoutCiType_relInput
    allowedRelationships?: CiRelationshipTypeCreateNestedManyWithoutSourceCiTypeInput
  }

  export type CiTypeUncheckedCreateWithoutTargetRelationshipsInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    category: string
    icon?: string | null
    color?: string | null
    parentTypeId?: string | null
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: string | null
    allowedStatuses?: CiTypeCreateallowedStatusesInput | string[]
    discoveryEnabled?: boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    childTypes?: CiTypeUncheckedCreateNestedManyWithoutParentTypeInput
    configurationItems?: ConfigurationItemUncheckedCreateNestedManyWithoutCiType_relInput
    allowedRelationships?: CiRelationshipTypeUncheckedCreateNestedManyWithoutSourceCiTypeInput
  }

  export type CiTypeCreateOrConnectWithoutTargetRelationshipsInput = {
    where: CiTypeWhereUniqueInput
    create: XOR<CiTypeCreateWithoutTargetRelationshipsInput, CiTypeUncheckedCreateWithoutTargetRelationshipsInput>
  }

  export type CiRelationshipCreateWithoutRelationshipTypeInput = {
    id?: string
    strength?: string | null
    criticality?: string | null
    description?: string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    discoveredDate?: Date | string | null
    isDiscovered?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    sourceCi: ConfigurationItemCreateNestedOneWithoutOutgoingRelationshipsInput
    targetCi: ConfigurationItemCreateNestedOneWithoutIncomingRelationshipsInput
  }

  export type CiRelationshipUncheckedCreateWithoutRelationshipTypeInput = {
    id?: string
    sourceCiId: string
    targetCiId: string
    strength?: string | null
    criticality?: string | null
    description?: string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    discoveredDate?: Date | string | null
    isDiscovered?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type CiRelationshipCreateOrConnectWithoutRelationshipTypeInput = {
    where: CiRelationshipWhereUniqueInput
    create: XOR<CiRelationshipCreateWithoutRelationshipTypeInput, CiRelationshipUncheckedCreateWithoutRelationshipTypeInput>
  }

  export type CiRelationshipCreateManyRelationshipTypeInputEnvelope = {
    data: CiRelationshipCreateManyRelationshipTypeInput | CiRelationshipCreateManyRelationshipTypeInput[]
    skipDuplicates?: boolean
  }

  export type CiTypeUpsertWithoutAllowedRelationshipsInput = {
    update: XOR<CiTypeUpdateWithoutAllowedRelationshipsInput, CiTypeUncheckedUpdateWithoutAllowedRelationshipsInput>
    create: XOR<CiTypeCreateWithoutAllowedRelationshipsInput, CiTypeUncheckedCreateWithoutAllowedRelationshipsInput>
    where?: CiTypeWhereInput
  }

  export type CiTypeUpdateToOneWithWhereWithoutAllowedRelationshipsInput = {
    where?: CiTypeWhereInput
    data: XOR<CiTypeUpdateWithoutAllowedRelationshipsInput, CiTypeUncheckedUpdateWithoutAllowedRelationshipsInput>
  }

  export type CiTypeUpdateWithoutAllowedRelationshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isAbstract?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: NullableStringFieldUpdateOperationsInput | string | null
    allowedStatuses?: CiTypeUpdateallowedStatusesInput | string[]
    discoveryEnabled?: BoolFieldUpdateOperationsInput | boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parentType?: CiTypeUpdateOneWithoutChildTypesNestedInput
    childTypes?: CiTypeUpdateManyWithoutParentTypeNestedInput
    configurationItems?: ConfigurationItemUpdateManyWithoutCiType_relNestedInput
    targetRelationships?: CiRelationshipTypeUpdateManyWithoutTargetCiTypeNestedInput
  }

  export type CiTypeUncheckedUpdateWithoutAllowedRelationshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    parentTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    isAbstract?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: NullableStringFieldUpdateOperationsInput | string | null
    allowedStatuses?: CiTypeUpdateallowedStatusesInput | string[]
    discoveryEnabled?: BoolFieldUpdateOperationsInput | boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    childTypes?: CiTypeUncheckedUpdateManyWithoutParentTypeNestedInput
    configurationItems?: ConfigurationItemUncheckedUpdateManyWithoutCiType_relNestedInput
    targetRelationships?: CiRelationshipTypeUncheckedUpdateManyWithoutTargetCiTypeNestedInput
  }

  export type CiTypeUpsertWithoutTargetRelationshipsInput = {
    update: XOR<CiTypeUpdateWithoutTargetRelationshipsInput, CiTypeUncheckedUpdateWithoutTargetRelationshipsInput>
    create: XOR<CiTypeCreateWithoutTargetRelationshipsInput, CiTypeUncheckedCreateWithoutTargetRelationshipsInput>
    where?: CiTypeWhereInput
  }

  export type CiTypeUpdateToOneWithWhereWithoutTargetRelationshipsInput = {
    where?: CiTypeWhereInput
    data: XOR<CiTypeUpdateWithoutTargetRelationshipsInput, CiTypeUncheckedUpdateWithoutTargetRelationshipsInput>
  }

  export type CiTypeUpdateWithoutTargetRelationshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isAbstract?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: NullableStringFieldUpdateOperationsInput | string | null
    allowedStatuses?: CiTypeUpdateallowedStatusesInput | string[]
    discoveryEnabled?: BoolFieldUpdateOperationsInput | boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parentType?: CiTypeUpdateOneWithoutChildTypesNestedInput
    childTypes?: CiTypeUpdateManyWithoutParentTypeNestedInput
    configurationItems?: ConfigurationItemUpdateManyWithoutCiType_relNestedInput
    allowedRelationships?: CiRelationshipTypeUpdateManyWithoutSourceCiTypeNestedInput
  }

  export type CiTypeUncheckedUpdateWithoutTargetRelationshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    parentTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    isAbstract?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: NullableStringFieldUpdateOperationsInput | string | null
    allowedStatuses?: CiTypeUpdateallowedStatusesInput | string[]
    discoveryEnabled?: BoolFieldUpdateOperationsInput | boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    childTypes?: CiTypeUncheckedUpdateManyWithoutParentTypeNestedInput
    configurationItems?: ConfigurationItemUncheckedUpdateManyWithoutCiType_relNestedInput
    allowedRelationships?: CiRelationshipTypeUncheckedUpdateManyWithoutSourceCiTypeNestedInput
  }

  export type CiRelationshipUpsertWithWhereUniqueWithoutRelationshipTypeInput = {
    where: CiRelationshipWhereUniqueInput
    update: XOR<CiRelationshipUpdateWithoutRelationshipTypeInput, CiRelationshipUncheckedUpdateWithoutRelationshipTypeInput>
    create: XOR<CiRelationshipCreateWithoutRelationshipTypeInput, CiRelationshipUncheckedCreateWithoutRelationshipTypeInput>
  }

  export type CiRelationshipUpdateWithWhereUniqueWithoutRelationshipTypeInput = {
    where: CiRelationshipWhereUniqueInput
    data: XOR<CiRelationshipUpdateWithoutRelationshipTypeInput, CiRelationshipUncheckedUpdateWithoutRelationshipTypeInput>
  }

  export type CiRelationshipUpdateManyWithWhereWithoutRelationshipTypeInput = {
    where: CiRelationshipScalarWhereInput
    data: XOR<CiRelationshipUpdateManyMutationInput, CiRelationshipUncheckedUpdateManyWithoutRelationshipTypeInput>
  }

  export type ConfigurationItemCreateWithoutOutgoingRelationshipsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    ciType_rel: CiTypeCreateNestedOneWithoutConfigurationItemsInput
    incomingRelationships?: CiRelationshipCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateWithoutOutgoingRelationshipsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    incomingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemCreateOrConnectWithoutOutgoingRelationshipsInput = {
    where: ConfigurationItemWhereUniqueInput
    create: XOR<ConfigurationItemCreateWithoutOutgoingRelationshipsInput, ConfigurationItemUncheckedCreateWithoutOutgoingRelationshipsInput>
  }

  export type ConfigurationItemCreateWithoutIncomingRelationshipsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    ciType_rel: CiTypeCreateNestedOneWithoutConfigurationItemsInput
    outgoingRelationships?: CiRelationshipCreateNestedManyWithoutSourceCiInput
    incidents?: CiIncidentCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateWithoutIncomingRelationshipsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput
    incidents?: CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemCreateOrConnectWithoutIncomingRelationshipsInput = {
    where: ConfigurationItemWhereUniqueInput
    create: XOR<ConfigurationItemCreateWithoutIncomingRelationshipsInput, ConfigurationItemUncheckedCreateWithoutIncomingRelationshipsInput>
  }

  export type CiRelationshipTypeCreateWithoutRelationshipsInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    isDirectional?: boolean
    category?: string | null
    allowMultiple?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    sourceCiType?: CiTypeCreateNestedOneWithoutAllowedRelationshipsInput
    targetCiType?: CiTypeCreateNestedOneWithoutTargetRelationshipsInput
  }

  export type CiRelationshipTypeUncheckedCreateWithoutRelationshipsInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    isDirectional?: boolean
    category?: string | null
    sourceCiTypeId?: string | null
    targetCiTypeId?: string | null
    allowMultiple?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CiRelationshipTypeCreateOrConnectWithoutRelationshipsInput = {
    where: CiRelationshipTypeWhereUniqueInput
    create: XOR<CiRelationshipTypeCreateWithoutRelationshipsInput, CiRelationshipTypeUncheckedCreateWithoutRelationshipsInput>
  }

  export type ConfigurationItemUpsertWithoutOutgoingRelationshipsInput = {
    update: XOR<ConfigurationItemUpdateWithoutOutgoingRelationshipsInput, ConfigurationItemUncheckedUpdateWithoutOutgoingRelationshipsInput>
    create: XOR<ConfigurationItemCreateWithoutOutgoingRelationshipsInput, ConfigurationItemUncheckedCreateWithoutOutgoingRelationshipsInput>
    where?: ConfigurationItemWhereInput
  }

  export type ConfigurationItemUpdateToOneWithWhereWithoutOutgoingRelationshipsInput = {
    where?: ConfigurationItemWhereInput
    data: XOR<ConfigurationItemUpdateWithoutOutgoingRelationshipsInput, ConfigurationItemUncheckedUpdateWithoutOutgoingRelationshipsInput>
  }

  export type ConfigurationItemUpdateWithoutOutgoingRelationshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ciType_rel?: CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput
    incomingRelationships?: CiRelationshipUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateWithoutOutgoingRelationshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    incomingRelationships?: CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUpsertWithoutIncomingRelationshipsInput = {
    update: XOR<ConfigurationItemUpdateWithoutIncomingRelationshipsInput, ConfigurationItemUncheckedUpdateWithoutIncomingRelationshipsInput>
    create: XOR<ConfigurationItemCreateWithoutIncomingRelationshipsInput, ConfigurationItemUncheckedCreateWithoutIncomingRelationshipsInput>
    where?: ConfigurationItemWhereInput
  }

  export type ConfigurationItemUpdateToOneWithWhereWithoutIncomingRelationshipsInput = {
    where?: ConfigurationItemWhereInput
    data: XOR<ConfigurationItemUpdateWithoutIncomingRelationshipsInput, ConfigurationItemUncheckedUpdateWithoutIncomingRelationshipsInput>
  }

  export type ConfigurationItemUpdateWithoutIncomingRelationshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ciType_rel?: CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput
    outgoingRelationships?: CiRelationshipUpdateManyWithoutSourceCiNestedInput
    incidents?: CiIncidentUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateWithoutIncomingRelationshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput
    incidents?: CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type CiRelationshipTypeUpsertWithoutRelationshipsInput = {
    update: XOR<CiRelationshipTypeUpdateWithoutRelationshipsInput, CiRelationshipTypeUncheckedUpdateWithoutRelationshipsInput>
    create: XOR<CiRelationshipTypeCreateWithoutRelationshipsInput, CiRelationshipTypeUncheckedCreateWithoutRelationshipsInput>
    where?: CiRelationshipTypeWhereInput
  }

  export type CiRelationshipTypeUpdateToOneWithWhereWithoutRelationshipsInput = {
    where?: CiRelationshipTypeWhereInput
    data: XOR<CiRelationshipTypeUpdateWithoutRelationshipsInput, CiRelationshipTypeUncheckedUpdateWithoutRelationshipsInput>
  }

  export type CiRelationshipTypeUpdateWithoutRelationshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isDirectional?: BoolFieldUpdateOperationsInput | boolean
    category?: NullableStringFieldUpdateOperationsInput | string | null
    allowMultiple?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sourceCiType?: CiTypeUpdateOneWithoutAllowedRelationshipsNestedInput
    targetCiType?: CiTypeUpdateOneWithoutTargetRelationshipsNestedInput
  }

  export type CiRelationshipTypeUncheckedUpdateWithoutRelationshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isDirectional?: BoolFieldUpdateOperationsInput | boolean
    category?: NullableStringFieldUpdateOperationsInput | string | null
    sourceCiTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    targetCiTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    allowMultiple?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfigurationItemCreateWithoutHardwareDetailsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    ciType_rel: CiTypeCreateNestedOneWithoutConfigurationItemsInput
    outgoingRelationships?: CiRelationshipCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupCreateNestedManyWithoutConfigurationItemsInput
    softwareDetails?: SoftwareCiCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateWithoutHardwareDetailsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput
    softwareDetails?: SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemCreateOrConnectWithoutHardwareDetailsInput = {
    where: ConfigurationItemWhereUniqueInput
    create: XOR<ConfigurationItemCreateWithoutHardwareDetailsInput, ConfigurationItemUncheckedCreateWithoutHardwareDetailsInput>
  }

  export type ConfigurationItemUpsertWithoutHardwareDetailsInput = {
    update: XOR<ConfigurationItemUpdateWithoutHardwareDetailsInput, ConfigurationItemUncheckedUpdateWithoutHardwareDetailsInput>
    create: XOR<ConfigurationItemCreateWithoutHardwareDetailsInput, ConfigurationItemUncheckedCreateWithoutHardwareDetailsInput>
    where?: ConfigurationItemWhereInput
  }

  export type ConfigurationItemUpdateToOneWithWhereWithoutHardwareDetailsInput = {
    where?: ConfigurationItemWhereInput
    data: XOR<ConfigurationItemUpdateWithoutHardwareDetailsInput, ConfigurationItemUncheckedUpdateWithoutHardwareDetailsInput>
  }

  export type ConfigurationItemUpdateWithoutHardwareDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ciType_rel?: CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput
    outgoingRelationships?: CiRelationshipUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUpdateManyWithoutConfigurationItemsNestedInput
    softwareDetails?: SoftwareCiUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateWithoutHardwareDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput
    softwareDetails?: SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemCreateWithoutSoftwareDetailsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    ciType_rel: CiTypeCreateNestedOneWithoutConfigurationItemsInput
    outgoingRelationships?: CiRelationshipCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateWithoutSoftwareDetailsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemCreateOrConnectWithoutSoftwareDetailsInput = {
    where: ConfigurationItemWhereUniqueInput
    create: XOR<ConfigurationItemCreateWithoutSoftwareDetailsInput, ConfigurationItemUncheckedCreateWithoutSoftwareDetailsInput>
  }

  export type ConfigurationItemUpsertWithoutSoftwareDetailsInput = {
    update: XOR<ConfigurationItemUpdateWithoutSoftwareDetailsInput, ConfigurationItemUncheckedUpdateWithoutSoftwareDetailsInput>
    create: XOR<ConfigurationItemCreateWithoutSoftwareDetailsInput, ConfigurationItemUncheckedCreateWithoutSoftwareDetailsInput>
    where?: ConfigurationItemWhereInput
  }

  export type ConfigurationItemUpdateToOneWithWhereWithoutSoftwareDetailsInput = {
    where?: ConfigurationItemWhereInput
    data: XOR<ConfigurationItemUpdateWithoutSoftwareDetailsInput, ConfigurationItemUncheckedUpdateWithoutSoftwareDetailsInput>
  }

  export type ConfigurationItemUpdateWithoutSoftwareDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ciType_rel?: CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput
    outgoingRelationships?: CiRelationshipUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateWithoutSoftwareDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemCreateWithoutApplicationDetailsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    ciType_rel: CiTypeCreateNestedOneWithoutConfigurationItemsInput
    outgoingRelationships?: CiRelationshipCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateWithoutApplicationDetailsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemCreateOrConnectWithoutApplicationDetailsInput = {
    where: ConfigurationItemWhereUniqueInput
    create: XOR<ConfigurationItemCreateWithoutApplicationDetailsInput, ConfigurationItemUncheckedCreateWithoutApplicationDetailsInput>
  }

  export type ConfigurationItemUpsertWithoutApplicationDetailsInput = {
    update: XOR<ConfigurationItemUpdateWithoutApplicationDetailsInput, ConfigurationItemUncheckedUpdateWithoutApplicationDetailsInput>
    create: XOR<ConfigurationItemCreateWithoutApplicationDetailsInput, ConfigurationItemUncheckedCreateWithoutApplicationDetailsInput>
    where?: ConfigurationItemWhereInput
  }

  export type ConfigurationItemUpdateToOneWithWhereWithoutApplicationDetailsInput = {
    where?: ConfigurationItemWhereInput
    data: XOR<ConfigurationItemUpdateWithoutApplicationDetailsInput, ConfigurationItemUncheckedUpdateWithoutApplicationDetailsInput>
  }

  export type ConfigurationItemUpdateWithoutApplicationDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ciType_rel?: CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput
    outgoingRelationships?: CiRelationshipUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateWithoutApplicationDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemCreateWithoutNetworkDetailsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    ciType_rel: CiTypeCreateNestedOneWithoutConfigurationItemsInput
    outgoingRelationships?: CiRelationshipCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateWithoutNetworkDetailsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemCreateOrConnectWithoutNetworkDetailsInput = {
    where: ConfigurationItemWhereUniqueInput
    create: XOR<ConfigurationItemCreateWithoutNetworkDetailsInput, ConfigurationItemUncheckedCreateWithoutNetworkDetailsInput>
  }

  export type ConfigurationItemUpsertWithoutNetworkDetailsInput = {
    update: XOR<ConfigurationItemUpdateWithoutNetworkDetailsInput, ConfigurationItemUncheckedUpdateWithoutNetworkDetailsInput>
    create: XOR<ConfigurationItemCreateWithoutNetworkDetailsInput, ConfigurationItemUncheckedCreateWithoutNetworkDetailsInput>
    where?: ConfigurationItemWhereInput
  }

  export type ConfigurationItemUpdateToOneWithWhereWithoutNetworkDetailsInput = {
    where?: ConfigurationItemWhereInput
    data: XOR<ConfigurationItemUpdateWithoutNetworkDetailsInput, ConfigurationItemUncheckedUpdateWithoutNetworkDetailsInput>
  }

  export type ConfigurationItemUpdateWithoutNetworkDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ciType_rel?: CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput
    outgoingRelationships?: CiRelationshipUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateWithoutNetworkDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemCreateWithoutServiceDetailsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    ciType_rel: CiTypeCreateNestedOneWithoutConfigurationItemsInput
    outgoingRelationships?: CiRelationshipCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateWithoutServiceDetailsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemCreateOrConnectWithoutServiceDetailsInput = {
    where: ConfigurationItemWhereUniqueInput
    create: XOR<ConfigurationItemCreateWithoutServiceDetailsInput, ConfigurationItemUncheckedCreateWithoutServiceDetailsInput>
  }

  export type ConfigurationItemUpsertWithoutServiceDetailsInput = {
    update: XOR<ConfigurationItemUpdateWithoutServiceDetailsInput, ConfigurationItemUncheckedUpdateWithoutServiceDetailsInput>
    create: XOR<ConfigurationItemCreateWithoutServiceDetailsInput, ConfigurationItemUncheckedCreateWithoutServiceDetailsInput>
    where?: ConfigurationItemWhereInput
  }

  export type ConfigurationItemUpdateToOneWithWhereWithoutServiceDetailsInput = {
    where?: ConfigurationItemWhereInput
    data: XOR<ConfigurationItemUpdateWithoutServiceDetailsInput, ConfigurationItemUncheckedUpdateWithoutServiceDetailsInput>
  }

  export type ConfigurationItemUpdateWithoutServiceDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ciType_rel?: CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput
    outgoingRelationships?: CiRelationshipUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateWithoutServiceDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemCreateWithoutDatabaseDetailsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    ciType_rel: CiTypeCreateNestedOneWithoutConfigurationItemsInput
    outgoingRelationships?: CiRelationshipCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateWithoutDatabaseDetailsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemCreateOrConnectWithoutDatabaseDetailsInput = {
    where: ConfigurationItemWhereUniqueInput
    create: XOR<ConfigurationItemCreateWithoutDatabaseDetailsInput, ConfigurationItemUncheckedCreateWithoutDatabaseDetailsInput>
  }

  export type ConfigurationItemUpsertWithoutDatabaseDetailsInput = {
    update: XOR<ConfigurationItemUpdateWithoutDatabaseDetailsInput, ConfigurationItemUncheckedUpdateWithoutDatabaseDetailsInput>
    create: XOR<ConfigurationItemCreateWithoutDatabaseDetailsInput, ConfigurationItemUncheckedCreateWithoutDatabaseDetailsInput>
    where?: ConfigurationItemWhereInput
  }

  export type ConfigurationItemUpdateToOneWithWhereWithoutDatabaseDetailsInput = {
    where?: ConfigurationItemWhereInput
    data: XOR<ConfigurationItemUpdateWithoutDatabaseDetailsInput, ConfigurationItemUncheckedUpdateWithoutDatabaseDetailsInput>
  }

  export type ConfigurationItemUpdateWithoutDatabaseDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ciType_rel?: CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput
    outgoingRelationships?: CiRelationshipUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateWithoutDatabaseDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemCreateWithoutVirtualDetailsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    ciType_rel: CiTypeCreateNestedOneWithoutConfigurationItemsInput
    outgoingRelationships?: CiRelationshipCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateWithoutVirtualDetailsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemCreateOrConnectWithoutVirtualDetailsInput = {
    where: ConfigurationItemWhereUniqueInput
    create: XOR<ConfigurationItemCreateWithoutVirtualDetailsInput, ConfigurationItemUncheckedCreateWithoutVirtualDetailsInput>
  }

  export type ConfigurationItemUpsertWithoutVirtualDetailsInput = {
    update: XOR<ConfigurationItemUpdateWithoutVirtualDetailsInput, ConfigurationItemUncheckedUpdateWithoutVirtualDetailsInput>
    create: XOR<ConfigurationItemCreateWithoutVirtualDetailsInput, ConfigurationItemUncheckedCreateWithoutVirtualDetailsInput>
    where?: ConfigurationItemWhereInput
  }

  export type ConfigurationItemUpdateToOneWithWhereWithoutVirtualDetailsInput = {
    where?: ConfigurationItemWhereInput
    data: XOR<ConfigurationItemUpdateWithoutVirtualDetailsInput, ConfigurationItemUncheckedUpdateWithoutVirtualDetailsInput>
  }

  export type ConfigurationItemUpdateWithoutVirtualDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ciType_rel?: CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput
    outgoingRelationships?: CiRelationshipUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateWithoutVirtualDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemCreateWithoutFacilityDetailsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    ciType_rel: CiTypeCreateNestedOneWithoutConfigurationItemsInput
    outgoingRelationships?: CiRelationshipCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateWithoutFacilityDetailsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemCreateOrConnectWithoutFacilityDetailsInput = {
    where: ConfigurationItemWhereUniqueInput
    create: XOR<ConfigurationItemCreateWithoutFacilityDetailsInput, ConfigurationItemUncheckedCreateWithoutFacilityDetailsInput>
  }

  export type ConfigurationItemUpsertWithoutFacilityDetailsInput = {
    update: XOR<ConfigurationItemUpdateWithoutFacilityDetailsInput, ConfigurationItemUncheckedUpdateWithoutFacilityDetailsInput>
    create: XOR<ConfigurationItemCreateWithoutFacilityDetailsInput, ConfigurationItemUncheckedCreateWithoutFacilityDetailsInput>
    where?: ConfigurationItemWhereInput
  }

  export type ConfigurationItemUpdateToOneWithWhereWithoutFacilityDetailsInput = {
    where?: ConfigurationItemWhereInput
    data: XOR<ConfigurationItemUpdateWithoutFacilityDetailsInput, ConfigurationItemUncheckedUpdateWithoutFacilityDetailsInput>
  }

  export type ConfigurationItemUpdateWithoutFacilityDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ciType_rel?: CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput
    outgoingRelationships?: CiRelationshipUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateWithoutFacilityDetailsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type CiBusinessServiceCreateWithoutBusinessServiceInput = {
    relationshipType: string
    criticality?: string | null
    createdAt?: Date | string
    configurationItem: ConfigurationItemCreateNestedOneWithoutBusinessServicesInput
  }

  export type CiBusinessServiceUncheckedCreateWithoutBusinessServiceInput = {
    ciId: string
    relationshipType: string
    criticality?: string | null
    createdAt?: Date | string
  }

  export type CiBusinessServiceCreateOrConnectWithoutBusinessServiceInput = {
    where: CiBusinessServiceWhereUniqueInput
    create: XOR<CiBusinessServiceCreateWithoutBusinessServiceInput, CiBusinessServiceUncheckedCreateWithoutBusinessServiceInput>
  }

  export type CiBusinessServiceCreateManyBusinessServiceInputEnvelope = {
    data: CiBusinessServiceCreateManyBusinessServiceInput | CiBusinessServiceCreateManyBusinessServiceInput[]
    skipDuplicates?: boolean
  }

  export type CiBusinessServiceUpsertWithWhereUniqueWithoutBusinessServiceInput = {
    where: CiBusinessServiceWhereUniqueInput
    update: XOR<CiBusinessServiceUpdateWithoutBusinessServiceInput, CiBusinessServiceUncheckedUpdateWithoutBusinessServiceInput>
    create: XOR<CiBusinessServiceCreateWithoutBusinessServiceInput, CiBusinessServiceUncheckedCreateWithoutBusinessServiceInput>
  }

  export type CiBusinessServiceUpdateWithWhereUniqueWithoutBusinessServiceInput = {
    where: CiBusinessServiceWhereUniqueInput
    data: XOR<CiBusinessServiceUpdateWithoutBusinessServiceInput, CiBusinessServiceUncheckedUpdateWithoutBusinessServiceInput>
  }

  export type CiBusinessServiceUpdateManyWithWhereWithoutBusinessServiceInput = {
    where: CiBusinessServiceScalarWhereInput
    data: XOR<CiBusinessServiceUpdateManyMutationInput, CiBusinessServiceUncheckedUpdateManyWithoutBusinessServiceInput>
  }

  export type ConfigurationItemCreateWithoutBusinessServicesInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    ciType_rel: CiTypeCreateNestedOneWithoutConfigurationItemsInput
    outgoingRelationships?: CiRelationshipCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateWithoutBusinessServicesInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemCreateOrConnectWithoutBusinessServicesInput = {
    where: ConfigurationItemWhereUniqueInput
    create: XOR<ConfigurationItemCreateWithoutBusinessServicesInput, ConfigurationItemUncheckedCreateWithoutBusinessServicesInput>
  }

  export type BusinessServiceCreateWithoutConfigurationItemsInput = {
    id?: string
    name: string
    description?: string | null
    businessOwner?: string | null
    technicalOwner?: string | null
    criticality?: string | null
    availabilityTarget?: Decimal | DecimalJsLike | number | string | null
    performanceTarget?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BusinessServiceUncheckedCreateWithoutConfigurationItemsInput = {
    id?: string
    name: string
    description?: string | null
    businessOwner?: string | null
    technicalOwner?: string | null
    criticality?: string | null
    availabilityTarget?: Decimal | DecimalJsLike | number | string | null
    performanceTarget?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BusinessServiceCreateOrConnectWithoutConfigurationItemsInput = {
    where: BusinessServiceWhereUniqueInput
    create: XOR<BusinessServiceCreateWithoutConfigurationItemsInput, BusinessServiceUncheckedCreateWithoutConfigurationItemsInput>
  }

  export type ConfigurationItemUpsertWithoutBusinessServicesInput = {
    update: XOR<ConfigurationItemUpdateWithoutBusinessServicesInput, ConfigurationItemUncheckedUpdateWithoutBusinessServicesInput>
    create: XOR<ConfigurationItemCreateWithoutBusinessServicesInput, ConfigurationItemUncheckedCreateWithoutBusinessServicesInput>
    where?: ConfigurationItemWhereInput
  }

  export type ConfigurationItemUpdateToOneWithWhereWithoutBusinessServicesInput = {
    where?: ConfigurationItemWhereInput
    data: XOR<ConfigurationItemUpdateWithoutBusinessServicesInput, ConfigurationItemUncheckedUpdateWithoutBusinessServicesInput>
  }

  export type ConfigurationItemUpdateWithoutBusinessServicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ciType_rel?: CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput
    outgoingRelationships?: CiRelationshipUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateWithoutBusinessServicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type BusinessServiceUpsertWithoutConfigurationItemsInput = {
    update: XOR<BusinessServiceUpdateWithoutConfigurationItemsInput, BusinessServiceUncheckedUpdateWithoutConfigurationItemsInput>
    create: XOR<BusinessServiceCreateWithoutConfigurationItemsInput, BusinessServiceUncheckedCreateWithoutConfigurationItemsInput>
    where?: BusinessServiceWhereInput
  }

  export type BusinessServiceUpdateToOneWithWhereWithoutConfigurationItemsInput = {
    where?: BusinessServiceWhereInput
    data: XOR<BusinessServiceUpdateWithoutConfigurationItemsInput, BusinessServiceUncheckedUpdateWithoutConfigurationItemsInput>
  }

  export type BusinessServiceUpdateWithoutConfigurationItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    businessOwner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessServiceUncheckedUpdateWithoutConfigurationItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    businessOwner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availabilityTarget?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    performanceTarget?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfigurationItemCreateWithoutIncidentsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    ciType_rel: CiTypeCreateNestedOneWithoutConfigurationItemsInput
    outgoingRelationships?: CiRelationshipCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipCreateNestedManyWithoutTargetCiInput
    changes?: CiChangeCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateWithoutIncidentsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput
    changes?: CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemCreateOrConnectWithoutIncidentsInput = {
    where: ConfigurationItemWhereUniqueInput
    create: XOR<ConfigurationItemCreateWithoutIncidentsInput, ConfigurationItemUncheckedCreateWithoutIncidentsInput>
  }

  export type ConfigurationItemUpsertWithoutIncidentsInput = {
    update: XOR<ConfigurationItemUpdateWithoutIncidentsInput, ConfigurationItemUncheckedUpdateWithoutIncidentsInput>
    create: XOR<ConfigurationItemCreateWithoutIncidentsInput, ConfigurationItemUncheckedCreateWithoutIncidentsInput>
    where?: ConfigurationItemWhereInput
  }

  export type ConfigurationItemUpdateToOneWithWhereWithoutIncidentsInput = {
    where?: ConfigurationItemWhereInput
    data: XOR<ConfigurationItemUpdateWithoutIncidentsInput, ConfigurationItemUncheckedUpdateWithoutIncidentsInput>
  }

  export type ConfigurationItemUpdateWithoutIncidentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ciType_rel?: CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput
    outgoingRelationships?: CiRelationshipUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUpdateManyWithoutTargetCiNestedInput
    changes?: CiChangeUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateWithoutIncidentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput
    changes?: CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemCreateWithoutChangesInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    ciType_rel: CiTypeCreateNestedOneWithoutConfigurationItemsInput
    outgoingRelationships?: CiRelationshipCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateWithoutChangesInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemCreateOrConnectWithoutChangesInput = {
    where: ConfigurationItemWhereUniqueInput
    create: XOR<ConfigurationItemCreateWithoutChangesInput, ConfigurationItemUncheckedCreateWithoutChangesInput>
  }

  export type ConfigurationItemUpsertWithoutChangesInput = {
    update: XOR<ConfigurationItemUpdateWithoutChangesInput, ConfigurationItemUncheckedUpdateWithoutChangesInput>
    create: XOR<ConfigurationItemCreateWithoutChangesInput, ConfigurationItemUncheckedCreateWithoutChangesInput>
    where?: ConfigurationItemWhereInput
  }

  export type ConfigurationItemUpdateToOneWithWhereWithoutChangesInput = {
    where?: ConfigurationItemWhereInput
    data: XOR<ConfigurationItemUpdateWithoutChangesInput, ConfigurationItemUncheckedUpdateWithoutChangesInput>
  }

  export type ConfigurationItemUpdateWithoutChangesInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ciType_rel?: CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput
    outgoingRelationships?: CiRelationshipUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateWithoutChangesInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type DiscoveredItemCreateWithoutDiscoveryRunInput = {
    id?: string
    ciId?: string | null
    discoveredData: JsonNullValueInput | InputJsonValue
    fingerprint: string
    status: string
    processingNotes?: string | null
    discoveredAt?: Date | string
    processedAt?: Date | string | null
  }

  export type DiscoveredItemUncheckedCreateWithoutDiscoveryRunInput = {
    id?: string
    ciId?: string | null
    discoveredData: JsonNullValueInput | InputJsonValue
    fingerprint: string
    status: string
    processingNotes?: string | null
    discoveredAt?: Date | string
    processedAt?: Date | string | null
  }

  export type DiscoveredItemCreateOrConnectWithoutDiscoveryRunInput = {
    where: DiscoveredItemWhereUniqueInput
    create: XOR<DiscoveredItemCreateWithoutDiscoveryRunInput, DiscoveredItemUncheckedCreateWithoutDiscoveryRunInput>
  }

  export type DiscoveredItemCreateManyDiscoveryRunInputEnvelope = {
    data: DiscoveredItemCreateManyDiscoveryRunInput | DiscoveredItemCreateManyDiscoveryRunInput[]
    skipDuplicates?: boolean
  }

  export type DiscoveredItemUpsertWithWhereUniqueWithoutDiscoveryRunInput = {
    where: DiscoveredItemWhereUniqueInput
    update: XOR<DiscoveredItemUpdateWithoutDiscoveryRunInput, DiscoveredItemUncheckedUpdateWithoutDiscoveryRunInput>
    create: XOR<DiscoveredItemCreateWithoutDiscoveryRunInput, DiscoveredItemUncheckedCreateWithoutDiscoveryRunInput>
  }

  export type DiscoveredItemUpdateWithWhereUniqueWithoutDiscoveryRunInput = {
    where: DiscoveredItemWhereUniqueInput
    data: XOR<DiscoveredItemUpdateWithoutDiscoveryRunInput, DiscoveredItemUncheckedUpdateWithoutDiscoveryRunInput>
  }

  export type DiscoveredItemUpdateManyWithWhereWithoutDiscoveryRunInput = {
    where: DiscoveredItemScalarWhereInput
    data: XOR<DiscoveredItemUpdateManyMutationInput, DiscoveredItemUncheckedUpdateManyWithoutDiscoveryRunInput>
  }

  export type DiscoveredItemScalarWhereInput = {
    AND?: DiscoveredItemScalarWhereInput | DiscoveredItemScalarWhereInput[]
    OR?: DiscoveredItemScalarWhereInput[]
    NOT?: DiscoveredItemScalarWhereInput | DiscoveredItemScalarWhereInput[]
    id?: StringFilter<"DiscoveredItem"> | string
    runId?: StringFilter<"DiscoveredItem"> | string
    ciId?: StringNullableFilter<"DiscoveredItem"> | string | null
    discoveredData?: JsonFilter<"DiscoveredItem">
    fingerprint?: StringFilter<"DiscoveredItem"> | string
    status?: StringFilter<"DiscoveredItem"> | string
    processingNotes?: StringNullableFilter<"DiscoveredItem"> | string | null
    discoveredAt?: DateTimeFilter<"DiscoveredItem"> | Date | string
    processedAt?: DateTimeNullableFilter<"DiscoveredItem"> | Date | string | null
  }

  export type DiscoveryRunCreateWithoutDiscoveredItemsInput = {
    id?: string
    scheduleId?: string | null
    status: string
    startTime: Date | string
    endTime?: Date | string | null
    itemsDiscovered?: number
    itemsUpdated?: number
    itemsCreated?: number
    errors?: NullableJsonNullValueInput | InputJsonValue
  }

  export type DiscoveryRunUncheckedCreateWithoutDiscoveredItemsInput = {
    id?: string
    scheduleId?: string | null
    status: string
    startTime: Date | string
    endTime?: Date | string | null
    itemsDiscovered?: number
    itemsUpdated?: number
    itemsCreated?: number
    errors?: NullableJsonNullValueInput | InputJsonValue
  }

  export type DiscoveryRunCreateOrConnectWithoutDiscoveredItemsInput = {
    where: DiscoveryRunWhereUniqueInput
    create: XOR<DiscoveryRunCreateWithoutDiscoveredItemsInput, DiscoveryRunUncheckedCreateWithoutDiscoveredItemsInput>
  }

  export type DiscoveryRunUpsertWithoutDiscoveredItemsInput = {
    update: XOR<DiscoveryRunUpdateWithoutDiscoveredItemsInput, DiscoveryRunUncheckedUpdateWithoutDiscoveredItemsInput>
    create: XOR<DiscoveryRunCreateWithoutDiscoveredItemsInput, DiscoveryRunUncheckedCreateWithoutDiscoveredItemsInput>
    where?: DiscoveryRunWhereInput
  }

  export type DiscoveryRunUpdateToOneWithWhereWithoutDiscoveredItemsInput = {
    where?: DiscoveryRunWhereInput
    data: XOR<DiscoveryRunUpdateWithoutDiscoveredItemsInput, DiscoveryRunUncheckedUpdateWithoutDiscoveredItemsInput>
  }

  export type DiscoveryRunUpdateWithoutDiscoveredItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    itemsDiscovered?: IntFieldUpdateOperationsInput | number
    itemsUpdated?: IntFieldUpdateOperationsInput | number
    itemsCreated?: IntFieldUpdateOperationsInput | number
    errors?: NullableJsonNullValueInput | InputJsonValue
  }

  export type DiscoveryRunUncheckedUpdateWithoutDiscoveredItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    itemsDiscovered?: IntFieldUpdateOperationsInput | number
    itemsUpdated?: IntFieldUpdateOperationsInput | number
    itemsCreated?: IntFieldUpdateOperationsInput | number
    errors?: NullableJsonNullValueInput | InputJsonValue
  }

  export type SupportGroupMemberCreateWithoutSupportGroupInput = {
    id?: string
    userId: string
    role?: string
    isPrimary?: boolean
    isActive?: boolean
    startDate?: Date | string | null
    endDate?: Date | string | null
    assignedAt?: Date | string
    assignedBy?: string | null
  }

  export type SupportGroupMemberUncheckedCreateWithoutSupportGroupInput = {
    id?: string
    userId: string
    role?: string
    isPrimary?: boolean
    isActive?: boolean
    startDate?: Date | string | null
    endDate?: Date | string | null
    assignedAt?: Date | string
    assignedBy?: string | null
  }

  export type SupportGroupMemberCreateOrConnectWithoutSupportGroupInput = {
    where: SupportGroupMemberWhereUniqueInput
    create: XOR<SupportGroupMemberCreateWithoutSupportGroupInput, SupportGroupMemberUncheckedCreateWithoutSupportGroupInput>
  }

  export type SupportGroupMemberCreateManySupportGroupInputEnvelope = {
    data: SupportGroupMemberCreateManySupportGroupInput | SupportGroupMemberCreateManySupportGroupInput[]
    skipDuplicates?: boolean
  }

  export type SupportGroupPermissionCreateWithoutSupportGroupInput = {
    id?: string
    resource: string
    action: string
    scope?: string | null
    conditions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    grantedAt?: Date | string
    grantedBy?: string | null
  }

  export type SupportGroupPermissionUncheckedCreateWithoutSupportGroupInput = {
    id?: string
    resource: string
    action: string
    scope?: string | null
    conditions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    grantedAt?: Date | string
    grantedBy?: string | null
  }

  export type SupportGroupPermissionCreateOrConnectWithoutSupportGroupInput = {
    where: SupportGroupPermissionWhereUniqueInput
    create: XOR<SupportGroupPermissionCreateWithoutSupportGroupInput, SupportGroupPermissionUncheckedCreateWithoutSupportGroupInput>
  }

  export type SupportGroupPermissionCreateManySupportGroupInputEnvelope = {
    data: SupportGroupPermissionCreateManySupportGroupInput | SupportGroupPermissionCreateManySupportGroupInput[]
    skipDuplicates?: boolean
  }

  export type ConfigurationItemCreateWithoutSupportGroupsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    ciType_rel: CiTypeCreateNestedOneWithoutConfigurationItemsInput
    outgoingRelationships?: CiRelationshipCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput
    hardwareDetails?: HardwareCiCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateWithoutSupportGroupsInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput
    hardwareDetails?: HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemCreateOrConnectWithoutSupportGroupsInput = {
    where: ConfigurationItemWhereUniqueInput
    create: XOR<ConfigurationItemCreateWithoutSupportGroupsInput, ConfigurationItemUncheckedCreateWithoutSupportGroupsInput>
  }

  export type CiOwnershipCreateWithoutSupportGroupInput = {
    id?: string
    ownershipType: string
    userId: string
    isPrimary?: boolean
    isActive?: boolean
    startDate?: Date | string | null
    endDate?: Date | string | null
    responsibilities?: CiOwnershipCreateresponsibilitiesInput | string[]
    assignedAt?: Date | string
    assignedBy?: string | null
    configurationItem: ConfigurationItemCreateNestedOneWithoutOwnershipInput
  }

  export type CiOwnershipUncheckedCreateWithoutSupportGroupInput = {
    id?: string
    ciId: string
    ownershipType: string
    userId: string
    isPrimary?: boolean
    isActive?: boolean
    startDate?: Date | string | null
    endDate?: Date | string | null
    responsibilities?: CiOwnershipCreateresponsibilitiesInput | string[]
    assignedAt?: Date | string
    assignedBy?: string | null
  }

  export type CiOwnershipCreateOrConnectWithoutSupportGroupInput = {
    where: CiOwnershipWhereUniqueInput
    create: XOR<CiOwnershipCreateWithoutSupportGroupInput, CiOwnershipUncheckedCreateWithoutSupportGroupInput>
  }

  export type CiOwnershipCreateManySupportGroupInputEnvelope = {
    data: CiOwnershipCreateManySupportGroupInput | CiOwnershipCreateManySupportGroupInput[]
    skipDuplicates?: boolean
  }

  export type SupportGroupCreateWithoutEscalationSourceInput = {
    id?: string
    name: string
    description?: string | null
    type?: string
    email?: string | null
    phone?: string | null
    manager?: string | null
    isActive?: boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: number | null
    externalId?: string | null
    adGroupDn?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    members?: SupportGroupMemberCreateNestedManyWithoutSupportGroupInput
    permissions?: SupportGroupPermissionCreateNestedManyWithoutSupportGroupInput
    configurationItems?: ConfigurationItemCreateNestedManyWithoutSupportGroupsInput
    ownerships?: CiOwnershipCreateNestedManyWithoutSupportGroupInput
    escalationTarget?: SupportGroupCreateNestedManyWithoutEscalationSourceInput
  }

  export type SupportGroupUncheckedCreateWithoutEscalationSourceInput = {
    id?: string
    name: string
    description?: string | null
    type?: string
    email?: string | null
    phone?: string | null
    manager?: string | null
    isActive?: boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: number | null
    externalId?: string | null
    adGroupDn?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    members?: SupportGroupMemberUncheckedCreateNestedManyWithoutSupportGroupInput
    permissions?: SupportGroupPermissionUncheckedCreateNestedManyWithoutSupportGroupInput
    configurationItems?: ConfigurationItemUncheckedCreateNestedManyWithoutSupportGroupsInput
    ownerships?: CiOwnershipUncheckedCreateNestedManyWithoutSupportGroupInput
    escalationTarget?: SupportGroupUncheckedCreateNestedManyWithoutEscalationSourceInput
  }

  export type SupportGroupCreateOrConnectWithoutEscalationSourceInput = {
    where: SupportGroupWhereUniqueInput
    create: XOR<SupportGroupCreateWithoutEscalationSourceInput, SupportGroupUncheckedCreateWithoutEscalationSourceInput>
  }

  export type SupportGroupCreateManyEscalationSourceInputEnvelope = {
    data: SupportGroupCreateManyEscalationSourceInput | SupportGroupCreateManyEscalationSourceInput[]
    skipDuplicates?: boolean
  }

  export type SupportGroupCreateWithoutEscalationTargetInput = {
    id?: string
    name: string
    description?: string | null
    type?: string
    email?: string | null
    phone?: string | null
    manager?: string | null
    isActive?: boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: number | null
    externalId?: string | null
    adGroupDn?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    members?: SupportGroupMemberCreateNestedManyWithoutSupportGroupInput
    permissions?: SupportGroupPermissionCreateNestedManyWithoutSupportGroupInput
    configurationItems?: ConfigurationItemCreateNestedManyWithoutSupportGroupsInput
    ownerships?: CiOwnershipCreateNestedManyWithoutSupportGroupInput
    escalationSource?: SupportGroupCreateNestedOneWithoutEscalationTargetInput
  }

  export type SupportGroupUncheckedCreateWithoutEscalationTargetInput = {
    id?: string
    name: string
    description?: string | null
    type?: string
    email?: string | null
    phone?: string | null
    manager?: string | null
    escalationGroup?: string | null
    isActive?: boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: number | null
    externalId?: string | null
    adGroupDn?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    members?: SupportGroupMemberUncheckedCreateNestedManyWithoutSupportGroupInput
    permissions?: SupportGroupPermissionUncheckedCreateNestedManyWithoutSupportGroupInput
    configurationItems?: ConfigurationItemUncheckedCreateNestedManyWithoutSupportGroupsInput
    ownerships?: CiOwnershipUncheckedCreateNestedManyWithoutSupportGroupInput
  }

  export type SupportGroupCreateOrConnectWithoutEscalationTargetInput = {
    where: SupportGroupWhereUniqueInput
    create: XOR<SupportGroupCreateWithoutEscalationTargetInput, SupportGroupUncheckedCreateWithoutEscalationTargetInput>
  }

  export type SupportGroupMemberUpsertWithWhereUniqueWithoutSupportGroupInput = {
    where: SupportGroupMemberWhereUniqueInput
    update: XOR<SupportGroupMemberUpdateWithoutSupportGroupInput, SupportGroupMemberUncheckedUpdateWithoutSupportGroupInput>
    create: XOR<SupportGroupMemberCreateWithoutSupportGroupInput, SupportGroupMemberUncheckedCreateWithoutSupportGroupInput>
  }

  export type SupportGroupMemberUpdateWithWhereUniqueWithoutSupportGroupInput = {
    where: SupportGroupMemberWhereUniqueInput
    data: XOR<SupportGroupMemberUpdateWithoutSupportGroupInput, SupportGroupMemberUncheckedUpdateWithoutSupportGroupInput>
  }

  export type SupportGroupMemberUpdateManyWithWhereWithoutSupportGroupInput = {
    where: SupportGroupMemberScalarWhereInput
    data: XOR<SupportGroupMemberUpdateManyMutationInput, SupportGroupMemberUncheckedUpdateManyWithoutSupportGroupInput>
  }

  export type SupportGroupMemberScalarWhereInput = {
    AND?: SupportGroupMemberScalarWhereInput | SupportGroupMemberScalarWhereInput[]
    OR?: SupportGroupMemberScalarWhereInput[]
    NOT?: SupportGroupMemberScalarWhereInput | SupportGroupMemberScalarWhereInput[]
    id?: StringFilter<"SupportGroupMember"> | string
    supportGroupId?: StringFilter<"SupportGroupMember"> | string
    userId?: StringFilter<"SupportGroupMember"> | string
    role?: StringFilter<"SupportGroupMember"> | string
    isPrimary?: BoolFilter<"SupportGroupMember"> | boolean
    isActive?: BoolFilter<"SupportGroupMember"> | boolean
    startDate?: DateTimeNullableFilter<"SupportGroupMember"> | Date | string | null
    endDate?: DateTimeNullableFilter<"SupportGroupMember"> | Date | string | null
    assignedAt?: DateTimeFilter<"SupportGroupMember"> | Date | string
    assignedBy?: StringNullableFilter<"SupportGroupMember"> | string | null
  }

  export type SupportGroupPermissionUpsertWithWhereUniqueWithoutSupportGroupInput = {
    where: SupportGroupPermissionWhereUniqueInput
    update: XOR<SupportGroupPermissionUpdateWithoutSupportGroupInput, SupportGroupPermissionUncheckedUpdateWithoutSupportGroupInput>
    create: XOR<SupportGroupPermissionCreateWithoutSupportGroupInput, SupportGroupPermissionUncheckedCreateWithoutSupportGroupInput>
  }

  export type SupportGroupPermissionUpdateWithWhereUniqueWithoutSupportGroupInput = {
    where: SupportGroupPermissionWhereUniqueInput
    data: XOR<SupportGroupPermissionUpdateWithoutSupportGroupInput, SupportGroupPermissionUncheckedUpdateWithoutSupportGroupInput>
  }

  export type SupportGroupPermissionUpdateManyWithWhereWithoutSupportGroupInput = {
    where: SupportGroupPermissionScalarWhereInput
    data: XOR<SupportGroupPermissionUpdateManyMutationInput, SupportGroupPermissionUncheckedUpdateManyWithoutSupportGroupInput>
  }

  export type SupportGroupPermissionScalarWhereInput = {
    AND?: SupportGroupPermissionScalarWhereInput | SupportGroupPermissionScalarWhereInput[]
    OR?: SupportGroupPermissionScalarWhereInput[]
    NOT?: SupportGroupPermissionScalarWhereInput | SupportGroupPermissionScalarWhereInput[]
    id?: StringFilter<"SupportGroupPermission"> | string
    supportGroupId?: StringFilter<"SupportGroupPermission"> | string
    resource?: StringFilter<"SupportGroupPermission"> | string
    action?: StringFilter<"SupportGroupPermission"> | string
    scope?: StringNullableFilter<"SupportGroupPermission"> | string | null
    conditions?: JsonNullableFilter<"SupportGroupPermission">
    isActive?: BoolFilter<"SupportGroupPermission"> | boolean
    grantedAt?: DateTimeFilter<"SupportGroupPermission"> | Date | string
    grantedBy?: StringNullableFilter<"SupportGroupPermission"> | string | null
  }

  export type ConfigurationItemUpsertWithWhereUniqueWithoutSupportGroupsInput = {
    where: ConfigurationItemWhereUniqueInput
    update: XOR<ConfigurationItemUpdateWithoutSupportGroupsInput, ConfigurationItemUncheckedUpdateWithoutSupportGroupsInput>
    create: XOR<ConfigurationItemCreateWithoutSupportGroupsInput, ConfigurationItemUncheckedCreateWithoutSupportGroupsInput>
  }

  export type ConfigurationItemUpdateWithWhereUniqueWithoutSupportGroupsInput = {
    where: ConfigurationItemWhereUniqueInput
    data: XOR<ConfigurationItemUpdateWithoutSupportGroupsInput, ConfigurationItemUncheckedUpdateWithoutSupportGroupsInput>
  }

  export type ConfigurationItemUpdateManyWithWhereWithoutSupportGroupsInput = {
    where: ConfigurationItemScalarWhereInput
    data: XOR<ConfigurationItemUpdateManyMutationInput, ConfigurationItemUncheckedUpdateManyWithoutSupportGroupsInput>
  }

  export type CiOwnershipUpsertWithWhereUniqueWithoutSupportGroupInput = {
    where: CiOwnershipWhereUniqueInput
    update: XOR<CiOwnershipUpdateWithoutSupportGroupInput, CiOwnershipUncheckedUpdateWithoutSupportGroupInput>
    create: XOR<CiOwnershipCreateWithoutSupportGroupInput, CiOwnershipUncheckedCreateWithoutSupportGroupInput>
  }

  export type CiOwnershipUpdateWithWhereUniqueWithoutSupportGroupInput = {
    where: CiOwnershipWhereUniqueInput
    data: XOR<CiOwnershipUpdateWithoutSupportGroupInput, CiOwnershipUncheckedUpdateWithoutSupportGroupInput>
  }

  export type CiOwnershipUpdateManyWithWhereWithoutSupportGroupInput = {
    where: CiOwnershipScalarWhereInput
    data: XOR<CiOwnershipUpdateManyMutationInput, CiOwnershipUncheckedUpdateManyWithoutSupportGroupInput>
  }

  export type SupportGroupUpsertWithWhereUniqueWithoutEscalationSourceInput = {
    where: SupportGroupWhereUniqueInput
    update: XOR<SupportGroupUpdateWithoutEscalationSourceInput, SupportGroupUncheckedUpdateWithoutEscalationSourceInput>
    create: XOR<SupportGroupCreateWithoutEscalationSourceInput, SupportGroupUncheckedCreateWithoutEscalationSourceInput>
  }

  export type SupportGroupUpdateWithWhereUniqueWithoutEscalationSourceInput = {
    where: SupportGroupWhereUniqueInput
    data: XOR<SupportGroupUpdateWithoutEscalationSourceInput, SupportGroupUncheckedUpdateWithoutEscalationSourceInput>
  }

  export type SupportGroupUpdateManyWithWhereWithoutEscalationSourceInput = {
    where: SupportGroupScalarWhereInput
    data: XOR<SupportGroupUpdateManyMutationInput, SupportGroupUncheckedUpdateManyWithoutEscalationSourceInput>
  }

  export type SupportGroupUpsertWithoutEscalationTargetInput = {
    update: XOR<SupportGroupUpdateWithoutEscalationTargetInput, SupportGroupUncheckedUpdateWithoutEscalationTargetInput>
    create: XOR<SupportGroupCreateWithoutEscalationTargetInput, SupportGroupUncheckedCreateWithoutEscalationTargetInput>
    where?: SupportGroupWhereInput
  }

  export type SupportGroupUpdateToOneWithWhereWithoutEscalationTargetInput = {
    where?: SupportGroupWhereInput
    data: XOR<SupportGroupUpdateWithoutEscalationTargetInput, SupportGroupUncheckedUpdateWithoutEscalationTargetInput>
  }

  export type SupportGroupUpdateWithoutEscalationTargetInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    members?: SupportGroupMemberUpdateManyWithoutSupportGroupNestedInput
    permissions?: SupportGroupPermissionUpdateManyWithoutSupportGroupNestedInput
    configurationItems?: ConfigurationItemUpdateManyWithoutSupportGroupsNestedInput
    ownerships?: CiOwnershipUpdateManyWithoutSupportGroupNestedInput
    escalationSource?: SupportGroupUpdateOneWithoutEscalationTargetNestedInput
  }

  export type SupportGroupUncheckedUpdateWithoutEscalationTargetInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    escalationGroup?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    members?: SupportGroupMemberUncheckedUpdateManyWithoutSupportGroupNestedInput
    permissions?: SupportGroupPermissionUncheckedUpdateManyWithoutSupportGroupNestedInput
    configurationItems?: ConfigurationItemUncheckedUpdateManyWithoutSupportGroupsNestedInput
    ownerships?: CiOwnershipUncheckedUpdateManyWithoutSupportGroupNestedInput
  }

  export type SupportGroupCreateWithoutMembersInput = {
    id?: string
    name: string
    description?: string | null
    type?: string
    email?: string | null
    phone?: string | null
    manager?: string | null
    isActive?: boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: number | null
    externalId?: string | null
    adGroupDn?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    permissions?: SupportGroupPermissionCreateNestedManyWithoutSupportGroupInput
    configurationItems?: ConfigurationItemCreateNestedManyWithoutSupportGroupsInput
    ownerships?: CiOwnershipCreateNestedManyWithoutSupportGroupInput
    escalationTarget?: SupportGroupCreateNestedManyWithoutEscalationSourceInput
    escalationSource?: SupportGroupCreateNestedOneWithoutEscalationTargetInput
  }

  export type SupportGroupUncheckedCreateWithoutMembersInput = {
    id?: string
    name: string
    description?: string | null
    type?: string
    email?: string | null
    phone?: string | null
    manager?: string | null
    escalationGroup?: string | null
    isActive?: boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: number | null
    externalId?: string | null
    adGroupDn?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    permissions?: SupportGroupPermissionUncheckedCreateNestedManyWithoutSupportGroupInput
    configurationItems?: ConfigurationItemUncheckedCreateNestedManyWithoutSupportGroupsInput
    ownerships?: CiOwnershipUncheckedCreateNestedManyWithoutSupportGroupInput
    escalationTarget?: SupportGroupUncheckedCreateNestedManyWithoutEscalationSourceInput
  }

  export type SupportGroupCreateOrConnectWithoutMembersInput = {
    where: SupportGroupWhereUniqueInput
    create: XOR<SupportGroupCreateWithoutMembersInput, SupportGroupUncheckedCreateWithoutMembersInput>
  }

  export type SupportGroupUpsertWithoutMembersInput = {
    update: XOR<SupportGroupUpdateWithoutMembersInput, SupportGroupUncheckedUpdateWithoutMembersInput>
    create: XOR<SupportGroupCreateWithoutMembersInput, SupportGroupUncheckedCreateWithoutMembersInput>
    where?: SupportGroupWhereInput
  }

  export type SupportGroupUpdateToOneWithWhereWithoutMembersInput = {
    where?: SupportGroupWhereInput
    data: XOR<SupportGroupUpdateWithoutMembersInput, SupportGroupUncheckedUpdateWithoutMembersInput>
  }

  export type SupportGroupUpdateWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    permissions?: SupportGroupPermissionUpdateManyWithoutSupportGroupNestedInput
    configurationItems?: ConfigurationItemUpdateManyWithoutSupportGroupsNestedInput
    ownerships?: CiOwnershipUpdateManyWithoutSupportGroupNestedInput
    escalationTarget?: SupportGroupUpdateManyWithoutEscalationSourceNestedInput
    escalationSource?: SupportGroupUpdateOneWithoutEscalationTargetNestedInput
  }

  export type SupportGroupUncheckedUpdateWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    escalationGroup?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    permissions?: SupportGroupPermissionUncheckedUpdateManyWithoutSupportGroupNestedInput
    configurationItems?: ConfigurationItemUncheckedUpdateManyWithoutSupportGroupsNestedInput
    ownerships?: CiOwnershipUncheckedUpdateManyWithoutSupportGroupNestedInput
    escalationTarget?: SupportGroupUncheckedUpdateManyWithoutEscalationSourceNestedInput
  }

  export type SupportGroupCreateWithoutPermissionsInput = {
    id?: string
    name: string
    description?: string | null
    type?: string
    email?: string | null
    phone?: string | null
    manager?: string | null
    isActive?: boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: number | null
    externalId?: string | null
    adGroupDn?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    members?: SupportGroupMemberCreateNestedManyWithoutSupportGroupInput
    configurationItems?: ConfigurationItemCreateNestedManyWithoutSupportGroupsInput
    ownerships?: CiOwnershipCreateNestedManyWithoutSupportGroupInput
    escalationTarget?: SupportGroupCreateNestedManyWithoutEscalationSourceInput
    escalationSource?: SupportGroupCreateNestedOneWithoutEscalationTargetInput
  }

  export type SupportGroupUncheckedCreateWithoutPermissionsInput = {
    id?: string
    name: string
    description?: string | null
    type?: string
    email?: string | null
    phone?: string | null
    manager?: string | null
    escalationGroup?: string | null
    isActive?: boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: number | null
    externalId?: string | null
    adGroupDn?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    members?: SupportGroupMemberUncheckedCreateNestedManyWithoutSupportGroupInput
    configurationItems?: ConfigurationItemUncheckedCreateNestedManyWithoutSupportGroupsInput
    ownerships?: CiOwnershipUncheckedCreateNestedManyWithoutSupportGroupInput
    escalationTarget?: SupportGroupUncheckedCreateNestedManyWithoutEscalationSourceInput
  }

  export type SupportGroupCreateOrConnectWithoutPermissionsInput = {
    where: SupportGroupWhereUniqueInput
    create: XOR<SupportGroupCreateWithoutPermissionsInput, SupportGroupUncheckedCreateWithoutPermissionsInput>
  }

  export type SupportGroupUpsertWithoutPermissionsInput = {
    update: XOR<SupportGroupUpdateWithoutPermissionsInput, SupportGroupUncheckedUpdateWithoutPermissionsInput>
    create: XOR<SupportGroupCreateWithoutPermissionsInput, SupportGroupUncheckedCreateWithoutPermissionsInput>
    where?: SupportGroupWhereInput
  }

  export type SupportGroupUpdateToOneWithWhereWithoutPermissionsInput = {
    where?: SupportGroupWhereInput
    data: XOR<SupportGroupUpdateWithoutPermissionsInput, SupportGroupUncheckedUpdateWithoutPermissionsInput>
  }

  export type SupportGroupUpdateWithoutPermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    members?: SupportGroupMemberUpdateManyWithoutSupportGroupNestedInput
    configurationItems?: ConfigurationItemUpdateManyWithoutSupportGroupsNestedInput
    ownerships?: CiOwnershipUpdateManyWithoutSupportGroupNestedInput
    escalationTarget?: SupportGroupUpdateManyWithoutEscalationSourceNestedInput
    escalationSource?: SupportGroupUpdateOneWithoutEscalationTargetNestedInput
  }

  export type SupportGroupUncheckedUpdateWithoutPermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    escalationGroup?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    members?: SupportGroupMemberUncheckedUpdateManyWithoutSupportGroupNestedInput
    configurationItems?: ConfigurationItemUncheckedUpdateManyWithoutSupportGroupsNestedInput
    ownerships?: CiOwnershipUncheckedUpdateManyWithoutSupportGroupNestedInput
    escalationTarget?: SupportGroupUncheckedUpdateManyWithoutEscalationSourceNestedInput
  }

  export type ConfigurationItemCreateWithoutOwnershipInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    ciType_rel: CiTypeCreateNestedOneWithoutConfigurationItemsInput
    outgoingRelationships?: CiRelationshipCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateWithoutOwnershipInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput
    inventoryMapping?: CmdbInventoryMappingUncheckedCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemCreateOrConnectWithoutOwnershipInput = {
    where: ConfigurationItemWhereUniqueInput
    create: XOR<ConfigurationItemCreateWithoutOwnershipInput, ConfigurationItemUncheckedCreateWithoutOwnershipInput>
  }

  export type SupportGroupCreateWithoutOwnershipsInput = {
    id?: string
    name: string
    description?: string | null
    type?: string
    email?: string | null
    phone?: string | null
    manager?: string | null
    isActive?: boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: number | null
    externalId?: string | null
    adGroupDn?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    members?: SupportGroupMemberCreateNestedManyWithoutSupportGroupInput
    permissions?: SupportGroupPermissionCreateNestedManyWithoutSupportGroupInput
    configurationItems?: ConfigurationItemCreateNestedManyWithoutSupportGroupsInput
    escalationTarget?: SupportGroupCreateNestedManyWithoutEscalationSourceInput
    escalationSource?: SupportGroupCreateNestedOneWithoutEscalationTargetInput
  }

  export type SupportGroupUncheckedCreateWithoutOwnershipsInput = {
    id?: string
    name: string
    description?: string | null
    type?: string
    email?: string | null
    phone?: string | null
    manager?: string | null
    escalationGroup?: string | null
    isActive?: boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: number | null
    externalId?: string | null
    adGroupDn?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    members?: SupportGroupMemberUncheckedCreateNestedManyWithoutSupportGroupInput
    permissions?: SupportGroupPermissionUncheckedCreateNestedManyWithoutSupportGroupInput
    configurationItems?: ConfigurationItemUncheckedCreateNestedManyWithoutSupportGroupsInput
    escalationTarget?: SupportGroupUncheckedCreateNestedManyWithoutEscalationSourceInput
  }

  export type SupportGroupCreateOrConnectWithoutOwnershipsInput = {
    where: SupportGroupWhereUniqueInput
    create: XOR<SupportGroupCreateWithoutOwnershipsInput, SupportGroupUncheckedCreateWithoutOwnershipsInput>
  }

  export type ConfigurationItemUpsertWithoutOwnershipInput = {
    update: XOR<ConfigurationItemUpdateWithoutOwnershipInput, ConfigurationItemUncheckedUpdateWithoutOwnershipInput>
    create: XOR<ConfigurationItemCreateWithoutOwnershipInput, ConfigurationItemUncheckedCreateWithoutOwnershipInput>
    where?: ConfigurationItemWhereInput
  }

  export type ConfigurationItemUpdateToOneWithWhereWithoutOwnershipInput = {
    where?: ConfigurationItemWhereInput
    data: XOR<ConfigurationItemUpdateWithoutOwnershipInput, ConfigurationItemUncheckedUpdateWithoutOwnershipInput>
  }

  export type ConfigurationItemUpdateWithoutOwnershipInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ciType_rel?: CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput
    outgoingRelationships?: CiRelationshipUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateWithoutOwnershipInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type SupportGroupUpsertWithoutOwnershipsInput = {
    update: XOR<SupportGroupUpdateWithoutOwnershipsInput, SupportGroupUncheckedUpdateWithoutOwnershipsInput>
    create: XOR<SupportGroupCreateWithoutOwnershipsInput, SupportGroupUncheckedCreateWithoutOwnershipsInput>
    where?: SupportGroupWhereInput
  }

  export type SupportGroupUpdateToOneWithWhereWithoutOwnershipsInput = {
    where?: SupportGroupWhereInput
    data: XOR<SupportGroupUpdateWithoutOwnershipsInput, SupportGroupUncheckedUpdateWithoutOwnershipsInput>
  }

  export type SupportGroupUpdateWithoutOwnershipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    members?: SupportGroupMemberUpdateManyWithoutSupportGroupNestedInput
    permissions?: SupportGroupPermissionUpdateManyWithoutSupportGroupNestedInput
    configurationItems?: ConfigurationItemUpdateManyWithoutSupportGroupsNestedInput
    escalationTarget?: SupportGroupUpdateManyWithoutEscalationSourceNestedInput
    escalationSource?: SupportGroupUpdateOneWithoutEscalationTargetNestedInput
  }

  export type SupportGroupUncheckedUpdateWithoutOwnershipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    escalationGroup?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    members?: SupportGroupMemberUncheckedUpdateManyWithoutSupportGroupNestedInput
    permissions?: SupportGroupPermissionUncheckedUpdateManyWithoutSupportGroupNestedInput
    configurationItems?: ConfigurationItemUncheckedUpdateManyWithoutSupportGroupsNestedInput
    escalationTarget?: SupportGroupUncheckedUpdateManyWithoutEscalationSourceNestedInput
  }

  export type ConfigurationItemCreateWithoutInventoryMappingInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    ciType_rel: CiTypeCreateNestedOneWithoutConfigurationItemsInput
    outgoingRelationships?: CiRelationshipCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemUncheckedCreateWithoutInventoryMappingInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciType: string
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    outgoingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutSourceCiInput
    incomingRelationships?: CiRelationshipUncheckedCreateNestedManyWithoutTargetCiInput
    incidents?: CiIncidentUncheckedCreateNestedManyWithoutConfigurationItemInput
    changes?: CiChangeUncheckedCreateNestedManyWithoutConfigurationItemInput
    businessServices?: CiBusinessServiceUncheckedCreateNestedManyWithoutConfigurationItemInput
    ownership?: CiOwnershipUncheckedCreateNestedManyWithoutConfigurationItemInput
    supportGroups?: SupportGroupUncheckedCreateNestedManyWithoutConfigurationItemsInput
    hardwareDetails?: HardwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    softwareDetails?: SoftwareCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    applicationDetails?: ApplicationCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    networkDetails?: NetworkCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    serviceDetails?: ServiceCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    databaseDetails?: DatabaseCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    virtualDetails?: VirtualCiUncheckedCreateNestedOneWithoutConfigurationItemInput
    facilityDetails?: FacilityCiUncheckedCreateNestedOneWithoutConfigurationItemInput
  }

  export type ConfigurationItemCreateOrConnectWithoutInventoryMappingInput = {
    where: ConfigurationItemWhereUniqueInput
    create: XOR<ConfigurationItemCreateWithoutInventoryMappingInput, ConfigurationItemUncheckedCreateWithoutInventoryMappingInput>
  }

  export type ConfigurationItemUpsertWithoutInventoryMappingInput = {
    update: XOR<ConfigurationItemUpdateWithoutInventoryMappingInput, ConfigurationItemUncheckedUpdateWithoutInventoryMappingInput>
    create: XOR<ConfigurationItemCreateWithoutInventoryMappingInput, ConfigurationItemUncheckedCreateWithoutInventoryMappingInput>
    where?: ConfigurationItemWhereInput
  }

  export type ConfigurationItemUpdateToOneWithWhereWithoutInventoryMappingInput = {
    where?: ConfigurationItemWhereInput
    data: XOR<ConfigurationItemUpdateWithoutInventoryMappingInput, ConfigurationItemUncheckedUpdateWithoutInventoryMappingInput>
  }

  export type ConfigurationItemUpdateWithoutInventoryMappingInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ciType_rel?: CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput
    outgoingRelationships?: CiRelationshipUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateWithoutInventoryMappingInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type CiRelationshipCreateManySourceCiInput = {
    id?: string
    targetCiId: string
    relationshipTypeId: string
    strength?: string | null
    criticality?: string | null
    description?: string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    discoveredDate?: Date | string | null
    isDiscovered?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type CiRelationshipCreateManyTargetCiInput = {
    id?: string
    sourceCiId: string
    relationshipTypeId: string
    strength?: string | null
    criticality?: string | null
    description?: string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    discoveredDate?: Date | string | null
    isDiscovered?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type CiIncidentCreateManyConfigurationItemInput = {
    incidentId: string
    relationshipType: string
    createdAt?: Date | string
  }

  export type CiChangeCreateManyConfigurationItemInput = {
    changeId: string
    relationshipType: string
    createdAt?: Date | string
  }

  export type CiBusinessServiceCreateManyConfigurationItemInput = {
    businessServiceId: string
    relationshipType: string
    criticality?: string | null
    createdAt?: Date | string
  }

  export type CiOwnershipCreateManyConfigurationItemInput = {
    id?: string
    ownershipType: string
    userId: string
    supportGroupId?: string | null
    isPrimary?: boolean
    isActive?: boolean
    startDate?: Date | string | null
    endDate?: Date | string | null
    responsibilities?: CiOwnershipCreateresponsibilitiesInput | string[]
    assignedAt?: Date | string
    assignedBy?: string | null
  }

  export type CmdbInventoryMappingCreateManyConfigurationItemInput = {
    id?: string
    inventoryAssetId: number
    mappingType: string
    relationship?: string | null
    syncEnabled?: boolean
    lastSyncAt?: Date | string | null
    syncStatus?: string | null
    syncErrors?: string | null
    conflictResolution?: string
    fieldMapping?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type CiRelationshipUpdateWithoutSourceCiInput = {
    id?: StringFieldUpdateOperationsInput | string
    strength?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    targetCi?: ConfigurationItemUpdateOneRequiredWithoutIncomingRelationshipsNestedInput
    relationshipType?: CiRelationshipTypeUpdateOneRequiredWithoutRelationshipsNestedInput
  }

  export type CiRelationshipUncheckedUpdateWithoutSourceCiInput = {
    id?: StringFieldUpdateOperationsInput | string
    targetCiId?: StringFieldUpdateOperationsInput | string
    relationshipTypeId?: StringFieldUpdateOperationsInput | string
    strength?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiRelationshipUncheckedUpdateManyWithoutSourceCiInput = {
    id?: StringFieldUpdateOperationsInput | string
    targetCiId?: StringFieldUpdateOperationsInput | string
    relationshipTypeId?: StringFieldUpdateOperationsInput | string
    strength?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiRelationshipUpdateWithoutTargetCiInput = {
    id?: StringFieldUpdateOperationsInput | string
    strength?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    sourceCi?: ConfigurationItemUpdateOneRequiredWithoutOutgoingRelationshipsNestedInput
    relationshipType?: CiRelationshipTypeUpdateOneRequiredWithoutRelationshipsNestedInput
  }

  export type CiRelationshipUncheckedUpdateWithoutTargetCiInput = {
    id?: StringFieldUpdateOperationsInput | string
    sourceCiId?: StringFieldUpdateOperationsInput | string
    relationshipTypeId?: StringFieldUpdateOperationsInput | string
    strength?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiRelationshipUncheckedUpdateManyWithoutTargetCiInput = {
    id?: StringFieldUpdateOperationsInput | string
    sourceCiId?: StringFieldUpdateOperationsInput | string
    relationshipTypeId?: StringFieldUpdateOperationsInput | string
    strength?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiIncidentUpdateWithoutConfigurationItemInput = {
    incidentId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiIncidentUncheckedUpdateWithoutConfigurationItemInput = {
    incidentId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiIncidentUncheckedUpdateManyWithoutConfigurationItemInput = {
    incidentId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiChangeUpdateWithoutConfigurationItemInput = {
    changeId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiChangeUncheckedUpdateWithoutConfigurationItemInput = {
    changeId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiChangeUncheckedUpdateManyWithoutConfigurationItemInput = {
    changeId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiBusinessServiceUpdateWithoutConfigurationItemInput = {
    relationshipType?: StringFieldUpdateOperationsInput | string
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businessService?: BusinessServiceUpdateOneRequiredWithoutConfigurationItemsNestedInput
  }

  export type CiBusinessServiceUncheckedUpdateWithoutConfigurationItemInput = {
    businessServiceId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemInput = {
    businessServiceId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiOwnershipUpdateWithoutConfigurationItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownershipType?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responsibilities?: CiOwnershipUpdateresponsibilitiesInput | string[]
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: SupportGroupUpdateOneWithoutOwnershipsNestedInput
  }

  export type CiOwnershipUncheckedUpdateWithoutConfigurationItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownershipType?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    supportGroupId?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responsibilities?: CiOwnershipUpdateresponsibilitiesInput | string[]
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiOwnershipUncheckedUpdateManyWithoutConfigurationItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownershipType?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    supportGroupId?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responsibilities?: CiOwnershipUpdateresponsibilitiesInput | string[]
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CmdbInventoryMappingUpdateWithoutConfigurationItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    inventoryAssetId?: IntFieldUpdateOperationsInput | number
    mappingType?: StringFieldUpdateOperationsInput | string
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    syncEnabled?: BoolFieldUpdateOperationsInput | boolean
    lastSyncAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncStatus?: NullableStringFieldUpdateOperationsInput | string | null
    syncErrors?: NullableStringFieldUpdateOperationsInput | string | null
    conflictResolution?: StringFieldUpdateOperationsInput | string
    fieldMapping?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CmdbInventoryMappingUncheckedUpdateWithoutConfigurationItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    inventoryAssetId?: IntFieldUpdateOperationsInput | number
    mappingType?: StringFieldUpdateOperationsInput | string
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    syncEnabled?: BoolFieldUpdateOperationsInput | boolean
    lastSyncAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncStatus?: NullableStringFieldUpdateOperationsInput | string | null
    syncErrors?: NullableStringFieldUpdateOperationsInput | string | null
    conflictResolution?: StringFieldUpdateOperationsInput | string
    fieldMapping?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    inventoryAssetId?: IntFieldUpdateOperationsInput | number
    mappingType?: StringFieldUpdateOperationsInput | string
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    syncEnabled?: BoolFieldUpdateOperationsInput | boolean
    lastSyncAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncStatus?: NullableStringFieldUpdateOperationsInput | string | null
    syncErrors?: NullableStringFieldUpdateOperationsInput | string | null
    conflictResolution?: StringFieldUpdateOperationsInput | string
    fieldMapping?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportGroupUpdateWithoutConfigurationItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    members?: SupportGroupMemberUpdateManyWithoutSupportGroupNestedInput
    permissions?: SupportGroupPermissionUpdateManyWithoutSupportGroupNestedInput
    ownerships?: CiOwnershipUpdateManyWithoutSupportGroupNestedInput
    escalationTarget?: SupportGroupUpdateManyWithoutEscalationSourceNestedInput
    escalationSource?: SupportGroupUpdateOneWithoutEscalationTargetNestedInput
  }

  export type SupportGroupUncheckedUpdateWithoutConfigurationItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    escalationGroup?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    members?: SupportGroupMemberUncheckedUpdateManyWithoutSupportGroupNestedInput
    permissions?: SupportGroupPermissionUncheckedUpdateManyWithoutSupportGroupNestedInput
    ownerships?: CiOwnershipUncheckedUpdateManyWithoutSupportGroupNestedInput
    escalationTarget?: SupportGroupUncheckedUpdateManyWithoutEscalationSourceNestedInput
  }

  export type SupportGroupUncheckedUpdateManyWithoutConfigurationItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    escalationGroup?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiTypeCreateManyParentTypeInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    category: string
    icon?: string | null
    color?: string | null
    isAbstract?: boolean
    isActive?: boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: string | null
    allowedStatuses?: CiTypeCreateallowedStatusesInput | string[]
    discoveryEnabled?: boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfigurationItemCreateManyCiType_relInput = {
    id?: string
    ciId: string
    name: string
    displayName?: string | null
    description?: string | null
    ciSubType?: string | null
    ciStatus?: string
    operationalStatus?: string | null
    environment?: string | null
    criticality?: string | null
    businessService?: string | null
    owner?: string | null
    technicalOwner?: string | null
    supportGroup?: string | null
    location?: string | null
    site?: string | null
    building?: string | null
    floor?: string | null
    room?: string | null
    rack?: string | null
    rackPosition?: string | null
    department?: string | null
    costCenter?: string | null
    installDate?: Date | string | null
    firstDiscoveredDate?: Date | string | null
    lastDiscoveredDate?: Date | string | null
    warrantyExpiryDate?: Date | string | null
    maintenanceExpiryDate?: Date | string | null
    retirementDate?: Date | string | null
    discoverySource?: string | null
    isDiscovered?: boolean
    lastScanDate?: Date | string | null
    purchasePrice?: Decimal | DecimalJsLike | number | string | null
    currentValue?: Decimal | DecimalJsLike | number | string | null
    vendor?: string | null
    manufacturer?: string | null
    model?: string | null
    serialNumber?: string | null
    assetTag?: string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type CiRelationshipTypeCreateManySourceCiTypeInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    isDirectional?: boolean
    category?: string | null
    targetCiTypeId?: string | null
    allowMultiple?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CiRelationshipTypeCreateManyTargetCiTypeInput = {
    id?: string
    name: string
    displayName?: string | null
    description?: string | null
    isDirectional?: boolean
    category?: string | null
    sourceCiTypeId?: string | null
    allowMultiple?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CiTypeUpdateWithoutParentTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isAbstract?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: NullableStringFieldUpdateOperationsInput | string | null
    allowedStatuses?: CiTypeUpdateallowedStatusesInput | string[]
    discoveryEnabled?: BoolFieldUpdateOperationsInput | boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    childTypes?: CiTypeUpdateManyWithoutParentTypeNestedInput
    configurationItems?: ConfigurationItemUpdateManyWithoutCiType_relNestedInput
    allowedRelationships?: CiRelationshipTypeUpdateManyWithoutSourceCiTypeNestedInput
    targetRelationships?: CiRelationshipTypeUpdateManyWithoutTargetCiTypeNestedInput
  }

  export type CiTypeUncheckedUpdateWithoutParentTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isAbstract?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: NullableStringFieldUpdateOperationsInput | string | null
    allowedStatuses?: CiTypeUpdateallowedStatusesInput | string[]
    discoveryEnabled?: BoolFieldUpdateOperationsInput | boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    childTypes?: CiTypeUncheckedUpdateManyWithoutParentTypeNestedInput
    configurationItems?: ConfigurationItemUncheckedUpdateManyWithoutCiType_relNestedInput
    allowedRelationships?: CiRelationshipTypeUncheckedUpdateManyWithoutSourceCiTypeNestedInput
    targetRelationships?: CiRelationshipTypeUncheckedUpdateManyWithoutTargetCiTypeNestedInput
  }

  export type CiTypeUncheckedUpdateManyWithoutParentTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isAbstract?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    attributeSchema?: NullableJsonNullValueInput | InputJsonValue
    validationRules?: NullableJsonNullValueInput | InputJsonValue
    defaultStatus?: NullableStringFieldUpdateOperationsInput | string | null
    allowedStatuses?: CiTypeUpdateallowedStatusesInput | string[]
    discoveryEnabled?: BoolFieldUpdateOperationsInput | boolean
    discoveryRules?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfigurationItemUpdateWithoutCiType_relInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateWithoutCiType_relInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput
    supportGroups?: SupportGroupUncheckedUpdateManyWithoutConfigurationItemsNestedInput
    hardwareDetails?: HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateManyWithoutCiType_relInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiRelationshipTypeUpdateWithoutSourceCiTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isDirectional?: BoolFieldUpdateOperationsInput | boolean
    category?: NullableStringFieldUpdateOperationsInput | string | null
    allowMultiple?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    targetCiType?: CiTypeUpdateOneWithoutTargetRelationshipsNestedInput
    relationships?: CiRelationshipUpdateManyWithoutRelationshipTypeNestedInput
  }

  export type CiRelationshipTypeUncheckedUpdateWithoutSourceCiTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isDirectional?: BoolFieldUpdateOperationsInput | boolean
    category?: NullableStringFieldUpdateOperationsInput | string | null
    targetCiTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    allowMultiple?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    relationships?: CiRelationshipUncheckedUpdateManyWithoutRelationshipTypeNestedInput
  }

  export type CiRelationshipTypeUncheckedUpdateManyWithoutSourceCiTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isDirectional?: BoolFieldUpdateOperationsInput | boolean
    category?: NullableStringFieldUpdateOperationsInput | string | null
    targetCiTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    allowMultiple?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiRelationshipTypeUpdateWithoutTargetCiTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isDirectional?: BoolFieldUpdateOperationsInput | boolean
    category?: NullableStringFieldUpdateOperationsInput | string | null
    allowMultiple?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sourceCiType?: CiTypeUpdateOneWithoutAllowedRelationshipsNestedInput
    relationships?: CiRelationshipUpdateManyWithoutRelationshipTypeNestedInput
  }

  export type CiRelationshipTypeUncheckedUpdateWithoutTargetCiTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isDirectional?: BoolFieldUpdateOperationsInput | boolean
    category?: NullableStringFieldUpdateOperationsInput | string | null
    sourceCiTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    allowMultiple?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    relationships?: CiRelationshipUncheckedUpdateManyWithoutRelationshipTypeNestedInput
  }

  export type CiRelationshipTypeUncheckedUpdateManyWithoutTargetCiTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isDirectional?: BoolFieldUpdateOperationsInput | boolean
    category?: NullableStringFieldUpdateOperationsInput | string | null
    sourceCiTypeId?: NullableStringFieldUpdateOperationsInput | string | null
    allowMultiple?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiRelationshipCreateManyRelationshipTypeInput = {
    id?: string
    sourceCiId: string
    targetCiId: string
    strength?: string | null
    criticality?: string | null
    description?: string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    validFrom?: Date | string | null
    validTo?: Date | string | null
    discoveredDate?: Date | string | null
    isDiscovered?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type CiRelationshipUpdateWithoutRelationshipTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    strength?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    sourceCi?: ConfigurationItemUpdateOneRequiredWithoutOutgoingRelationshipsNestedInput
    targetCi?: ConfigurationItemUpdateOneRequiredWithoutIncomingRelationshipsNestedInput
  }

  export type CiRelationshipUncheckedUpdateWithoutRelationshipTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    sourceCiId?: StringFieldUpdateOperationsInput | string
    targetCiId?: StringFieldUpdateOperationsInput | string
    strength?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiRelationshipUncheckedUpdateManyWithoutRelationshipTypeInput = {
    id?: StringFieldUpdateOperationsInput | string
    sourceCiId?: StringFieldUpdateOperationsInput | string
    targetCiId?: StringFieldUpdateOperationsInput | string
    strength?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    validFrom?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiBusinessServiceCreateManyBusinessServiceInput = {
    ciId: string
    relationshipType: string
    criticality?: string | null
    createdAt?: Date | string
  }

  export type CiBusinessServiceUpdateWithoutBusinessServiceInput = {
    relationshipType?: StringFieldUpdateOperationsInput | string
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    configurationItem?: ConfigurationItemUpdateOneRequiredWithoutBusinessServicesNestedInput
  }

  export type CiBusinessServiceUncheckedUpdateWithoutBusinessServiceInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CiBusinessServiceUncheckedUpdateManyWithoutBusinessServiceInput = {
    ciId?: StringFieldUpdateOperationsInput | string
    relationshipType?: StringFieldUpdateOperationsInput | string
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiscoveredItemCreateManyDiscoveryRunInput = {
    id?: string
    ciId?: string | null
    discoveredData: JsonNullValueInput | InputJsonValue
    fingerprint: string
    status: string
    processingNotes?: string | null
    discoveredAt?: Date | string
    processedAt?: Date | string | null
  }

  export type DiscoveredItemUpdateWithoutDiscoveryRunInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: NullableStringFieldUpdateOperationsInput | string | null
    discoveredData?: JsonNullValueInput | InputJsonValue
    fingerprint?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    processingNotes?: NullableStringFieldUpdateOperationsInput | string | null
    discoveredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DiscoveredItemUncheckedUpdateWithoutDiscoveryRunInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: NullableStringFieldUpdateOperationsInput | string | null
    discoveredData?: JsonNullValueInput | InputJsonValue
    fingerprint?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    processingNotes?: NullableStringFieldUpdateOperationsInput | string | null
    discoveredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DiscoveredItemUncheckedUpdateManyWithoutDiscoveryRunInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: NullableStringFieldUpdateOperationsInput | string | null
    discoveredData?: JsonNullValueInput | InputJsonValue
    fingerprint?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    processingNotes?: NullableStringFieldUpdateOperationsInput | string | null
    discoveredAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SupportGroupMemberCreateManySupportGroupInput = {
    id?: string
    userId: string
    role?: string
    isPrimary?: boolean
    isActive?: boolean
    startDate?: Date | string | null
    endDate?: Date | string | null
    assignedAt?: Date | string
    assignedBy?: string | null
  }

  export type SupportGroupPermissionCreateManySupportGroupInput = {
    id?: string
    resource: string
    action: string
    scope?: string | null
    conditions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    grantedAt?: Date | string
    grantedBy?: string | null
  }

  export type CiOwnershipCreateManySupportGroupInput = {
    id?: string
    ciId: string
    ownershipType: string
    userId: string
    isPrimary?: boolean
    isActive?: boolean
    startDate?: Date | string | null
    endDate?: Date | string | null
    responsibilities?: CiOwnershipCreateresponsibilitiesInput | string[]
    assignedAt?: Date | string
    assignedBy?: string | null
  }

  export type SupportGroupCreateManyEscalationSourceInput = {
    id?: string
    name: string
    description?: string | null
    type?: string
    email?: string | null
    phone?: string | null
    manager?: string | null
    isActive?: boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: number | null
    externalId?: string | null
    adGroupDn?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type SupportGroupMemberUpdateWithoutSupportGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportGroupMemberUncheckedUpdateWithoutSupportGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportGroupMemberUncheckedUpdateManyWithoutSupportGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportGroupPermissionUpdateWithoutSupportGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    conditions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    grantedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grantedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportGroupPermissionUncheckedUpdateWithoutSupportGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    conditions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    grantedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grantedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportGroupPermissionUncheckedUpdateManyWithoutSupportGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    conditions?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    grantedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grantedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ConfigurationItemUpdateWithoutSupportGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ciType_rel?: CiTypeUpdateOneRequiredWithoutConfigurationItemsNestedInput
    outgoingRelationships?: CiRelationshipUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUpdateManyWithoutConfigurationItemNestedInput
    hardwareDetails?: HardwareCiUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateWithoutSupportGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outgoingRelationships?: CiRelationshipUncheckedUpdateManyWithoutSourceCiNestedInput
    incomingRelationships?: CiRelationshipUncheckedUpdateManyWithoutTargetCiNestedInput
    incidents?: CiIncidentUncheckedUpdateManyWithoutConfigurationItemNestedInput
    changes?: CiChangeUncheckedUpdateManyWithoutConfigurationItemNestedInput
    businessServices?: CiBusinessServiceUncheckedUpdateManyWithoutConfigurationItemNestedInput
    ownership?: CiOwnershipUncheckedUpdateManyWithoutConfigurationItemNestedInput
    inventoryMapping?: CmdbInventoryMappingUncheckedUpdateManyWithoutConfigurationItemNestedInput
    hardwareDetails?: HardwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    softwareDetails?: SoftwareCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    applicationDetails?: ApplicationCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    networkDetails?: NetworkCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    serviceDetails?: ServiceCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    databaseDetails?: DatabaseCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    virtualDetails?: VirtualCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
    facilityDetails?: FacilityCiUncheckedUpdateOneWithoutConfigurationItemNestedInput
  }

  export type ConfigurationItemUncheckedUpdateManyWithoutSupportGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    displayName?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ciType?: StringFieldUpdateOperationsInput | string
    ciSubType?: NullableStringFieldUpdateOperationsInput | string | null
    ciStatus?: StringFieldUpdateOperationsInput | string
    operationalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    environment?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    businessService?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: NullableStringFieldUpdateOperationsInput | string | null
    technicalOwner?: NullableStringFieldUpdateOperationsInput | string | null
    supportGroup?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    site?: NullableStringFieldUpdateOperationsInput | string | null
    building?: NullableStringFieldUpdateOperationsInput | string | null
    floor?: NullableStringFieldUpdateOperationsInput | string | null
    room?: NullableStringFieldUpdateOperationsInput | string | null
    rack?: NullableStringFieldUpdateOperationsInput | string | null
    rackPosition?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    costCenter?: NullableStringFieldUpdateOperationsInput | string | null
    installDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    firstDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastDiscoveredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    warrantyExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maintenanceExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discoverySource?: NullableStringFieldUpdateOperationsInput | string | null
    isDiscovered?: BoolFieldUpdateOperationsInput | boolean
    lastScanDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchasePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    vendor?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: NullableStringFieldUpdateOperationsInput | string | null
    assetTag?: NullableStringFieldUpdateOperationsInput | string | null
    customFields?: NullableJsonNullValueInput | InputJsonValue
    attributes?: NullableJsonNullValueInput | InputJsonValue
    tags?: ConfigurationItemUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiOwnershipUpdateWithoutSupportGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownershipType?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responsibilities?: CiOwnershipUpdateresponsibilitiesInput | string[]
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: NullableStringFieldUpdateOperationsInput | string | null
    configurationItem?: ConfigurationItemUpdateOneRequiredWithoutOwnershipNestedInput
  }

  export type CiOwnershipUncheckedUpdateWithoutSupportGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    ownershipType?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responsibilities?: CiOwnershipUpdateresponsibilitiesInput | string[]
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CiOwnershipUncheckedUpdateManyWithoutSupportGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    ciId?: StringFieldUpdateOperationsInput | string
    ownershipType?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    responsibilities?: CiOwnershipUpdateresponsibilitiesInput | string[]
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportGroupUpdateWithoutEscalationSourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    members?: SupportGroupMemberUpdateManyWithoutSupportGroupNestedInput
    permissions?: SupportGroupPermissionUpdateManyWithoutSupportGroupNestedInput
    configurationItems?: ConfigurationItemUpdateManyWithoutSupportGroupsNestedInput
    ownerships?: CiOwnershipUpdateManyWithoutSupportGroupNestedInput
    escalationTarget?: SupportGroupUpdateManyWithoutEscalationSourceNestedInput
  }

  export type SupportGroupUncheckedUpdateWithoutEscalationSourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    members?: SupportGroupMemberUncheckedUpdateManyWithoutSupportGroupNestedInput
    permissions?: SupportGroupPermissionUncheckedUpdateManyWithoutSupportGroupNestedInput
    configurationItems?: ConfigurationItemUncheckedUpdateManyWithoutSupportGroupsNestedInput
    ownerships?: CiOwnershipUncheckedUpdateManyWithoutSupportGroupNestedInput
    escalationTarget?: SupportGroupUncheckedUpdateManyWithoutEscalationSourceNestedInput
  }

  export type SupportGroupUncheckedUpdateManyWithoutEscalationSourceInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    manager?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    businessHours?: NullableJsonNullValueInput | InputJsonValue
    slaTarget?: NullableIntFieldUpdateOperationsInput | number | null
    externalId?: NullableStringFieldUpdateOperationsInput | string | null
    adGroupDn?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}