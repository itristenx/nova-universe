# Nova Universe Production Environment Configuration
# CRITICAL: This file contains production security settings
# Copy this file to .env and fill in actual values before deployment

# ===========================================
# CORE APPLICATION SETTINGS
# ===========================================
NODE_ENV=production
API_PORT=3000
HOST=0.0.0.0

# ===========================================
# SECURITY CONFIGURATION (CRITICAL)
# ===========================================
# Generate these with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=REPLACE_WITH_64_CHAR_SECURE_RANDOM_STRING
SESSION_SECRET=REPLACE_WITH_64_CHAR_SECURE_RANDOM_STRING
ASSET_ENCRYPTION_KEY=REPLACE_WITH_32_CHAR_SECURE_RANDOM_STRING

# Authentication tokens (generate secure random tokens)
SCIM_TOKEN=REPLACE_WITH_SECURE_SCIM_TOKEN
KIOSK_TOKEN=REPLACE_WITH_SECURE_KIOSK_TOKEN

# ===========================================
# DATABASE CONFIGURATION (CRITICAL)
# ===========================================
# PostgreSQL (Primary Database) - MUST use strong passwords
CORE_DATABASE_URL=postgresql://nova_admin:STRONG_PASSWORD_HERE@postgres:5432/nova_core?schema=public
POSTGRES_DB=nova_core
POSTGRES_USER=nova_admin
POSTGRES_PASSWORD=STRONG_PASSWORD_HERE
POSTGRES_PORT=5432

# Auth Database
AUTH_DATABASE_URL=postgresql://nova_auth:STRONG_PASSWORD_HERE@postgres:5432/nova_auth?schema=public
AUTH_DB_HOST=postgres
AUTH_DB_PORT=5432
AUTH_DB_NAME=nova_auth
AUTH_DB_USER=nova_auth
AUTH_DB_PASSWORD=STRONG_PASSWORD_HERE

# Core Database
CORE_DB_HOST=postgres
CORE_DB_PORT=5432
CORE_DB_NAME=nova_core
CORE_DB_USER=nova_admin
CORE_DB_PASSWORD=STRONG_PASSWORD_HERE

# MongoDB (Analytics & Audit Logging) - MUST use strong password
AUDIT_DATABASE_URL=mongodb://nova_admin:STRONG_PASSWORD_HERE@mongodb:27017/nova_audit?authSource=admin
AUDIT_DB_USER=nova_admin
AUDIT_DB_PASSWORD=STRONG_PASSWORD_HERE
MONGO_ROOT_USER=nova_admin
MONGO_ROOT_PASSWORD=STRONG_PASSWORD_HERE

# Redis (Caching & Sessions) - MUST use strong password
REDIS_URL=redis://:STRONG_PASSWORD_HERE@redis:6379
REDIS_PASSWORD=STRONG_PASSWORD_HERE

# Elasticsearch (Search Engine) - MUST use strong password
ELASTICSEARCH_URL=http://elasticsearch:9200
ELASTIC_USERNAME=elastic
ELASTIC_PASSWORD=STRONG_PASSWORD_HERE

# ===========================================
# SSL/TLS CONFIGURATION (REQUIRED FOR PRODUCTION)
# ===========================================
TLS_CERT_PATH=/etc/ssl/certs/nova-universe.crt
TLS_KEY_PATH=/etc/ssl/private/nova-universe.key
POSTGRES_SSL_REJECT_UNAUTHORIZED=true
POSTGRES_SSL_CA=/etc/ssl/certs/ca-certificates.crt

# ===========================================
# SAML SSO CONFIGURATION (IF USING SSO)
# ===========================================
SAML_ENABLED=true
SAML_ENTRY_POINT=https://your-idp.com/sso/saml
SAML_ISSUER=nova-universe-production
SAML_CALLBACK_URL=https://your-domain.com/auth/saml/callback
SAML_CERT=-----BEGIN_CERTIFICATE-----...-----END_CERTIFICATE-----
SAML_PRIVATE_KEY=-----BEGIN_PRIVATE_KEY-----...-----END_PRIVATE_KEY-----

# ===========================================
# EMAIL CONFIGURATION (REQUIRED FOR PRODUCTION)
# ===========================================
SMTP_HOST=smtp.your-provider.com
SMTP_PORT=587
SMTP_SECURE=true
SMTP_USER=noreply@your-domain.com
SMTP_PASS=SECURE_SMTP_PASSWORD
SMTP_FROM_NAME=Nova Universe
SMTP_FROM_EMAIL=noreply@your-domain.com

# ===========================================
# CORS & SECURITY SETTINGS
# ===========================================
# Restrict CORS to your actual domains (DO NOT use * in production)
CORS_ORIGINS=https://your-domain.com,https://app.your-domain.com
DISABLE_AUTH=false

# Rate limiting (adjust based on your needs)
RATE_LIMIT_WINDOW=900000
SUBMIT_TICKET_LIMIT=10
API_LOGIN_LIMIT=5
AUTH_LIMIT=5

# ===========================================
# MONITORING & LOGGING
# ===========================================
LOG_LEVEL=info
LOG_FORMAT=json
LOG_RETENTION_DAYS=90
ENABLE_REQUEST_LOGGING=true

# ===========================================
# EXTERNAL INTEGRATIONS (OPTIONAL)
# ===========================================
# Slack Integration
SLACK_BOT_TOKEN=xoxb-your-bot-token
SLACK_SIGNING_SECRET=your-signing-secret
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# HelpScout Integration
HELPSCOUT_API_KEY=your-helpscout-api-key
HELPSCOUT_MAILBOX_ID=your-mailbox-id

# Microsoft Teams
TEAMS_WEBHOOK_URL=https://your-tenant.webhook.office.com/webhookb2/...

# AI/ML API Keys (if using AI features)
OPENAI_API_KEY=sk-your-openai-api-key
ANTHROPIC_API_KEY=sk-ant-your-anthropic-api-key

# ===========================================
# ADMIN ACCOUNT (CHANGE IMMEDIATELY AFTER DEPLOYMENT)
# ===========================================
ADMIN_EMAIL=admin@your-domain.com
ADMIN_NAME=System Administrator
ADMIN_PASSWORD=CHANGE_THIS_IMMEDIATELY_AFTER_DEPLOYMENT

# ===========================================
# UAT TESTING CREDENTIALS (OPTIONAL)
# ===========================================
UAT_ADMIN_PASSWORD=SECURE_UAT_ADMIN_PASSWORD
UAT_AGENT_PASSWORD=SECURE_UAT_AGENT_PASSWORD
UAT_USER_PASSWORD=SECURE_UAT_USER_PASSWORD

# ===========================================
# SECURITY CHECKLIST
# ===========================================
# Before going live, ensure:
# 1. All passwords are strong (12+ chars, mixed case, numbers, symbols)
# 2. JWT_SECRET and SESSION_SECRET are cryptographically secure
# 3. Database passwords are unique and strong
# 4. SSL/TLS certificates are properly configured
# 5. CORS_ORIGINS is restricted to your actual domains
# 6. Admin password is changed from default
# 7. All API keys are valid and properly scoped
# 8. Monitoring and alerting are configured
# 9. Backup procedures are in place
# 10. Security scan/penetration test completed
